<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>少数派 -- Matrix</title>
        <link>https://sspai.com/matrix</link>
        
        <item>
            <id>https://sspai.com/post/87694</id>
            <title>我如何管理自己的「数字资产」</title>
            <link>https://sspai.com/post/87694</link>
            <guid isPermaLink="false">https://sspai.com/post/87694</guid>
            <pubDate></pubDate>
            <updated>Sun, 31 Mar 2024 07:54:26 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Matrix, 内容创作, 数字资产, 信息管理
<br>
<br>
总结: 本文主要讨论了如何管理个人的数字资产，包括信息的获取、管理和分享。作者分享了自己在数字资产管理方面的经验和思考，强调了信息管理的重要性和挑战。文章提到了数字资产管理的难点在于数量庞大，但管理是必不可少的。通过对不同类型信息的管理，可以让生活更为自己所掌握。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐&nbsp;</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp; 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;</p><p style="margin-left: 0px;">文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>本文实际上算做 PIM 领域的内容，但首先笔者并不是从事有关研究的学术人员，其次这个话题的庞大程度也远远不是一篇文章可以说的清的。因此在这里仅仅可以浅显地分享一些个人经验，聊聊我是如何管理自己的「数字资产」的，也就是特别分享我如何管理我的狭义的数字信息而不涉及更广泛的含义。既为自己梳理自己目前的管理思路，也希望通过提供我个人的具体思考和做法，在与大家的交流中得到启发、碰撞出些新观点，能对读者产生些帮助就更好了。希望题目并没有把调定得太高了些。</p><p>另在开始之前想说的是，工具只反映个人偏好，一切信息组织的分享都基于我个人的经验。工具或许与你输出的效率相关，但与你输出的质量不会有非常明显的关联。使用纸笔写作的莎士比亚不也至今都没有人超越吗？选取工具时，也一定要确保它的退出机制是完善的。如果你现在就离开它，不会受到很大的阻力。这能保证当你可因为各种原因弃用当前工具时，不至于产生持续和无可挽回的损失。</p><p>另外本文分享主要基于 Apple 平台，因此部分提及的软件可能不提供全平台支持。但我想管理的思想是互通的。本文中提及的软件与作者无任何利益关系，本文未提及的软件也因为篇幅以及作者并无深度体验，盲目给出意见可能不合适。</p><h2>进行「数字资产」管理 —— 让生活更为自己所掌握</h2><p>我们在数字世界中的信息、我们能够掌控的部分，仅限于本文将要讨论的范围内，总的来说有四类：一是外界对我们产生的信息（例如一场安排在明天上午的会议）、我们向外界提供的信息（例如在社媒上披露的自我信息）和我们从外界获得的信息（我们阅读的文章、获取的知识等等），以及我们自我产生的信息（例如这篇文章）。</p><p>其实有关的方法论已经非常多，但是无论哪种方法论，如果无法应用到自己的工作流中，不能把它具体化，相应地就不会那么好执行。如果不想让自己的数字世界陷入一片盘古开天地前的混沌状态下，我们总需要适当的对自己的「数字资产」进行管理。</p><p>我们在和个人数字终端交互时，如果你不是一名命令行拥趸的话（当然相信我派应该有不少极客），大概率使用的是一套图形界面。因此本文也是从图形界面入手，几乎没有什么涉及命令行的部分。即使是 PKM 领域，无论我们如何组织文件路径、双向链接、标签，其实本质上反映出来我们对信息的一种思考和安排。</p><p>总体上我偏向认为人们没办法真正井井有条地组织和管理与自己有关的信息。因为这类信息实在是太多了，无论从获取、管理还是干涉中的哪一个纬度上，我们都没办法把事情完全掌控在手中。但是完全不进行管理也是不太现实的。</p><p>个人信息管理最大的难点其实是数量。如果现在有一名喜好读书的个体 A，在 A 拥有 300 册纸质书之前，可能他的管理都是比较轻松的。他几乎可以随意放置他的书籍，随后仅仅通过自己的记忆力就找到对应书籍的位置。但当这个数字扩大 100 倍，当 A 拥有 30000 册书之后，他的图书管理就变成了一件非常必要的事情了。假使不对这 30000 册书进行管理，除非拥有超绝的记忆力，他几乎不可能在 30000 册书中迅速找到自己需要的那些。</p><p>而涉及到数字资产上，由于数字资产获取和储存的天然便利性，你的数字资产库可能会相当庞大。只需要简单查看一眼自己的电脑硬盘或移动硬盘、网盘等，我们就能发现不使用的软件安装包、过时的截图、学生时期的课业论文、上个月的业绩报告、结束的恋情证明（误）等等。如果你恰好在某一领域是一名爱好者，那你可能还会拥有巨量的 4K 影视数据、无损音乐文件、高清图片等等。</p><p>在今天的数字生活中，仅仅是从外界获取到的信息一部分规模就已经无比庞大。读者甚至只需要简单查看一下自己关注的公众号数量和这些公众号近三个月以来发送的推文量就能直观地感受到信息的膨胀程度。我们当然可以通过筛选优质信息源来实现信息管理的精简，但是时间一长，信息依然会越积越多。</p><p>所以除非不做管理——只要你希望对内容进行简单梳理，确保它们不只是「过江之鲫」，信息管理就几乎是必须要进行的。</p><p>我们每个人的数字资产和所需要管理的范围是不同的。对于一个喜好电子游戏的个体而言，他可能会希望可以合理地管理他拥有的不同平台上的不同的游戏，自己对游戏的偏好设置，游戏的存档和备份、账号和密码的管理等等。</p><p>总的来看，四类信息中，<strong>我们接收的信息</strong>相对应该是大部分人都需要管理、规模也比较庞大的一类，下文也会相应重点提及这类信息的管理。</p><p><strong>我们向外界提供的信息</strong>则相对没有那么好管理，尽管现在各类互联网平台的个人数据<a href="https://www.gov.cn/xinwen/2021-06/11/content_5616919.htm">处理</a>和<a href="https://www.gov.cn/xinwen/2021-08/20/content_5632486.htm">保护</a>大都有有关法案提供依据，但这类资产的管理难度对普通用户还是有一定挑战，导出也不能说是非常方便。我们这里不对这类信息资产的管理作过多讨论，也可参阅站内的这几篇文章：</p><ul><li>《<a href="https://sspai.com/post/44715">Apple 和 Google 保存了哪些个人数据？现在你可以把它们下载下来看看</a>》</li><li>《<a href="https://sspai.com/post/44706">关于 GDPR 你需要了解的一切</a>》</li><li>《<a href="https://sspai.com/prime/story/apple-data-export">啃了一口的苹果可以打包带走吗？——Apple 数据导出功能观察</a>》</li><li>《<a href="https://sspai.com/post/73809%20https://sspai.com/post/73809">互联网时代下的个人信息保护——与数据合规</a><a href="https://sspai.com/post/73809">律师</a><a href="https://sspai.com/post/73809%20https://sspai.com/post/73809">对谈</a>》</li><li>《<a href="https://sspai.com/post/65277">如何更好地保护手机数据隐私？这 10 款 App 你可能用得上</a>》</li></ul><p>另一类重要的信息是<strong>外界向我们产生的信息</strong>，单这样说起来可能显得有些抽象。落实到具体的情境下，其实就是如一些需要参加的会议安排、协作进程时安排给自己的任务等等。这类信息很容易需要与外界信息管理产生联系，后者我们这里不做过多讨论了，笔者个人的观点还是尽量让工作的归工作、个人的归个人，这与下文我将要提到的分 Profile 来管理内容也算相似的思想。工作需要的一些不过仅仅是个人观点，读者还是要选择适合自己的管理思路和模式。</p><p><strong>个人产生的信息</strong>中，即使你并不是一个创作者，不讨论艺术作品、文章、摄影作品等内容的情景下，你发布的博客、朋友圈内容和记在某些应用内的私人日记也都可以算在内。如果涉及发布的话，笔者以为在这里的一条基本原则还是两者应该分开保存，原始的创作内容和稿件还是尽量要做好整理和安排。在不是创作者的情况下，据我观察，多数人的主要内容还是集中在社媒平台上的，对于这类内容，我认为采取下文说到的库型管理的方式，就把它们放置在应用本身内即可，重点是做好原始文本的备份（作为个人产生的信息而不是向外界提供的信息，同时也减少从大都封闭的社媒中导出的心力）。</p><p>在积累之前，我们的数字资产是从一片混沌中出发的。有的人会完全安排妥当自己的日程、待办事项、笔记和知识系统、文件归档。有些人则完全不做安排，拉好清单就行动。对是否需要管理或调整管理方法，我认为读者在数字生活中如果遇到下面这两个问题，那么就有必要尝试一下了：</p><ol><li>你现在的工作流紊乱不堪，影响到你的正常工作效率乃至情绪状态</li><li>你常常无法合理安排事项并因此带来过多的失误乃至影响生活质量</li></ol><p>如果没有遇到问题，那么其实笔者认为或许你并不是那么需要调整目前的管理方式，尽管我们强调对未来风险的承受能力，但过度杞人忧天亦是一种失位。适合自己的才是最好的，当一套系统在目前能够满足需求时，还是应该先分清楚在当前进行管理方式调整是否影响自己正在专注的领域和项目。</p><p>希望大家的管理都是需求驱动的。</p><h2>PARA 的启示 —— 认识到自己的有限</h2><p>我们先从 PARA 说起。PARA 为 Project、Area、Resource 和 Archive 四个词的缩写，是由 Tiago Frote 提出的一套数字资产组织方法论。</p><figure class="image ss-img-wrapper"><img alt="image" src="https://cdn.sspai.com/2024/03/30/article/35c7692f5be072d6f32ef6fcbb0b726d.tiff?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>PARA 的示意图，来自 Tiago Forte 的<a href="https://fortelabs.com/blog/para/">文章</a></figcaption></figure><p>PARA 的提出者 Tiago Forte 在<a href="https://fortelabs.com/blog/para/">他的文章</a>中提到：</p><blockquote><p>如果你的管理系统和你的人生一样复杂，那可能光是维持它就足以耗尽你用以生活的时间和精力了。</p></blockquote><p>同时他特别强调了「项目」和项目分割的重要性：</p><blockquote><p>无论你的职责有多广泛，你总可以把它们拆解成更小的项目。如果你想知道你是否真的在朝着目标前进，你就必须这么做。</p></blockquote><p>我认为这两句引自 Tiago Forte 的话一方面说明了 PARA 方法的真谛，同时也说明了个人数字资产管理的真谛—— <strong>足够简单和易维护</strong>、<strong>明确专注领域</strong>。</p><p>我们都是有限的人，不是无限的人，过度复杂的系统设计所带来的时间与精力的损失和生活中真正有价值、需要我们专注的部分——陪伴家人、提升自我、享受生活是有冲突的，是得不偿失的。过多的专注领域带来的精力分散也可能导致我们最终无法从事或完成我们真正偏好想去完成的任务。</p><p>因此在数字资产管理方法上笔者的基本观点就是这套系统一定需要足够接近直觉，这个直觉未必是符合所有人的直觉，但一定要符合你本人的直觉，那么它对你来说就是易维护和相对足够简单的；另一点在于一定要明确专注领域，我们需要找到当前希望专注的领域有哪些，然后尽量缩小这个范围，从中选取出目前最被偏好的一到两个无论社会意义还是个人意义都很必要的领域进行专注，这当然不是说应该放弃其他的领域，但是只有明确了所有关注领域中最重要的那部分，我们才能更有效率的做到自我提升或其他目标，以尽量减少不那么偏好的领域的干扰。毕竟世界上鲜少有人能在同一时间学习算法、金融知识、工程水利、乐器演奏和影视制作等相对差异比较大的领域、还在每一项上都取得成功的。</p><p>你应该要把你目前的事情拆分成一个个可执行的目标，具象到文件中其实就是 Project 式的组织方式。这是很自洽的。所以其实好的个人管理系统应该是像数学那样，可以在自己的舒适范围内自洽的。它当然也可能遇到「无理数危机」，但重点是能够被迅速的修复。它要是动态的、不能一成不变的。它应该是帮助我们聚焦于自己的人生和目标，而不是为了为自己建立一套机械式行为准则的。它需要是可定制化的，服从个体不同需求的。</p><p>另外很重要的一点是，我们需要能分清楚什么是哪些资产是「负面资产」，在容易处理的情况下，我们应该尽可能地清理掉它们，而不是一昧留存着这些内容占据。关于这类内容的认定我想不同的人会有不同的观点，通常来讲你删去过去自己发布的现在认为会很尴尬的帖子等行为就可以被认定为一种清理负面数字资产的行为。它可能是和你的负面情绪相绑定的，清理掉这类内容会带来一种心理和情绪上的释放。</p><p>就我个人而言，引入工具时，工具的存在感尽量低一些会比较轻松（当然这个存在感高低可能不同的用户也会有不同的想法，像我的话，如果 UI 做的比较难看，它在我眼里会非常突出），因此才能把目光聚焦在自己要做的事情之上而不是额外的去关注其他内容，这也是给自己的心智减负。如果后期仍然有其他的需求，也可以基于原来的设计慢慢进行添加和调整。这种选择中所做的工具权衡就要看每个人差异化的偏好了。</p><h2>基于项目和库的「数字资产」管理 —— 我个人的组织方法</h2><p>PARA 的核心是以项目组织，着眼于重要的领域。我使用的管理方法虽然吸收了有关想法，但没有完全按照 PARA 来进行，这里大量引用的主要原因是希望去强调一些它的方法论。在具体应用上，我想分享一下我个人的思路。</p><p>总体来看，目前 Apple 平台的信息组织上，如果不引入其他方式，大致是以纯文件夹进行组织的形式和以 Apple 的利用「资源库」思路组织信息的形式。这类「资源库」往往是基于某个具体软件的。那么基于这两种组织形式大概就有以下两种管理方式：</p><p>一是纯粹使用文件夹来组织，最大化文件夹使用以减少对具体软件特色功能的依赖，这种方式通常提高了兼容性和安全性，但相对的会对使用软件特色功能的便利性造成损失。同时实质上还是过去那一套对内容进行管理的思考，很容易重新陷入对不同方法论的思考和斟酌中。如果引入「项目」概念进行组织，我们可以参考编程项目的分类方法或者参照工程文件、引用（参考）、手册、笔记、素材（附件、资源）等种类划分，在自己的具体的「项目」文件夹内存放所有与此项目相关的资产。在不引入其他方式的情况下，这种做法会让文档的复用性变得比较低。另外，当项目太多或者某个项目特别大时，识别项目和查找可能依然会成为问题。</p><p>二是使用资源库黑箱式的管理方法，也就是充分发挥软件本身的特点来管理内容。以 Apple 原生应用为例，在 Photos 中就使用 Album 和 Album Group 来管理，在 Music 中就使用 Playlist 和其他提供的 View 来管理，Reminders 中则是 Group 和 List 来管理等等。这可能会造成对软件的强依赖，但好处是更加灵活、更容易发挥软件自己的优势。</p><p>我在「数字资产」管理上的习惯，基本上算是对上面两种方法的糅合。不过关于在使用具体哪种方法进行组织上，还是认为适合自己的才是最好的。</p><h3>使用「资源库」进行管理</h3><p>这一点上，我吸取了浏览器 Profile 的特点。当你在浏览器中建立一个不同的 Profile 时，你的 cookies 和书签等等，都可以是不相同的。在<a href="https://sspai.com/post/84931">介绍 Arc 的文章</a>中提到过我习惯使用不同的应用实现 Profile 上的隔离，因此在软件使用上我也结合软件特色基本采取了这种方式。这里我就只说说我如何实现阅读内容的管理的，或者广义一些，算是开头提到的「我们从外界获取的信息」。</p><p>在文章上，当阅读公众号时，其他应用的抓取会非常困难，因此我习惯使用 Cubox 来实现公众号的阅读；Net News Wire 则用以阅读娱乐性的 RSS 内容，即使我不记录这些内容，对我个人偏好而言也没有任何损失。最重要的文章则应该尽快阅读，实在当下没有时间读的的则添加到 Safari 阅读列表来促进我尽快阅读。其他文章我则直接在网站上阅读或添加至 Readwise Reader 阅读。</p><p>书籍的话，抛开纸质书不谈，Calibre 和 Apple Books 是我主要的阅览工具。PDF 的话也可以考虑 Margin Note，不过协同起来相对麻烦。我更倾向于直接存到 Apple Books 中，在需要的时候随时取用即可，不需要的情况下也可以直接进行归档流程（归档是我稍后会讨论的另外一个简单的话题）。我选择 Apple Books 主要是因为它的 UI 非常简洁，在多端设备上的同步和查看都比较方便（PDF 还是会用 PDF 的阅读器来看的）。不过需要注意的是，似乎从 Apple Books 中导入再导出的 EPUB 文件常常会遇到解析问题。Calibre 则为应对这些问题做准备，主要充当一个资源库作用。</p><figure class="ss-imgRows"><img alt="" src="https://cdn.sspai.com/2024/03/30/00c08f14213a0025d029353333a24400.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdn.sspai.com/2024/03/30/a2237cb4bd20ffdf9c47f5dc33b56a34.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这个阅读流程看似引入了非常多的软件，但因为非常契合我的需求，实际使用上倒很有效，帮助我读完了大量的文章和作品。另外很大的一个原因在于上面提到的大部分工具都可以通过 Readwise 的高亮导入得到同步，利用 Readwise，基本上能完全实现对「从外界过去的信息」内容的整理。我也可以通过 Readwise 直接扫描纸质书的摘录并在后面的工作流中同步至我的笔记软件 Obsidian 中，进而在笔记软件中把信息化为知识。</p><figure class="image ss-img-wrapper"><img alt="image" src="https://cdn.sspai.com/2024/03/30/article/0903a16455135db875599bedc1ccaa13.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Readwise 生成的纸质书摘录分享卡</figcaption></figure><p>这些自动化操作减少了我的操作步骤，基本上我只需要点击文章，阅读、高亮、添加思考和笔记即可，因此尽管看似引入了不少应用，操作起来却很适合我个人。</p><h3>整理上以项目为中心</h3><p>因为其实主要的资源都几乎交给了具体软件的「资源库」来管理，所以其实在「资源库」之外主要就是建立「项目」相关的文件夹了。需要注意的是，只有使用「资源库」管理时没有那么方便的时候，我才会建立「项目」文件夹。这两种方式是相辅相成的。项目文件夹我通常直接建立在桌面，完成后直接移到统一的位置即可，这里我个人习惯是压缩后直接归档。</p><p>举一个具体的例子来说，假定我现在有一个报告项目，那么我需要搜集与这个项目有关的法规、数据报告、进行数据分析、收集有关图片并且制作演示文稿。可能还需要再导出一份 PDF 版的文档。在这种情形下，我们就可以使用项目来组织内容，并且为这个项目建立一个具体的文件夹。但如果这是一个短片的剪辑，那只需要简单的把有关文件导入到 Final Cut Pro 的资源库内进行统一管理。当然版本备份和有关文档也可以再存到一个包含了上面资源库的项目文件夹内，就实现了两者的统一。</p><p>如果在我们进行的这个报告项目中，需要使用到过去积累到的一些内容或者文件呢？并且这些文件还需要进行复用。目前看来，在不引入其他工具的情况下，最好的办法可能就是直接从你的「资源库」中复制一份需要使用的文件添加到项目文件夹中作为素材使用。</p><p>如果不愿意这样做，目前笔者推荐两种方法来应对这种情况。一种是使用 Hookmark，它能将 macOS 中所有的文件互相引用和链接到一起，也就轻松解决了这类问题。另一种方法是使用 DEVONThink，在 DEVONThink 中建立有关的项目文件夹，然后通过 DEVONThink 提供的 Replicate 功能使得一份文件同时出现在两个位置，在这种情况下，项目文件夹和资源文件夹中的共同存在就实现了。总的说来笔者个人还是更偏好从「资源库」中拷贝出来的做法的，简单高效。Hookmark 虽然灵活一些，但容易形成依赖。</p><p>通过各个软件各司其职的做法，在事实上减少了自己的数字资产管理需求，我能够在需要某些内容时直接打开对应的软件，即可查找和使用对应的资产。因为各个软件的需求不同，所以当某一个软件不符合我的需求时，我可以直接丢弃掉它而进行切换。当然这需要你选择的软件不具备强依赖性。像一些完全无法导出/导出数据非常困难、使用独有格式且开发历史短、大型公司非核心业务类软件通常都不是特别好的选择。抛开云盘归档和不重要的文章外，我个人也不太喜欢使用纯云端的应用，最好我现在需要的应用和内容我都可以通过我的 Finder 和应用访问到。</p><p>下面说说一些让管理更舒适一些的内容。</p><h3>模块化的管理</h3><p>笔者一直认为没有一套管理方法能完全适应每个人的需求的，一如没有完全相同的两片树叶一样。因此一套用以管理自己数字资产的方式最好是模块化的、可定制化的。这也是我偏好使用「资源库」方式管理的原因，你可以随时替换掉自己不需要的部分。当然完全封闭的资源库（不对外开放接口，无法通过检索工具检索内部内容）型软件是不建议选择的。</p><p>如果你是一个音乐爱好者，那么你可能听说过 Roon；如果你是摄影师，那可能会选择使用 Eagle、Adobe Lightroom；如果你是影视爱好者，可能会选择 Infuse。但是对于大部分人来说，可能内置的《照片》应用已经足以管理图片，Apple Music 上传音乐后多端同步的功能也已经足够聆听自己喜欢的音乐了。因此模块化的关键在于不满足自己使用需求的部分，就可以随时使用其他的软件替换掉它，以拓展开更大的使用空间。</p><p>关于提到的应用，可以参见这些介绍：</p><ul><li>《<a href="https://sspai.com/post/68706">也许是 Apple 平台最全能的视频播放 App：Infuse</a>》</li><li>《<a href="https://sspai.com/post/80051">一个月测试 7 种音乐服务，我在建立数播系统的过程中遇到了哪些坑？</a>》</li><li>《<a href="https://sspai.com/post/73795">进一步巩固「最强」素材管理工具地位：Eagle 3.0 大更新</a>》</li><li>《<a href="https://sspai.com/post/66756">东西我都装好了 | 如何用 Lightroom 更高效整理与归档照片</a>》</li></ul><p>但是我们经常会担忧如果未来数据量变大后的迁移问题，总想着一劳永逸的解决问题，为未来的自己减负。首先现在使用着的应用，未来是否仍然存在，还是一个未知数；另一个是我们很难设计出一套一劳永逸的解决所有自己未来可能需求的系统。即使是人类社会的各种学科，也是在不断实践中优化、进步的。我们只能在起初尽量选择自己对其未来有信心、且迁移友好类型的软件，并且尽量不过度集中，以免增大潜在风险。相对来说，可以直接索引（index）自己数字资产并在自己的资源库内显示（而不是完全彻底导入）的应用会更好一些，但是只要导出和迁移是足够方便的，依然可以尽管使用。</p><h3>强大的检索功能</h3><p>检索是非常重要的一个功能，一个好的检索工具有时候能省下不少麻烦的事情。通过检索工具，查找和使用数字资产往往能变得更为简单和方便。这与上面的部分也产生呼应，我们应该尽量选择能被检索工具检索到的资源库型软件，而不是使用封闭性库的。因为篇幅原因，我这里就不展开介绍了。在 macOS 上，Raycast、Alfred、LaunchBar 都是很好的选择，内置的《聚焦搜索》也可以处理绝大多数的基础需求了。</p><p>DEVONThink 也可以提供非常强大的检索能力，而且可以避开 Finder 中系统文件的干扰，可以说作为个人数据管理中枢其实是很不错的选择。可以参见站内的这些介绍：</p><ul><li>《<a href="https://sspai.com/post/79769">Raycast 该怎么用？我们帮你准备了一份实用指南</a>》</li><li>《<a href="https://sspai.com/post/43973">总是在 Mac 「装机必备」看到的搜索利器 Alfred，究竟是怎么用的？| 新手问号</a>》</li><li>《<a href="https://sspai.com/series/28">LaunchBar：全方位优化你的 macOS</a>》（这是一套付费专栏）</li><li>《<a href="https://sspai.com/post/54552">界面重新设计、中文支持更佳，DEVONthink 即将迎来 3.0 更新</a>》</li></ul><p>除了使用检索工具以外，我个人也喜欢针对我比较感兴趣的主要领域单独建立一个 Excel 或 Numbers 文档来进行处理。这类应用将提供更便利和直观的数据查看和检索能力。</p><h3>归档和备份</h3><p>数字资产管理的最后一步自然是处理一些无需再用但也不希望删除的内容。这一步我通常在我的云盘和移动硬盘内进行。这种使用上我个人同样是分开使用场景的，例如工作有关的往往可以在 OneDrive 内找到，而个人相关归档则存在 Dropbox 中。那么需要寻找某些对应文件时，只需要打开对应的云盘应用即可。</p><p>如果你有更高阶的需求，也可以引入 NAS。这里有一些有关的介绍，也可以在站里搜寻，有大量有关的内容：</p><ul><li>《<a href="https://sspai.com/series/182">家用 NAS 入门指南</a>》（这是一套付费专栏）</li></ul><p>这类内容展开来说需要非常多的篇幅来讨论，我们这里就暂时不做更深入的探讨了。</p><h2>结语：接受失去</h2><p>我觉得特别重要需要学会的一点就是要接受失去。我过去就常常会因为觉得既然技术如此发达、可以轻易捕获绝大多数我所需要的内容并储存起来的话，我就应该尽可能的把信息都储存起来。再加上时不时有些信息会失效，让我更想把它们都 duplicate 到本地。大量信息的分门别类和归置导致哪怕是打个标签或链接、在信息量大时也是很浪费时间和精力的。</p><p>在一些著名的审计事件中，可以看到即使会计所这样的大型专业机构，在审计公司财务时依然会不时出现审计失误。我们如何确保自己可以始终如一的维护好一套复杂而一成不变的 PIM 系统呢？这显然是几乎不可能的事情。况且信息有其时效性，绝大多数的信息在一定时间之后，通常都变得不值一提（信息变得过时了，或者我们不需要它了）。人类在过去几千年的文化历史中产生了多少信息？真正留存下来、依然有价值的有多少？即使今天是信息大爆炸的时代，高质量的信息也依然相当罕见。</p><p>去年年底的时候我比较焦虑，对未来的不确定感特别强，在回到家休息了几个月之后心态慢慢地健康了很多。最大的收获或者说改变就是「接受失去」。我不再纠结大量信息的何去何从和完善系统的设计、不那么因为未来计划的不明确而烦恼不已了。很多信息也许确实会有用处，然而为此过度劳心劳力，反而得不偿失了。人生中总在失去一些事情、得到一些事情。人类数据量那么大，总不至于真到要用时就掘地三尺、查无此人吧？</p><p>所以偶尔也会反思，也许 PKM/PIM 的真谛其实是学会不管，GTD 的真谛是学会放弃不该做的。没必要的知识和信息可以不管，没必要的事情也无需硬是浪费自我气力。做到应该管理的信息管理好，无需管理的信息不烦忧。PARA 的方法也是一同，归档本身就是在暗示自己、为自己的心理减负。其实用久了，会觉得它是在告诉你专注于当下，哪些事情该做，哪些事情不该做。不该做的事情，就随风飘去吧。</p><hr /><p style="margin-left: 0px;">若你有兴趣，可以阅读我的前几篇文章：</p><ul><li><a href="https://sspai.com/post/86478" target="_blank">《自由人生，张弛有度。分享心得一二》</a></li><li><a href="https://sspai.com/post/84931" target="_blank">《使用 15 个月后，再来看看 Arc》</a></li><li><a href="https://sspai.com/post/84240" target="_blank">《集思广益？简单聊聊「协作」》</a></li></ul><p style="margin-left: 0px;">感谢你的阅读，有任何意见、批评请在评论区指出，我积极改正；有任何想与我分享的，也欢迎评论。只是时间所限，回复可能不及时，还望大家见谅。</p><p style="margin-left: 0px;">&gt; 关注 <a href="https://sspai.com/s/J71e">少数派公众号</a>，解锁全新阅读体验 📰</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87646</id>
            <title>我的笔记流，基于dailynote和双链的无压记录</title>
            <link>https://sspai.com/post/87646</link>
            <guid isPermaLink="false">https://sspai.com/post/87646</guid>
            <pubDate></pubDate>
            <updated>Fri, 29 Mar 2024 03:24:41 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 作者经历, 脑海中的想法, 笔记流, 定期回顾
<br>
<br>
总结: 作者分享了自己的亲身经历，探讨了脑海中的想法如何产生和记录，以及如何通过笔记流和定期回顾来管理和利用这些想法。 </div>
                        <hr>
                    
                    <p>有一本书叫《清醒地活》，里面有有一个关于作者的亲身经历非常有趣。</p><p>他说他患病了：“我脑子里一直有一个声音，它一直在叭叭讲个不停，而我又没有任何办法让它停止说话。这个声音简直快把我烦死了！这个声音要把我弄崩溃了！”</p><p>猛的一想，我们每个人大脑里也有一个这样的声音，每天不断地自言自语。其实这就是我们脑海中的想法。这些想法可以是阅读产生的，可以是突然冒出的想法，可以学习到新经验的记录，可以是当下的情绪。很多好的想法往往就是在不经意从脑海中冒出来，尤其是我们没有在干什么的时候（比如散步、无所事事、开车等等）。无论是否成熟，先不要让它溜走，一定要及时记录下你的想法，再慢慢地看看它可以用于哪。</p><p>于我而言，笔记不仅仅说是一种学习方式，我更愿意理解为一种生活方式（思考流，工作流），只是它展现的式是笔记。就像flomo的slogen——“持续不断记录，意义自然浮现”。真的太喜欢这一句了。</p><p>无论它是什么，就记录下来吧！随时随刻的记录，不要有压力地记录。</p><h2>记录</h2><p>记录是一切的开始，一定不要复制粘贴。非必要情况一定用自己的话再复述一下。记录也不等于剪藏。剪藏的内容并不属于你，你也用不上。做笔记的目的不是记录别人的信息，也不是搬运内容到笔记本中。而是寻找更有效的解决问题的思路，结合自身的问题，记录现状和改进的方向。</p><p>随时随地记录下想法，任何想法都可以，不要怕写下的内容不够好，先走出第一步，先写下第一个字。</p><p>我需要把我内心的想法，念头无时无刻，随时的记录下来。所以，于我而言记笔记不是单纯的记录信息和学习知识。更多的也是一种心理上的疗愈。如果你正处于某种情绪之中（悲伤、烦躁、痛苦、纠结），写下来在这些情绪之中你脑海中的想法，相信我，这会让你好很多（情绪书写练习）。</p><p>我的笔记流的源头就是今日笔记（dailynote)。无论何时何地，我脑海里冒出的一些想法或者情绪我都会立刻记录下来。主要比较常见的有三类卡片（段落），一是闪念笔记，就是大脑中随时随地冒出的想法，当我捕捉到时，我就记录下来。二是阅读笔记，阅读一些信息内容产生的想法，三是情绪卡片，当我承受压力时，当我焦虑时，当我懊悔时，当我开心时，我都会记录下来当时的情绪，一方面是清空大脑，另外也是进行情绪复盘。</p><p>我刚开始时记录是，就是完整只是情绪或者一些很随意的想法。后来再回顾的时候我就发现，再看笔记时并不知道自己在记录时候什么，后来在记录笔记的时候，我会有意提醒自己，遵循5W1H原则，尽量记录信息的完整性，此外还要时刻思考记录这个信息可以用于哪，如何使用。</p><p>我在手机端写了方便自己输入的IOS快捷指令，我在PC端基本24小时开着笔记软件，而且自己写了一个quicker动作。保证当我脑海中有想法的时候可以第一时间记录下来。这样第一时间都可以快捷地写入到每天的日记（Dailynote）中。</p><p>为什么我要花费如此多的篇幅说记录，就和种树一样，种下一棵树最好的时候就是现在。笔记只有写起来、记起来，这样笔记才能慢慢成长为一篇森林。没有记录，何谈后续的整理、链接、输出。</p><h2>链接</h2><p>很多笔记法和学习方法都提到了organize（或者说组块）。落于笔记软件的实操层面，组块就是双链。</p><p>关于链接（组块）我是怎么做的，我每写下一条dailynote，会判断是不是lifelog，如果不是单纯意义上的log，那一定是可以运用于某个主题的信息或者感触，我会直接打上双链（标签、或者其他任何的方法）。在写下的时候我一般不进行整理，只是打上双链，最后直接整理。</p><p>比如周报，周一到周五都是先在dailynote中记录当下完成的工作。打上Y24W14（2024年第14个周）。然后到了周五的时候，直接打开Y24W14这个页面，通过底部反链，直接一键移动到当前页面，适合整理一下，就可以提交工作周报了。整个写周报的过程不会超过10分钟。</p><p>比如情绪记录，每次遇到什么波动比较大的情绪时，我都会写情绪记录，我最开始是直接link到情绪记录这个页面。后来情绪记录的笔记也越来越多，我对于我自己的情绪观察也发现了几个特点。比如不好意思麻烦别人、比如失眠时容易暴躁。在情绪记录这个页面下，我又可以进一步划分出几个不同的情绪主题，进一步细化和整理。</p><p>在搭建体系的时候，建议要区分领域和兴趣。领域是以精进为目的的，是可以产生收益的，是需要不断精进的。而兴趣就无所谓了，只需要开心，可以产生情绪价值其实就足够了。所以人力资源技能和投资就是领域，需要持续给于投入和精进。</p><p>在这个过程中，我产生过几个问题或者说困惑。</p><blockquote><p>比如：我的这个页面放在日记下是不是不合适，不成体系？</p></blockquote><p>不必担心，先有笔记，先放在这，如果你研究的越来越深入，慢慢地整理后，自然而然的就会生长成森林。就是笔记法中所说的要种树成林，不要幻想这一天建房成楼。一天搭起框架是极其耗费心智的。我们在写笔记的过程中就是要减少一切的心智负担，先记录。</p><blockquote><p>比如：我打完标签或者链接之后，是不是要当时就整理？</p></blockquote><p>都可以，随你的心意。过去我也非常纠结于这点，是不是当时整理更好，这条笔记移动过去是不是更整洁？我有的时候看到了又喜欢鼠标点一点整理一下。后来我在思源用户群和一些朋友交流之后释怀了。随心而动，不要占据你的认知和心力。如果你看着不舒服，你就及时整理一下。如果你可以接受它现在的样子不整理也可以。</p><h4>定期回顾</h4><p>定期回顾的功能是受flomo的启发，当然其他笔记软件基本也有类似的功能或者插件。</p><p>很多人都有一个非常常见的问题是什么？笔记只收藏，不整理。无压笔记和dailynote笔记流是不怕杂乱的，但是对于笔记来说，定期回顾是非常重要的。写下的信息串联起来，才能转化真正有用的，可落于实践的信息和知识。一切的一切，以用为主。就像L先生说一样，阅读、笔记的核心原则是“以我为主，为我所用”。</p><p>可以通过定期回顾（漫游、回顾，随机）这样的方式回顾自己的笔记。回顾的时候，我们可以做这么几件事。</p><ol><li>整理笔记。可以回顾之前写下的笔记，有一些如果是记录或者情绪，或者适当删除。</li><li>温习笔记。或者当时只是记录下来了，现在回顾又有一些新的体会。这样就可以在笔记下方直接写下新的感触。</li><li>串联笔记。回顾笔记时，遇到了条都是关于#忍不住发脾气的的笔记，这样就可以把它们整理到一起。</li></ol><h2>输出</h2><p>输出我做的不好，所以其实没有太多需要和大家分享的。</p><p>在写这篇文章的时候，我关于输入和整理，我都有很多想说的。但是到了输出，我就写不出什么来。其实这就是对于这块的运用和理解还不够深刻。毕竟自己一共也没有输出过多少篇文章。</p><p>我这篇文章，就是事先定好主题，日常有关于笔记工作流的想法时就及时写下来，然后定好框架，填充内容，整理修缮的模式写作完成的。大概花了两周吧，中间主要因为输出这一块卡壳了，整理的时候也发现了，自己输出上做的不好。</p><h2>总结</h2><p>以上就是我非常个人化的一个笔记流程，核心观点还是无压输入和双链。</p><ul><li>每一个字都建议是你亲自写下或者敲入的，不要复制，不要复制，不要复制！</li><li>Dailynote的核心就是无压笔记（无压输入），不要有负担，不要怕制造垃圾。写下你大脑那个声音正在对你说的话。</li><li>方法是通用的，具体的笔记软件与一些流程可以根据自身的情况做一些调整和修改。</li><li>不要追求完美的工具，还是要掌握流程和内核。能满足80%的功能需求的笔记软件就很好了。</li></ul>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87620</id>
            <title>[送码] 2024年了，为什么还要做一个 Todo App</title>
            <link>https://sspai.com/post/87620</link>
            <guid isPermaLink="false">https://sspai.com/post/87620</guid>
            <pubDate></pubDate>
            <updated>Thu, 28 Mar 2024 04:08:40 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 独立开发者, 三件套, Todo App, CardList
<br>
<br>
总结: 文中提到独立开发者圈子流传着一个梗，即每个独立开发者都在做记账、日记、Todo这三种产品，称为独立开发者三件套。虽然市面上已有很多Todo App，但作者决定自己开发一个Todo App，即CardList，以卡片形式展示分组列表和重要待办事项，减少过期任务带来的压力，保持简洁好用。 </div>
                        <hr>
                    
                    <h2>一个梗：独立开发者三件套？</h2><p>不知你们是否听说过，独立开发者圈子时常流传着一个略带讽刺的梗：每个独立开发者都在做三件套产品：<strong>记账、日记、Todo，俗称独立开发者三件套。</strong></p><p>虽说这只是一个梗，但也从一定程度上反映出两方面的信息：一是独立开发者的产品普遍比较同质化，二是记账、日记、Todo 这类产品用户群体和市场需求也比较大。</p><h2>2024年了，为什么还要做一个 Todo App？</h2><p>那么，现在 2024 年了，且市面上已有这么多 Todo App 的情况下，作为一个业余独立开发者的我，为什么还要做一个 Todo App？</p><p>其实我用过各种类型的 Todo 产品，包括传统的微软 Todo、滴答清单、Todoist、Reminder、Any.do 等产品，也尝试过看板类产品 Trello，以及主打 all in one 的笔记产品 Notion。</p><p>它们有的功能很简单，有的功能很强大。例如滴答清单就加入了四象限、日历、打卡、专注等功能，Notion 更是基于 Block 集成了整个工作空间。</p><blockquote><p>当然，其实它们都很好，只是不太适合我，暂时还未能满足我个人的使用需求，因此我便决定自己做一个 Todo App。</p></blockquote><h2>我理想中的 Todo App 是怎样的呢？</h2><h3>1️⃣首页直接展示分组列表及其重要待办</h3><p>目前大部分 Todo App 首页都是只展示分组列表，查看待办需要进入下一个页面（下图左一、左二），这对我来说不够简单直接。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/23/6e37515f471d19393bf934c2d84e85e7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>注：这些都不是我想要的首页展示</figcaption></figure><p>虽然滴答清单的侧边栏选择“所有”分类后，首页也可以做到同时展示分组列表和待办（上图右一），但我希望只展示我认为重要的待办，而不是全部待办。因为待办有很多，但最近需要重点关注的也就那么几个。</p><h3>2️⃣希望减少过期任务带来的压力</h3><p>我们在用 Todo App 时，过期的任务总是会越积越多，随着小红点数量不断增加，心理压力会越来越大。所以我理想中的 Todo App，希望能够减少过期任务的出现，从而减少心理压力。</p><h3>3️⃣基础功能齐全，同时保持简洁</h3><p>Todo App 作为一个生产力工具，基础功能体验需要完整。例如支持设置分组、标签、优先级、备注、提醒等，支持跨平台多设备终端使用。</p><p>此外，现在很多 App 都在追求 all in one，把所有功能都集中到一个 App 上面。当然这只是不同产品自身的选择，但我希望它只专注于待办事项，保持简单好用，而不一定需要日历、打卡、专注计时、笔记这些功能。</p><p>如上所述，由于目前没有任何 Todo App 可以满足我的使用需求（主要是第一、二点），我便决定自己动手开发一个。</p><h2>CardList 有哪些差异化体验？</h2><p>经过差不多2个月的时间进行设计和开发，CardList（顾名思义：卡片列表） 待办事项 App 终于成功上线啦✌️</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/23/fad2dbd6c2cdc2c7c1c8404f77cbaea1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>CardList：以卡片形式展示你最近关注的重要待办</figcaption></figure><p>CardList 是一个简单好用的 TodoList 待办事项 App，它最大的特点是以卡片形式展示你的分组列表和最近关注的重要待办事项，CardList 支持 iOS/iPadOS/macOS 三大平台，数据通过 iCloud 自动无缝同步。</p><h3>1️⃣首页卡片列表直接展示分组列表及其重要待办</h3><p>CardList 首页是以卡片形式展示你的分组列表和最近关注的重要待办事项，不重要的待办事项隐藏在分组列表里面，你也可以随时通过点击分组列表，把里面你认为重要的待办事项展示到卡片列表。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/23/3b921b2e28d763082af1d012ea0cde99.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>打开 App 时，就能立刻看到最近我需要关注的重要待办事项，点击分组列表也能快速查看该列表的所有待办</figcaption></figure><p>这一点于我是最重要的，卡片列表足够简单直接。因为我希望打开 App 时，就能立刻看到最近我需要关注的重要待办事项（注意：不是全部待办事项），而不必通过点击分组列表进入到待办事项列表。</p><p>当你发现某件事项推迟或最近无需关注了，你只需要点击右侧的卡片图标，就可以把它隐藏到分组列表，直到后续你认为需要开始关注它再把它显示到卡片列表即可。</p><h3>2️⃣极大减少过期任务带来的压力</h3><p>由于首页卡片列表核心定位为：以卡片形式展示你的分组列表和重要待办事项。<strong>这意味着，你无须通过为待办事项设置一个截止日期来体现其重要性，除非它必须要在某个时间点提醒你开始处理它。</strong></p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/23/3c0c5365aafd1e52d6dc82d62abae650.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>你无须通过为待办事项设置一个截止日期来体现其重要性，除非它必须要在某个时间点提醒你开始处理它</figcaption></figure><p><strong>基于我多年的实践，真正重要的事项反而没有明确的截止日期，</strong>或者说至少不是确定某一天内就必须完成。例如，本周我要写一篇文章，如果你把截止日期设置为周五，其实也不是太合适，因为它有可能提前完成或延后。最合适的做法就是，把它显示到卡片列表，因为卡片列表本身定位就是显示你最近关注的重要待办，而你最近需要着手处理它。那么即使过了本周你依然未完成，也不会产生由于任务过期带来的心理压力。</p><p><strong>这样一来，你就摆脱了截止日期的束缚，也就没有截止日期带来的压力。</strong></p><p>那么，什么样的任务适合设置截止日期呢？我的理解是，到某个时间点后，就必须开始做的任务。例如，一个产品评审会议，一个指定时间需要回复的客户反馈。而这种提醒，给你带来的其实是安心，而不是压力，因为你知道你不会遗忘它。</p><p>以上两点就是 CardList 最核心的差异化体验，<strong>通过使用 CardList，你可以专注于你最近关注的重要任务，而无须恐惧截止日期带来的心理压力。</strong></p><h3>3️⃣完整的基础功能体验</h3><p>此外，CardList 作为一个生产力工具，其基础功能体验也很完整。<strong>CardList 支持设置分组、标签、优先级、备注、提醒等，支持 iOS/iPadOS/macOS 三大平台，数据通过 iCloud 自动无缝同步。</strong></p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/23/5788854b7fe78d18be9296d9c47b3b9b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>支持 iOS/iPadOS/macOS 三大平台设备，数据通过 iCloud 自动无缝同步</figcaption></figure><p>自从 CardList 上线后，我已经开始使用它快一个月啦，目前来说完全符合了我个人的使用需求。<strong>每当我有好的想法时，就会拿出手机记录下来，但暂时不会把它显示到卡片列表。当后续准备处理它时，再把它显示到卡片列表即可。</strong></p><h2><strong>总结&amp;送码</strong></h2><p>最后总结一下，<strong>CardList 的设计理念是让你可以专注于你最近关注的重要待办，并尽量让你可以无压力去处理你的待办事项。</strong></p><p>为了感谢少数派读者的支持，<strong>我将在本文评论中随机选取一位幸运儿，赠送一个 CardList 终生会员兑换码，</strong>同时也欢迎大家体验和反馈哈😄</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87031</id>
            <title>30多岁帝都PE投资人，辞职去DIY造房车..</title>
            <link>https://sspai.com/post/87031</link>
            <guid isPermaLink="false">https://sspai.com/post/87031</guid>
            <pubDate></pubDate>
            <updated>Thu, 28 Mar 2024 01:34:12 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 股权投资行业, 裸辞, 房车, DIY设计
<br>
<br>
总结: 一位股权投资行业的从业者考虑裸辞，计划购买房车并进行DIY设计，以实现更多时间陪伴家人和追求自由生活方式的愿望。 </div>
                        <hr>
                    
                    <h2>一、基本情况</h2><p>简单自我介绍下，本人从事股权投资行业，人在帝都，这两年经济环境确实一般，虽然没波及到自己的机构（央企投资平台、区域金控平台都做过，其实还都挺稳定的），个人也算在上升期，但体制内时常出现些想做事而束手束脚、瞻前顾后的情况。我这个人做事儿比较投入，希望以结果导向，也有些自己坚持的价值观，这种情况下其实个人还比较心累。</p><p>正好2023年女儿出生，自己也内心希望能阶段性地花更多时间陪伴她成长，而不是将绝大多数时间精力投入在无休止工作的拉扯中，所以在一段复杂的工作任务完成后，自己萌生裸辞的想法：一方面是多花些时间陪伴家人；其次也算是犒劳一下自己、难得休息休息；再次就是自己也一直有想法折腾一下房车，正好利用这个机会可以大刀阔斧的实践一下。</p><p>自己从事投资工作，当然知道现阶段情况下做出裸辞决定是挺有风险的，身边的挺多朋友也是劝我，但我还算是了解自己的性格，也做了些充分的风险评估，还是在2023年底和家人沟通后做了这个决定。否则就也不会有这篇帖子正在记录、以及将要记录的事情。</p><h2>二、为何关注房车</h2><p>已经记不起自己是具体何时对房车这个概念比较感兴趣的，可能是自己一方面比较喜欢自由和旅行，有过好几次长途自驾旅行，但多数是飞机到目的地后租车自驾，总之感受上还是缺少一种安全感。而房车这个产品和自己的兴趣爱好很好契合，一方面可以享受驾驶的乐趣，另一方面也能让旅途多谢从容和温暖。所以很多次自驾旅行的时候就想如果有一辆房车的话，会是一种别样的风味。</p><p>关于折腾房车的另外一个契机上面也提及过，就是2023年自己生了宝宝，自己想过在她成长的过程中如果能在读万卷书的同时，引导她踏实地行万里路去多看看大千世界、风土人情，而不是把精力和心思困在商场里的游乐园、纷繁复杂的课外班。要达到以上目的，房车是一个很好的媒介。</p><p>总之就是自己对房车的价值是认同的，对这种自由的生活方式是向往的。</p><h2>三、房车的选择</h2><h3>3.1 车型选择</h3><p>房车分为很多类型，A型、B型、C型、拖挂式房车、第五轮拖车、背驮式房车等，前几年国内露营兴起后还衍生出了露营车、床车等“类房车”的概念，形态千奇百怪、可奢可俭。</p><p>自己比较喜欢户外运动、徒步越野、长途自驾，平日喜欢轻装简行，所以太大型的房车自己现阶段不需要（可能之后伴随娃的成长会有相关需求），并且从经济性的角度来说，越小型的房车通常价格越美好（仅仅是相对的），所以自己将目标锁定在B型房车和皮卡房车身上。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/08/689b4af21625dc279104af7df5d370a0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>房车类型</figcaption></figure><h3>3.2 独立设计</h3><p>自己是个工科男，比较喜欢折腾东西，家里装修就是自己从设计、建模、采购一条龙搞下来的，并且效果还不错。对于房车这种高度定制化的产品，自己当然是有很强意愿去DIY建造，或者至少是去DIY设计的。</p><p>所以我首先是去找几个房车厂聊，咨询可否自己出设计图，房车厂按图制造，问了一圈下来是很难达成，主要原因就是房车是一种很非标的产品，单独开模成本较高，并且独立设计如果想标准化建造是需要工信部出的房车车型公告的，这个对于单独一台车来说成本较高，划不来。如果直接买车自己动手改，经常会出现触碰“非法改装”的红线，未来行驶起来胆战心惊也是麻烦。</p><p>但自己DIY的想法还是很强烈，所以左思右想各种琢磨，终于找到了一种可行的模式——皮卡背驮式房车。<br />所谓背驮式房车，经常是和皮卡一起出现，即房车主体以房箱形态独立出现，和皮卡是分体式结构，相当于皮卡的一个货物。这样做的结果是房箱车体是可以进行独立设计的，可以满自己独立DIY的需求。当然这样做也有麻烦的一面，即毕竟基于皮卡底盘，空间有限；且高度、宽度均有限制，每年年检还要进行拆除，总之也是有麻烦的地方。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/08/f5f016632b2031c5052ad7274fbcb5a4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>背驮式房箱示意图</figcaption></figure><h3>3.3 要坚持DIY！</h3><p>有了政策法规的支持，自己可以有机会DIY房车内部（房箱），但既然做了就想做彻底一点，索性希望将整个房箱进行DIY设计、并且希望<strong>自己建造</strong>！这个其实是难度很高的，尤其是对于房车产业之外的人来说，在狭小的空间内进行水电路设计是很有难度的。建造难度也很高，包括场地、材料，都是需要重新置办，也是一笔不小的开支，不一定比房车厂做的便宜。</p><p>但这样做的好处也很明显，房车本身是一个不太透明的行业，和装修有一点像，自己DIY做的话，选用的零件、材料都会更有保障，建造的过程中伴随解决问题，也能逐步优化自己的设计，也会是一个不错的过程。</p><p>所以在敲定了皮卡背驮房箱这条路径之后，自己也是买了一款2023年新出的皮卡，江铃大道。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/08/ffce1c829d70e0156f4043a14556a912.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>2023年买的皮卡</figcaption></figure><h2>四、进度介绍</h2><p>我这个Chiphell的账号是在2023年底新注册的，起初想当时就把自己筹备房车的事情进行记录，但毕竟这件事对我来说是一件完全新鲜的事情，和自己之前从事的股权投资工作完全不同，实话实说自己也心里没底，怕虎头蛇尾。</p><p>到如今，研究了两个月下来，框架建模、水电路的相关设计雏形在过年期间进行了初步构建，现在自己对于房车的理解还是深化了不少；场地已经选好，并且前期重要原材料房箱面板经过了一个多月的沟通，终于由厂商发货。截止目前，自己终于还算是有点底气不会让这个自己建造房车的事情烂尾。所以兴奋地敲下了这些文字，记录这个过程，也供有需要的朋友了解。</p><p>我在<a href="https://www.youtube.com/@Mesas_CN/videos">YouTube</a>、<a href="https://space.bilibili.com/3493123034450687">B站</a>、<a href="https://www.xiaohongshu.com/user/profile/613bf6b90000000002026a0a">小红书</a>等平台有同名的频道（岩坪Mesas），会对这个过程进行视频记录，伴随这个过程更全面的文字记录更多会在少数派、Chiphell进行介绍，如果有朋友有更多的交流需求，也可发私信交流。如果有朋友在北京也在折腾房车或感兴趣，也欢迎找机会面基交流、提供建议！</p><p>总之就是先开个头，给各位看官拉平一下这两个月的信息，po个当前的结构图和最新的视频。后续有进展会随时更新哈！</p><p>&nbsp;</p> <p>&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/08/dd7ab6da51f0120c4d03c9da64ddad59.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>当前的房车结构图</figcaption></figure><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87583</id>
            <title>大模型时代，“开源永存”似乎成了一种奢望</title>
            <link>https://sspai.com/post/87583</link>
            <guid isPermaLink="false">https://sspai.com/post/87583</guid>
            <pubDate></pubDate>
            <updated>Wed, 27 Mar 2024 09:45:12 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 开源, 闭源, 大模型, 混乱
<br>
<br>
总结: 本文讨论了大模型领域的开源和闭源之争，以 Elon Musk 旗下的 xAI 公司和 Stability AI 公司为例，探讨了开源和闭源的优劣势。同时，也提到了 Stability AI 公司内部的混乱和不稳定情况。 </div>
                        <hr>
                    
                    <p>开源和闭源孰优孰劣是一个人们争论不休的话题。许多开源爱好者喜欢举着“开源永存”的旗帜为开源摇旗助威，令人充满激情。但现在看来，闭源好像是现阶段唯一的“最优解”。</p><p>注：本文为个人观点和想法的输出，如有不同意见，欢迎在评论区中友善讨论。</p><hr /><h2>引言</h2><p>近期，大模型领域关于开源的新闻可谓是铺天盖地。从 Elon Musk 旗下的 xAI 公司在<a href="https://x.ai/blog/grok-os">官网</a>宣布开源拥有 3140 亿参数的大模型 Grok-1，到研发出开源绘图模型 Stable Diffusion 的 Stability AI 公司 CEO 突然宣布辞职并退出董事会。这些新闻，一时间把开源大模型推上了风口浪尖。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/26/e6c465732e67159ee2d1545878023d78.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>xAI 官网对于 Grok-1 开源的报道</figcaption></figure><p><strong>但 Grok-1 开源之后，好像并没有想象中的那么“一呼百应”。</strong>根据 Google Trends 的<a href="https://trends.google.com/trends/explore?date=today%201-m&amp;geo=US&amp;q=Grok&amp;hl=zh-CN" target="_blank">数据</a>，在 3.18 日时，搜索指数达到了“100”，而到了 23 号时，搜索指数已经急剧下滑到了 14，甚至比宣布 Grok-1 开源前的搜索指数还要低。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/26/51e9c7c8ec1f0bcc19050163de2deb92.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>数据来源：Google Trends</figcaption></figure><p><strong>而在图像生成领域的“稳定AI”（Stability AI） ，好像也不怎么 Stable。</strong> 公司的领头人 Emad Mostaque，既不再担任CEO，同时也退出了公司董事会，并在 Twitter 上<a href="https://x.com/EMostaque/status/1771400218170519741?s=20">宣布</a>要投身于去中心化与 AI 开放（#decentralizeAI）的事业之中。</p><figure class="image ss-img-wrapper image_resized" style="width: 424px;"><img src="https://cdn.sspai.com/2024/03/26/be044d330ef3b770257695bf74467cee.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Emad Mostaque的推文</figcaption></figure><p>不过，Stability AI 的混乱远不止于此，据<a href="https://www.thepaper.cn/newsDetail_forward_26788621" target="_blank">澎湃新闻</a>统计，从去年3月至今，已有至少19名高管或关键人物出走。CTO 也也刚刚换新，据称随着新 CTO 的上任，公司战略可能向语言模型偏转。另有<a href="https://www.thepaper.cn/newsDetail_forward_26788621" target="_blank">消息</a>称，Emad 还被曝出过拖欠员工工资、诓骗投资人等“黑料”。&nbsp;其近期的混乱与不稳定，与名字的强烈反差倒是显得极为讽刺。</p><p>所以，作为观众的我们，应该尝试着在这场大模型领域的开源闭源之争保持理性。本篇文章，将会站在我个人的角度，尝试着去分析这个“争端”，并给出一个我认为的答案。</p><h2>开源与闭源</h2><p>要想聊大模型领域的开源和闭源，就先需要明白开源和闭源本身。</p><p>开源（开放源代码），根据<a href="https://zh.wikipedia.org/zh-cn/%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6" target="_blank">维基百科</a>的定义，是一种在电脑程序出品前和开发中提供其内部代码的做法。开放源代码使得生产模块、通信管道、交互社群获得改善。<strong>一个开源软体开发的主要原则和惯例是易货贸易和合作的同侪生产。</strong></p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/27/article/c19f62074d4320914d9f4e8215113828.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Linux 系统：典型的开源产品代表</figcaption></figure><p>而闭源（另称“专有软件”），则是由于商业或其他原因，不提供原代码，只发布只有计算机才能读懂的程序（如二进制格式）。</p><p>用一张表格我们就可以清晰、明了的知道两者之间的区别：</p><figure class="table"><table><thead><tr><th style="text-align: center;">方面</th><th style="text-align: center;">开源</th><th style="text-align: center;">闭源</th></tr></thead><tbody><tr><th style="text-align: center;">定义</th><td style="text-align: center;">开源指软件的源代码是公开的，并且允许任何人查看、修改和分发。</td><td style="text-align: center;">闭源指软件的源代码是私有的，只有软件开发者能够查看、修改和分发。</td></tr><tr><th style="text-align: center;">商业模式</th><td style="text-align: center;"><p>资金来源主要包括风险投资、捐赠等；</p><p>开源软件主要通过为企业提供开源软件的咨询和解决方案，收取咨询费用，提供技术支持、培训、定制化开发等服务赚取收入。</p></td><td style="text-align: center;"><p>资金来源主要包括投资机构的投资或少数情况下的捐赠；</p><p>闭源软件通常采用许可证销售模式，用户需要购买许可证来使用软件。</p></td></tr><tr><th style="text-align: center;">优点</th><td style="text-align: center;"><ul><li>社区参与，代码透明，安全性高</li><li>成本低，可定制性强</li></ul></td><td style="text-align: center;"><ul><li>保护知识产权，控制软件使用权</li><li>技术支持可靠，稳定性高</li></ul></td></tr><tr><th style="text-align: center;">缺点</th><td style="text-align: center;"><ul><li><strong>商业化可行性较差，盈利模式不明确</strong></li><li><strong>维护更新依赖社区支持</strong></li></ul></td><td style="text-align: center;"><ul><li><strong>缺乏透明性，难以排查漏洞</strong></li><li><strong>依赖软件提供商，成本较高&nbsp;</strong></li></ul></td></tr><tr><th style="text-align: center;">典型案例</th><td style="text-align: center;">Linux操作系统、Apache Web服务器、MySQL数据库</td><td style="text-align: center;">Windows 操作系统、Photoshop 图像处理软件</td></tr></tbody></table></figure><p>从上表中可以看出，开源的优势在于<strong>社区参与度高、可定制性强</strong>，而缺点则在于<strong>商业可行性较差、严重依赖于社区</strong>；而闭源的优势则是<strong>技术支持可靠、保护知识产权</strong>，缺点则为<strong>缺乏透明性及成本较高</strong>。</p><p>在传统的产品和软件中，开源和闭源各有自己坚定的拥护者和“杀手级应用”。开源的拥护者们，例如 <a href="https://www.redhat.com/zh/topics/open-source/what-is-open-source" target="_blank">RedHat 社群</a>高喊着“开源万岁”口号，认为开源能够推动软件生态的健康发展，让开发者“少造无意义的轮子”；而最终选择闭源的开发者，例如<a href="https://www.zhihu.com/question/518237152/answer/2376819946" target="_blank">Elvic Liang</a>则认为开源软件的商业化模式是一个极其复杂且成功率极低的事情，选择闭源才是对自己和用户负责的最优解，不至于让一个产品因为开源导致了最终无人维护。<strong>两个方案在传统的产品和软件中都有一定的可取之处，至少无论选择哪种方案都不至于让自己的产品走向一条“不归路”。</strong></p><p>然而，到了大模型这个领域之后，一个值得注意的问题是：<strong>在其他软件类型或领域中开源的优点，在大模型领域中还是优点吗？</strong></p><h2>大模型的闭源，在现阶段或许是必然</h2><p>前文中提到，近期 xAI 开源了自己的语言大模型 Grok - 1。在第一财经关于 Grok-1 的<a href="https://www.stcn.com/article/detail/1150036.html" target="_blank">报道</a>中提到，大模型厂商开源的动力<strong>主要是招揽客户，做影响力。</strong>而其目的则是让企业免费试用一段时间后，引导其向市场发布包装后的功能或者服务，这个东西（大模型）也相当于汽车里的发动机，直接用不起来，需要包装成整车。</p><p>然而，开源自己的大模型对于开发厂商的不利之处也有很多，主要有三：</p><p><strong>首先，大模型产品 to B 的逻辑与传统软件有本质上的不同。</strong>在传统的 App 中，一个公司的产品对于开源软件的依赖，可能是由于底层使用了某个开源软件的代码；但在大模型领域中，唯一能够让闭源大模型被公司产生所谓“技术依赖”的，可能也就是公司自己使用大模型的训练集和代码进行进一步的“个性化”训练。</p><p>但这个“个性化”训练所产生的壁垒，也会随着通用语言大模型 Long Context （长文本） 能力的提高而逐步消失。<strong>这也就意味着，公司不会对某个特定的开源大模型产生强绑定式的依赖性。</strong></p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/27/9aa7847a080c4003101f51ade64a33be.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Kimi 智能助手近期支持 200 万字上下文，是典型的 Long Context 代表</figcaption></figure><p><strong>其次，现阶段大模型领域的商业化产品一般都是以调用大模型 API （程序接口）的 Token 数付费的逻辑，而非付费购买、使用产品的逻辑。</strong>而这就导致了公司极低的迁移成本：公司只需要发现性价比更高的API后，迁移所需的资料、Prompt 到新的平台上即可。因此，使用大模型的公司可以“货比三家”，选择最为合适的大模型，而开源对于选择的权重则会降低。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/27/2a9f060099d2b0deb0d901e430ea25f5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>OpenAI API Platform 截图</figcaption></figure><p><strong>最后，现阶段的大模型主要比拼的是模型质量的提高，而模型质量的提高则是需要大量的金钱来堆砌的。</strong>开源软件由于其特殊的商业模式，有些甚至很难产生盈利，因此投资机构会较为谨慎。但闭源软件由于其商业模式较为清晰，较容易得到融资，因此大模型厂商的资金来源充足，可以将精力完全投入到模型的研发上，因此模型能力更容易快速提升。</p><figure class="image ss-img-wrapper"><img alt="元能力引擎，IDC Market Glance：中国AI大模型市场概览报告正式发布" src="https://cdn.sspai.com/2024/03/27/article/851d651f2ecb4e128e895b4509a4073c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>IDC：中国AI大模型生态图谱（V1.0）</figcaption></figure><p>目前的技术曲线还是线性上升的，而只要是线性上升的状态，那么开源大模型绝对追不上闭源。虽说如果未来碰到性能墙了情况就另当别论，但目前的 Scaling Law 还能到哪，目前无从知晓。</p><p>例如，现阶段的独角兽公司，如 Moonshot AI、MiniMax，和老牌的互联网公司的大模型产品，如文心一言、讯飞星火、腾讯混元等均为闭源模型。而例如像智谱 AI 这样的独角兽半开源（同时有开源模型和商业模型）大模型厂商，其 CEO 张鹏也在接受记者“AI 科技评论”的<a href="https://www.leiphone.com/category/industrynews/jSahNemV4Wj2kcPy.html" target="_blank">采访</a>时表示：</p><blockquote><p>Q：内部怎么看待开源？</p><p>A：开源是智谱重要的事情，最新成果都是以开源的方式放出来，再有商业的版本。符合开源先行的理念。</p><p>Q：如何看待开源与商业的关系？</p><p style="margin-left: 0px;">A：开源的目的和商业不要混为一谈，开源和商业化是整个生态版图里很重要的两块，这两块是有连接的，可以说开源充当着商业化的桥梁。</p><p style="margin-left: 0px;">Q：开源模型越来越多，对智谱有哪些影响？</p><p style="margin-left: 0px;">A：开源的多了，大家就多了一些选择。可以不用商用的版本，客户直接用开源的版本就好了，但这件事有好有坏。好处就是说可以低成本、快速地切入使用上大模型，但开发者也知道社区支持这个事情永远是一个雷，开源大模型在安全性、稳定性等方面很难得到保障，这也是商业版本能够与开源版本并存的原因。商业版本可以提供更多的服务，更多的保障以及更多后续的服务，这些开源版本不一定有。</p><p style="margin-left: 0px;">Q：对于开源和闭源大模型，用户应该如何选择？</p><p style="margin-left: 0px;">A：得看他的目的是什么。如果他只是想做一些实验和尝试，那选开源模型没问题，<strong>如果想要在上面做一些商业化应用，我觉得大部分人还是会选择商业化版本，因为有保障，能够提供更好的服务。</strong></p></blockquote><p>可见，其内部对于 AI 的开源和闭源的关系认知为：</p><ol><li><strong>开源与商业化的分离</strong>：他们认为认为开源和商业化是两个不同的领域，它们各自承担着不同的角色和目的。开源主要是为了分享技术成果、推动技术发展和创新，以及建立社区和生态。而商业化则是为了提供更加稳定、安全的服务，满足特定客户的需求，并确保公司的持续运营和发展。</li><li><strong>开源作为技术发展的桥梁</strong>：智谱将开源视为连接技术发展和商业化之间的桥梁。通过开源，智谱能够吸引更多的开发者和研究者参与到大模型的创新和优化中来，从而推动整个行业的进步。同时，开源也有助于提升智谱的品牌知名度和影响力。</li><li><strong>闭源满足商业需求</strong>：智谱认为闭源的商业版本能够提供更加专业和定制化的服务，满足客户在安全性、稳定性、技术支持等方面的需求。这对于商业客户来说是非常重要的，因为他们需要确保使用的技术能够带来实际的商业价值。</li><li><strong>开源与闭源的互补性</strong>：开源和闭源并不是对立的关系，而是相互补充的。开源可以促进技术的快速迭代和创新，而闭源则可以确保技术的稳定性和安全性，满足商业化的需求。两者共同构成了一个健康、多元的技术和商业生态。</li></ol><p style="margin-left: 0px;">如果用一句话总结智谱 CEO 张鹏的观点：<strong>开源和闭源不是对立的，而是相互补充的，开源推动技术创新和生态建设，闭源满足商业化需求和提供稳定服务，共同促进大模型行业的健康发展。</strong></p><p style="margin-left: 0px;">除此之外，年初以来大热的 AI 公司 —— Moonshot AI （月之暗面）的创始人杨植麟先生去年十月接受极客公园的<a href="https://www.geekpark.net/news/325738" target="_blank">采访</a>时也提出：<strong>“闭源是通往超级 APP 的唯一通路”</strong>。同时其认为，<strong>大模型领域的开源本质上是 ToB 的获客工具</strong>。<strong>现阶段面向于C端的头部 Super App 一定是基于自研的模型做出来的</strong>，Moonshot AI 用闭源的方式做，是持续演化的过程。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/27/article/a6f1a852b913b6e61a37028c0f405f08.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Moonshot AI CEO 杨植麟汇报 Kimi Chat 产品</figcaption></figure><p style="margin-left: 0px;"><strong>综上三点，从目前的情况来看，大模型的闭源在一定程度上似乎是不可避免的。尽管开源大模型可以推动技术的创新和生态建设，但闭源模型更能满足商业化需求，提供稳定的服务。</strong></p><h2>结语</h2><p>写到这，或许已经对大模型厂商开源与闭源的未来有了初步的判断。现在，中国的 AI 公司可谓“百花齐放”，而更为关键的是，目前对于公众来说，AIGC 领域也是一片蓝海。因此，正如之前的“单车大战”、“充电宝大战”、“团购大战”等一样，对于现阶段的每个 AI 厂商和它的竞品来说，用户的数量和模型的质量永远是排在第一位的存在。</p><p><strong>因此，虽然可能令人有些沮丧，但闭源的大模型似乎现在看来确实更有前景，而开源的大模型获得真正的成功，或许在当下，只是一种奢望而已。</strong></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87570</id>
            <title>全新发布！桌面端效率工具RunFlow</title>
            <link>https://sspai.com/post/87570</link>
            <guid isPermaLink="false">https://sspai.com/post/87570</guid>
            <pubDate></pubDate>
            <updated>Tue, 26 Mar 2024 11:53:26 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 跨平台, 多语言, 自定义样式与主题, 关键字驱动
<br>
<br>
总结: RunFlow是一款跨平台的生产力工具，支持多语言，允许用户自定义样式与主题，功能由关键字驱动。 </div>
                        <hr>
                    
                    <p><a href="https://myrest.top/zh-cn/myflow"><strong>RunFlow</strong></a>是一款跨平台的生产力工具，可以启动应用程序和搜索文件等，类似于Windows平台的<a href="https://github.com/Wox-launcher/Wox">Wox</a>和<a href="https://github.com/microsoft/PowerToys">PowerToys</a>，同样也类似于Mac平台的<a href="https://www.alfredapp.com/">Alfred</a>和<a href="https://www.raycast.com/">Raycast</a>。但我们并不与这些工具相同，我们有自己独特的新特性。下面，我们将向您详细的介绍RunFlow实现了哪些特性。这是一次奇妙的旅程，让我们开始吧。（<a href="https://solo.xin/article/1039">Solo 社区</a>投稿）</p><h3>跨平台</h3><p>第一个主要的特性就是跨平台，让您在多平台之间工作时拥有统一的UI和操作体验，不需要来回的切换工具。</p><blockquote><p>但是对于Linux用户来说有些抱歉，第一版的RunFlow在Linux平台上存在一些严重的问题，所以目前我们还不支持Linux。但是我们会努力的解决这些问题，让RunFlow在Linux上能很好的运行，最终Linux将得到支持。</p></blockquote><h3>多语言</h3><p>RunFlow是支持多语言的，但是在默认情况下，我们仅提供了英语和简体中文两种语言。如果您更偏好其他语言，您可以到我们的<a href="https://myrest.top/zh-cn/store/plugin?query=language">插件商店</a>去搜索语言翻译器，当您安装插件后，您就可以选择您喜欢的语言了。</p><h3>自定义样式与主题</h3><p>这里我们想向您介绍我们的设计理念之一，就是我们允许用户高度定制化大多数功能，所以我们允许插件提供一个或多个窗口样式和主题，让您选择您喜欢的样式与主题。</p><h3>关键字驱动</h3><p>在RunFlow中，一个功能一定是由关键字提供，除了一些特殊情况，比如语言翻译器、 主题提供服务和数据同步服务等。所以，同样地，一个关键字也同样意味着一个功能，并且您安装的大多数插件也都是由关键字组成的。</p><p>要使用关键字对应的功能，最常用方式就是输入这个关键字，如果这个功能不需要任何参数，您可以在下面看到对应的结果行，然后您可以通过按<code>回车</code>键的方式来执行它（确保这个结果行在最前面，如果不是，您需要按箭头<code>上</code>和<code>下</code>来选择它，或者移动鼠标悬停在上面），或者双击这个结果行亦可以执行。</p><figure class="image ss-img-wrapper"><img alt="lock_computer" src="https://cdn.sspai.com/2024/03/26/article/800e054a86fa985416b99c051371b2fb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>如果这个功能需要一个或多个参数，那么您需要输入一个空格来分隔关键字和参数（多个参数之前同样也需要使用空格来分隔）。比如，输入<code>timer start</code>来启动一个计时器，这里的<code>timer</code>是一个关键字，<code>start</code>是一个参数。</p><figure class="image ss-img-wrapper"><img alt="timer_start" src="https://cdn.sspai.com/2024/03/26/article/47a527090c224018daf1d2c3e150aec8.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>然而，您会发现当您输入<code>start timer</code>同样也能正常工作，在这种情况下<code>timer</code>仍然是一个关键字，<code>start</code>也仍然是一个参数，为什么这种情况没有问题呢？</p><p>因为我们支持 <code><strong>后置匹配</strong></code><strong>**，这个特性允许您先输入参数，最后输入关键字，这将某些情况下非常有用。比如，您想通过base64编码一些文字，您首先从其他地方复制或拖拽或输入这些文字作为了参数，但是您忘记了在最前面输入关键字</strong><code><strong>base64</strong></code><strong>，如果我们没有 **</strong><code><strong>后置匹配</strong></code> 这个功能，您必须将光标移到最前面，然后输入关键字<code>base64</code>和一个用于分隔关键字与参数的空格，但是幸运的是我们支持，您仅需要在文字后面追加关键字即可（同样需要空格分隔），比如通过base64编码文字<code>myrest.top</code>，您可以这样输入：<code>myrest.top base64</code>。</p><p><code><strong>后置匹配</strong></code> 最有用的还是 <code><strong>特殊关键字</strong></code><strong>**。</strong>当一个关键字以字符而非字母或数字开头时，我们将其标记为特殊关键字，当特殊关键字与<code>后置匹配</code>在一起工作时，我们就不再需要使用一个空格开来分隔关键字和参数了。**</p><p>现在，让我们来看一个关于特殊关键字<code>/</code>的示例，该关键字由我们的插件<a href="https://myrest.top/zh-cn/store/plugin?id=top.myrest.myflow.ai">智能助手</a>提供，它可以与人工智能聊天，比如ChatGPT。当您想问一些问题时，然后只需要输入关键字即可触发该功能，这非常的有用。</p><figure class="image ss-img-wrapper"><img alt="ai" src="https://cdn.sspai.com/2024/03/26/article/c98fe45da55b08232b63a1f550c9e9d0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><blockquote><p>上面提到的关键字<code>base64</code>和<code>/</code>都不是我们的内置的功能, 您可以在插件商店找到关键字<a href="https://myrest.top/zh-cn/store/plugin?query=base64"><code>base64</code></a>和<a href="https://myrest.top/zh-cn/store/plugin?query=/"><code>/</code></a>。</p></blockquote><blockquote><p>您可能认为您需要记住所有这些关键字，不要担心，我们有一个关键字建议的功能，可以通过前缀匹配来推断您想要做什么。所以，您不需要记住这些关键字，我们的<code>建议</code>将对您非常有帮助。</p></blockquote><h3>可刷新的结果</h3><p>通过上面的案例，您已经看到这些结果的界面是可以实时刷新的。让我们看另一个可刷新结果的案例：输入关键字<code>random</code>以获得一个随机字符串，它返回的结果是静态的不可变的，但是如果这个结果您并不满意，您可以按<code>Alt</code>键来刷新它以获取一个新的随机字符串，或者点击右侧的<code>刷新</code>按钮。</p><figure class="image ss-img-wrapper"><img alt="random" src="https://cdn.sspai.com/2024/03/26/article/0e03ad1ac32ed1bf25ff477ea67ada89.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>结果的上下文菜单</h3><p>结果的上下文菜单，我们也称之为<code>结果回调扩展</code>。跟您在文件浏览器里查找文件一样，您可以在文件上面右键，然后会弹出一个有许多操作的上下文菜单。所以RunFlow也这样实现，但不仅仅是针对文件，所有其他类型的结果也都可以有上下文菜单。并且在RunFlow里，我们使用<code>Alt</code>键代替鼠标右键来弹出菜单。</p><p>让我们来看一个文件的例子，我们按<code>Alt</code>键来弹出上下文菜单，然后您可以按箭头<code>上</code>或<code>下</code>来选择一个具体您想执行的菜单，然后按<code>回车</code>来执行它，或者鼠标双击也行。</p><figure class="image ss-img-wrapper"><img alt="context_menu" src="https://cdn.sspai.com/2024/03/26/article/8badc1357ccdc932a170a5089156b4d9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我们还想向展示另一种呈现上下文菜单的方式，仅需要移动鼠标并悬停在右侧<code>上下文菜单</code>的图标上即可，让我们看一个具体的样例。</p><figure class="image ss-img-wrapper"><img alt="context_menu" src="https://cdn.sspai.com/2024/03/26/article/f5e7925e1b9a923b3247b0ba1a88f7ce.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>工具栏</h3><p>工具栏可以实现快速访问日常要使用的功能。在上面提到的例子中，您已经看到了位于右上侧的工具栏。您可以在<strong>通用设置</strong>页面自定义工具栏。</p><h3>固定的关键字</h3><p>当一个关键字被固定之后，我们会为这个关键字创建一个新的选项卡，在这个选项卡下面工作时，您将不再需要输入关键字，同时也不会受到其他关键字的干扰。</p><figure class="image ss-img-wrapper"><img alt="pin_file" src="https://cdn.sspai.com/2024/03/26/article/7d1049e82fd2f60df6e6febed4bf0bb2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>可交互的界面</h3><p>前面提到的案例中，都是通过文本框进行的交互，但是如果我们有许多复杂的逻辑，以及需要更多的用户输入怎么办呢? 不用担心，我们有一个叫<code>功能页</code>的特性，可以完成复杂的交互，就像我们的<code>文件批量重命名</code>一样。</p><figure class="image ss-img-wrapper"><img alt="file_rename" src="https://cdn.sspai.com/2024/03/26/article/bdc6edc51fa8ff384d452c69a5d03e3c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>独立窗口</h3><p>如果您不喜欢在我们的工作窗口上有多个选项卡，或者您不想在多个选项卡之间来回切换。您可以在选项卡名称上面鼠标右键，然后您会看到一个弹出的<code>独立窗口运行</code>按钮，运行它后就像这样。</p><figure class="image ss-img-wrapper"><img alt="file_in_separate_widow" src="https://cdn.sspai.com/2024/03/26/article/cdcec7825cdf0e831b81f084b65770f5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>热点事件</h3><p>热点事件是另一个触发关键字功能的快捷方式。当前，我们支持触发角，鼠标长按事件，热键（快捷键）和Cron表达式，您可以自定义所有这些热点事件来触发您想要执行的功能。</p><h3>专注模式</h3><p>专注模式与固定的关键字并不相同，它不会创建新的选项卡，但是它们的相同点是都不会受到其他关键字的干扰。还有一点是，专注模式通常需要开发者做一些额外的工作。</p><p>让我们来看一个在专注模式下使用命令行的示例（由关键字<code>&gt;</code>触发）。</p><figure class="image ss-img-wrapper"><img alt="commandline" src="https://cdn.sspai.com/2024/03/26/article/0259f8c0f64fe1063807a81adfdd5903.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>数据安全与同步</h3><p>您的数据是加密存储在本地的，我们并不会将您的数据上传至任何云端。所以，您无需担心任何数据安全问题。</p><p>但如果您想多个平台之间同步数据，在我们默认的实现中会显得有点繁琐，详情请查看<a href="https://myrest.top/zh-cn/guide/myflow/user#/?id=sync-data">如何同步数据</a>。</p><h3>插件</h3><p>我们支持通过安装插件来扩展RunFlow现有的功能，并且我们的插件的要求是非常宽松的。所以插件可以做许多复杂的任务，以给予插件无限的可能。</p><p>我们为RunFlow捆绑了一个内置的插件，它提供了许多常用的功能，您可以在这里了解关于我们<a href="https://myrest.top/zh-cn/store/plugin?id=top.myrest.myflow.builtin">内置插件</a>的更多信息。</p><h3>开发插件</h3><p>这里，我们想对开发者说。</p><p>开发一个RunFlow插件是非常简单的，而且并没有编程语言的限制。但由于RunFlow是基于JetBrains提供支持的Compose Multiplatform构建的，所以如果您熟悉Java和Kotlin当然会更好。</p><p>我们欢迎开发者来开发并提交插件，请阅读我们的<a href="https://myrest.top/zh-cn/guide/myflow/plugin">插件开发指南</a>。</p><hr /><h3>订阅</h3><p>这个专栏会同步更新在 Solo 社区、公众号、知乎、社群。</p><p>微信搜索"<strong>Solo 独立开发者社区</strong>"或者扫描二维码，即可手机订阅。</p><p>社区网址：<a href="http://solo.xin/">Solo 独立开发者社区-链接每一位独立开发者, 从 Solo 开始</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87491</id>
            <title>用GitHub Action，制作一款推理日历</title>
            <link>https://sspai.com/post/87491</link>
            <guid isPermaLink="false">https://sspai.com/post/87491</guid>
            <pubDate></pubDate>
            <updated>Tue, 26 Mar 2024 10:00:25 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 豆瓣, 推理主题, 海报生成, Python
<br>
<br>
总结: 作者在豆瓣小组件推理主题日历的开发过程中，通过手动设计海报和使用Python自动生成海报的方式，实现了推理主题作品的展示和更新。通过不断尝试和改进，作者解决了手动更新时间的问题，同时利用豆瓣爬虫和GitHub Action等工具，实现了自动抓取作品信息和海报生成，提高了效率和便利性。 </div>
                        <hr>
                    
                    <h2>前言</h2><p>豆瓣刚出小组件的时候，我用过一段时间豆瓣电影日历，当时的体验还不错。后来在慕尼黑Hugendubel书店，有一个区域是专门卖各种日历的，有风景画，哈利·波特主题，和二次元等等。我是为了看推理小说才去的那家书店，所以萌生了做一款推理主题日历的想法。</p><span class="ss-linkCard">&nbsp;</span><p>我想先从最简单的功能开始，因为是在手机上观看，日历卡片设计成了竖屏，日历的条目包括推理主题的书籍和电影，最上面是一张作品的海报，下方是作品名称，类型等信息。</p><p>我先用Canvas设计了一个海报，然后每天手动更新图片和信息。结果第二天我就出了差错，只更新了日期，但没更新星期几。虽然Canvas的设计我觉得还挺好看的，但手动更新时间毕竟不是长久之计，我开始考虑用Python生成海报。</p><figure class="image ss-img-wrapper image_resized" style="width: 407px;"><img src="https://cdn.sspai.com/2024/03/23/84ba9d9fe28179bd35c8a32c767dd932.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>手动设计的海报，结果忘记更新星期几了</figcaption></figure><h2>开发过程</h2><p>因为最初的想法只是根据手动输入的网址生成一张海报，然后用脚本自动标记上时间，防止时间出现错误，所以我先用Pillow这个Python包写了一下海报生成的代码。我主要是设计了一下海报和文字的位置和颜色，其中颜色是根据条目的主题而变化的，每天都不一样。豆瓣评分的图标用的是GitHub上常见的设计。</p><p>我随便选了一个可以商用的字体，叫作「站酷文艺体」。可有一次我发现《和騎士度過的那一夜》这本推理短篇集的名字无法正确显示，才意识到字体需要包含简体和繁体，所以更换成了「霞鹜文楷」。</p><p>我试用了一下，因为不满足于手动输入图片网址的繁琐，又找了一下网上的豆瓣爬虫，自动抓取豆瓣条目的图片。不过由于豆瓣条目的网址还是需要手动输入，整个流程很费时间。我想到了使用一个json文件来存储这些网址，脚本只需要在json文件里读取最新输入的条目。等以后积累的条目多了，就可以随机选取一条来当作背景图片。</p><p>每天输入一条的话，不知道要等到猴年马月才能积累足够的条目。偶然间发现了一个GitHub Action，可以从豆瓣上爬取用户标记过的作品。一次性把全部条目下载下来，每个条目包含了名称，类型，上映/出版日期等信息，十分方便。</p><pre class="language-null"><code>	{
		"comment": "《巧克力公寓谋杀案》",
		"rating": {
			"count": 1,
			"max": 5,
			"star_count": 4,
			"value": 4
		},
		"sharing_text": "我的评分：★★★★ 《巧克力公寓谋杀案》 https://book.douban.com/subject/36480672/ 来自@豆瓣App",
		"sharing_url": "https://www.douban.com/doubanapp/dispatch?uri=/subject/36480672/interest/4036595172",
		"tags": [],
		"charts": [],
		"platforms": [],
		"vote_count": 1,
		"create_time": "2024-03-15 20:05:51",
		"status": "done",
		"id": 4036595172,
		"is_private": false,
		"subject": {
			"rating": {
				"count": 2253,
				"max": 10,
				"star_count": 3.5,
				"value": 6.8
			},
			"controversy_reason": "",
			"pubdate": [
				"2024-1"
			],
			"pic": {
				"large": "https://img2.doubanio.com/view/subject/l/public/s34735111.jpg",
				"normal": "https://qnmob3.doubanio.com/view/subject/m/public/s34735111.jpg?imageView2/2/q/80/w/200/h/300/format/jpg/sharpen/1"
			},
			"honor_infos": [],
			"other_versions_count": 0,
			"is_show": false,
			"vendor_icons": [
				"https://img1.doubanio.com/f/frodo/161387ce451872cbf51fcb288cd5ffd1dcd89705/pics/vendors/logo_dedao@2x.png",
				"https://img1.doubanio.com/f/frodo/f6f620132e6d8a02d171f03114bbe2339aa8af97/pics/vendors/logo_doubanread@2x.png"
			],
			"card_subtitle": "紫金陈 / 2024 / 湖南文艺出版社",
			"book_subtitle": "",
			"id": "36480672",
			"author": [
				"紫金陈"
			],
			"is_released": true,
			"vendor_original_price": "",
			"color_scheme": {
				"is_dark": true,
				"primary_color_light": "a55634",
				"_base_color": [
					0.05000000000000001,
					0.6837606837606838,
					0.9176470588235294
				],
				"secondary_color": "f9f6f4",
				"_avg_color": [
					0.045662100456621,
					0.6666666666666666,
					0.8588235294117647
				],
				"primary_color_dark": "7f4228"
			},
			"type": "book",
			"cover_url": "https://dou.img.lithub.cc/book/36480672.jpg",
			"min_sale_price": null,
			"press": [
				"湖南文艺出版社"
			],
			"pages": [
				"424"
			],
			"sharing_url": "https://book.douban.com/subject/36480672/",
			"url": "https://book.douban.com/subject/36480672/",
			"title": "长夜难明 : 双星",
			"uri": "douban://douban.com/book/36480672",
			"subtype": "book",
			"intro": "闹市街头，女子坠楼身亡，腹部有刀伤。\n两天后，一段赵泽宇手持带血匕首逃离案发现场的视频，被人在网上公开。赵泽宇是江北市原市长赵忠悯的独生子，江北知名企业家，案件顿时引发全社会关注。赵泽宇被警方刑拘，可他坚称自己没有杀人，是被人陷害的，事发后他因害怕仓促逃离现场。死者实为跳楼自杀。\n警方当然不信这番狡辩，可通过一系列的技术手段还原案发经过，结果证实死者竟真的是自杀。\n现在警方面临的问题更加棘手了。从证据角度讲，死者是自杀的，赵泽宇无罪，警方应该放人；可视频在前，全网皆知，加上赵泽宇的家庭背景，如果警方对外通报死者是自杀的，谁会相信？人民群众会质疑警方徇私枉法。\n事到如今，各方都希望赵泽宇“有罪”，最好还是重罪，这样才能平息这场风波。",
			"buy_more_uri": "",
			"null_rating_reason": "",
			"article_intros": [
				{
					"useful_count": 1,
					"uri": "douban://douban.com/review/15811580",
					"comment_count": 1,
					"intro": "没有多么长夜难明，不如改名《巧克力公寓谋杀案》",
					"total": 1,
					"type": "review"
				}
			],
			"vendor_sale_price": "",
			"has_ebook": true
		}
	},</code></pre><p>因为是「推理日历」，我在脚本中加了筛选条件，随机选取数据库中的条目，直到选到悬疑或者推理类的作品为止。然而并不是所有的条目都有类型标注，所以我筛选的方式是判断简介里面是否出现了「悬疑」，「推理」，「侦探」等关键词。</p><p>我能想到的发布方式有好几种。最简单省事儿的办法就是发布在社媒上，比如豆瓣相册，小红书，公众号之类的地方。头两天的海报我也确实是这么做的。之前用过Flask，可以在pythonanywhere上发布，优点是站点访问速度较快，但每三个月就要点一下更新，不然站点会过期。</p><p>更正式的发布方式，是做成类似「ONE·一个」那样的APP，但我没搞过移动端的开发，对网上看到其他人用的flutter之类的不熟。而且不付费注册的话，只能把APP发布在Test Flight里，不能上架应用商店。其实除了APP，ios还可以使用小组件发布一些轻量级的应用，我看到了两款日语单词学习组件，调用了词典网站或者APP的API，可以随机展示日语单词和翻译，用的就是Scriptable。</p><span class="ss-application">&nbsp;</span><p>我决定使用的办法，就是用GitHub Pages发布日历并且设置成每天自动更新，然后移动端使用小组件来展示网页。日历的网址是<a href="https://code-cp.github.io/mystery-calendar/">https://code-cp.github.io/mystery-calendar/</a>，小组件叫作Web Widget。这款小组件可以根据输入的网址显示网页快照。</p><span class="ss-linkCard">&nbsp;</span><p>不过我适用了一段时间后，发现Web Widget有时候无法更新网页。我发现了另一款相似的小组件<a href="https://apps.apple.com/us/app/glimpse-2/id1524217845">Glimpse 2</a>，网页的更新更加及时，试用了几天感觉很不错。</p><span class="ss-application">&nbsp;</span><p>上文提到了GitHub Action，我用它来运行代码库中生成日历的脚本。在代码库中新建一个.github/workflows文件夹，然后创建yml格式的配置文件。GitHub会根据配置文件里设定的运行时间（<code>cron: '0 1 * * *'</code>）来执行里面的步骤，比如可以每隔一个小时，每天某个时间运行等等。具体如何设置时间，可以参考<a href="https://crontab.guru/">这个网站</a>。</p><p>不过GitHub Action并不能完全按照yml文件里的时间来执行，这取决于GitHub的runner的承载能力。我看网上的讨论说，最好把分钟数（也就是第一位的0）改成非0的值，因为大多数的Action都是在0分的时候执行。</p><pre class="language-null"><code>name: run-main

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *' 

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content to github runner

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # install the python version needed
          
      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: execute py script # run main.py
        run: |
            cd src/ 
            python main.py
          
      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff-index --quiet HEAD || (git commit -a -m "updated logs" --allow-empty)
          
      - name: push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main </code></pre><p>但在调试的时候没时间等待它自动运行，往往需要手动执行workflow，可以在配置文件里加上<code>workflow_dispatch:</code>，就可以在Github网站上点击Run workflow来运行了。</p><p>这个脚本先执行<code>checkout repo content</code>，因为我要运行的是Python脚本，还要加上<code>setup python</code>，这些都是GitHub提供的。接下来会安装代码库的requirements.txt里的包，然后运行脚本。main.py会生成一个新的日历，保存在images文件夹内，所以需要commit files和push changes，把图片保存在代码库中，GitHub Pages就会在deploy的时候使用新的图片。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/23/97f7de0a38e61d82ad48e6b24976bbf6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>GitHub Actions自动运行并且commit, push到了代码库</figcaption></figure><h2>结语</h2><p>制作日历之前，我以为这只是一个很简单的工程，没想到有这么多细节需要处理，比如怎么处理不同格式的时间和字体。除了豆瓣评分，我还想要加上IMDb和烂番茄的评分，但暂时没时间去研究那些网站的API了。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/23/18d03ae7d6ca9a389be95a8499cca55c.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>手机上显示日历的效果展示</figcaption></figure><p>目前这个日历仅仅是一个demo，以后有机会，还是想把它做成「ONE·一个」那样的风格。其实我不仅仅想做一个日历，我还没找到任何一款专门做推理内容的APP，所以更想做一款包含推理资讯，论坛等内容丰富的推理APP。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87150</id>
            <title>Android 的无障碍服务，让每个人体验精彩世界</title>
            <link>https://sspai.com/post/87150</link>
            <guid isPermaLink="false">https://sspai.com/post/87150</guid>
            <pubDate></pubDate>
            <updated>Tue, 26 Mar 2024 08:21:30 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Matrix, 无障碍服务技术, Android, 视觉辅助
<br>
<br>
总结: 文章介绍了少数派的写作社区Matrix推荐的无障碍服务技术，包括针对残障人士的视觉、听觉和肢体障碍提供的多样化支持，以及Google为Android开发的无障碍服务应用，如实时转写、实时字幕和声音增强器等，旨在让每个人的世界变得更加丰富多彩。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>如何帮助残障人士使用 Android 手机等移动设备？</p><ul><li>对于视觉障碍人士，怎样为其提供其他媒介支持？如语音辅助、触觉感知……</li><li>对于听觉障碍人士，怎样为其提供其他媒介支持？如视觉帮助……</li><li>对于肢体障碍人士，怎样为其提供其他媒介支持？如追踪技术……</li></ul><p>无障碍服务技术应运而生，提供多样化的方式，让每个人的世界变得丰富多彩。</p><figure class="image ss-img-wrapper image_resized" style="width: 464px;"><img src="https://cdn.sspai.com/2024/03/13/8ed2420bbb662b49f169eaed82c89cce.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>无障碍服务背后的技术</figcaption></figure><p>话不多说，让我们来一起看看 Google 为 Android 开发过哪些无障碍服务应用。</p><h2>听觉辅助 —— 看见爱的分贝</h2><h3>实时转写</h3><p>🔗 链接：<a href="https://play.google.com/store/apps/details?id=com.google.audio.hearing.visualization.accessibility.scribe">实时转写和声音通知</a></p><span class="ss-application">&nbsp;</span><p>「实时转写」功能，在对话的时候，可以实时查看手机屏幕，「看见」对方说了什么。</p><p>打开应用，即可开启一场视觉交流。任何发出的声音，都会呈现在屏幕上。同时贴心地在屏幕上提供了输入框，供用户来回复他人。</p><figure class="image ss-img-wrapper image_resized" style="width: 320px;"><img src="https://cdn.sspai.com/2024/03/13/02f4244f14a8bbd56250a6ba2998d1cf.gif" /><figcaption>实时转写</figcaption></figure><p>由于应用会实时监听周围的环境声音，因此它还有一个功能是「声音通知」，即：对敲门声、烟雾报警器声、婴儿啼哭等声音发送通知。</p><p>当然你也可以设置任何事件，该事件被提起时，手机会震动。比如，找不到手机时大喊一声 ——「我的圣剑……」🗡️</p><h3>实时字幕</h3><p style="margin-left: 0px;">这是在 Android 10 (Q) 及更高版本中引入的辅助功能，可以自动为在手机上播放的视频、播客、语音消息和音频消息生成实时字幕。实时字幕功能不仅帮助听障用户在无法听到声音的情况下查看媒体内容，也方便那些母语非英文的用户观看不带字幕的英文视频。</p><figure class="image ss-img-wrapper image_resized" style="width: 451px;"><img src="https://cdn.sspai.com/2024/03/27/f8db35c04236542a7d2bfd1c831966ad.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">实时字幕功利用本地机器学习模型来识别语音并生成字幕，它可以在没有互联网连接的情况下工作，保障了用户的隐私。</p><h3>声音增强器</h3><p>🔗 链接：<a href="https://play.google.com/store/apps/details?id=com.google.android.accessibility.soundamplifier&amp;hl=en_US&amp;gl=US">声音增强器</a></p><span class="ss-application">&nbsp;</span><p>要想完整体验声音放大器的功能，首先需要一副耳机：</p><ul><li>应用通过麦克风收集并放大外界声音，通过「降噪」、「增强微弱声音」、「增强低频/高频声音」功能让您能更好的倾听外界声音。</li><li>对于手机媒体声音，应用也提供「增强微弱声音」、「增强低频/高频声音」的功能。</li></ul><h2>视觉辅助 —— 探索不一样的世界</h2><h3 style="margin-left: 0px;">TalkBack</h3><p style="margin-left: 0px;">🔗 链接：<a href="https://play.google.com/store/apps/details?id=com.google.android.marvin.talkback&amp;hl=en_US&amp;gl=US">Android 无障碍服务组件</a></p><p style="margin-left: 0px;">TalkBack 这一应用是属于 Android 无障碍套件的一部分，无障碍套件还包括无障碍菜单和随选朗读：</p><ul><li>无障碍菜单：提供大型屏幕菜单，用于锁定手机、控制音量和亮度、抓取屏幕截图等等操作。</li><li>随选朗读：只需选择屏幕上的内容，系统就会大声把它们朗读出来。</li></ul><p>TalkBack 最引人注目的功能就是「语音反馈」。具体而言，TalkBack 会读出屏幕上的文本、按钮标签等界面元素，让视力障碍用户通过听觉的方式了解界面上发生的事情。</p><p>让我们想象这样一个场景 —— 视力障碍的人士，往往会通过触摸来使用手机：他们会在屏幕上用一根手指不断拖动并点按，让触摸焦点不断发生变化，TalkBack 会将焦点对应的界面元素朗读出来。对于文本元素，TalkBack 会朗读文本内容；对于按钮元素，TalkBack 不仅会朗读按钮标签，还会语音告诉用户如何能触发点击动作。</p><p>除了提供语音反馈以外，TalkBack 另一个优秀的功能是「导航辅助」。在屏幕上用一根手指点按，会激发语音反馈功能，那么怎样才能滑动屏幕？怎样才能触发点击操作？</p><p>和正常导航功能不同，TalkBack 后专为视力障碍人士设计了一套全新的导航手法。想象你是一个视力障碍人士，要了解屏幕上发生了什么，并想根据具体的情况，进行下一步动作。一定会先用一根手指，探索界面。通过点按，倾听 TalkBack 的语音反馈。如果倾听到当前聚焦点是一个按钮，并想要触发按钮，连续点按两下即可；如果想滑动屏幕，使用两根手指向上或者向下拖动即可滑动屏幕，在进行互动的时候，会有提升的叮咚声音；同样的，通过两根手指的滑动可以打开和关闭菜单栏。</p><figure class="image ss-img-wrapper image_resized" style="width: 320px;"><img src="https://cdn.sspai.com/2024/03/15/ead116843d1ab59c05237bb1aaa5c7c3.gif" /><figcaption>在 TalkBack 下浏览少数派应用</figcaption></figure><p>&nbsp;</p><p>TalkBack 还开发了更多的导航手势，如三指点按屏幕，能打开 TalkBack 菜单。除此之外，用户可以自定义手势，比如单指滑动、点按、长按、双指……以快速访问常用功能或应用。</p><p>TalkBack 提供多种多样的朗读控件单元，比如「控件」，朗读一整个控件对应的内容；「行」，一次朗读一行；「段落」，一次朗读一段；还有其他阅读方式，如「标题」、「字词」、「字符」、「链接」；除此之外，还能修改朗读的「语言」、「语速」。用三根手指滑动，就可以更改朗读控件的属性。</p><figure class="image ss-img-wrapper image_resized" style="width: 320px;"><img src="https://cdn.sspai.com/2024/03/15/d9f85eb973a857d2747fbbca0d2a585b.gif" /><figcaption>三根手指滑动更改朗读控件的属性</figcaption></figure><p>此外，还有更多功能，如「盲文键盘」。用户在屏幕上直接输入盲文点来输入文字，供了一种高效且直观的打字方式。</p><p>除了上述主动探索外，TalkBack 还会提供被动功能，会主动播报通知、时间、点亮等消息，对于开关键、音量键等的触碰也有对应的朗读。</p><p>总的来说，Android TalkBack 为视障用户提供了一种能够更加自主地使用智能设备的方式，提供数字可访问性和独立性，极大的消除了这些用户的数字鸿沟。</p><h3>Lookout</h3><p>🔗 链接：<a href="https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.reveal&amp;hl=en_US&amp;gl=US">Lookout</a></p><span class="ss-application">&nbsp;</span><p>如果说 TalkBack 是帮助视力障碍人士更好的使用手机，感受科技带来的方便，那么 Lookout 则更专注于探索外部世界，借助计算机视觉技术帮助视力障碍人士「看清」世界。它提供以下几种模式：</p><ul><li>「文字模式」：无需拍照会自动定位取景框中的文字部分。</li><li>「文档模式」：通过拍照，将图片中的文字提取出来并朗读（文字模式的静态版本）。</li></ul><p>在很多其他应用中都能看到上述两种模式类似的影子，接下来我们来看看几个更加有趣的模式：</p><ul><li>「探索模式」：尝试将取景框对准世界的任何一个角落吧，探索模式会将镜框中的世界用声音描绘出来。如，当你对准一个人时，它可能会描述出人物、眼镜、衬衣、牛仔裤、休闲鞋等关键字词。</li><li>「图片模式」：选择一张图片，描述出图片的内容。（最新的更新提供了基于人工智能支持的图像描述，以及通过语音和文本提问的能力，但国内尚不支持）</li><li>「货币模式」：对准钱币，它会快速可靠地识别钞票的数目（仅限美元、欧元或印度卢比），这对于视力障碍人士来说可是不错的交易小助手。</li><li>「食物模式」：通过扫描产品的标签或条形码就能快速了解产品。（仅限于一些国家，国内食品尚不支持）</li></ul><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/18/02fea67bac9abfe549b86aacf1f874db.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>在 Lookout 各种模式下「听见」视觉内容</figcaption></figure><h2 style="margin-left: 0px;">肢体辅助 —— 给我一个按钮 🔘，我能接触整个世界</h2><h3 style="margin-left: 0px;">开关控制</h3><p style="margin-left: 0px;">🔗 链接：<a href="https://support.google.com/accessibility/android/answer/6122836?hl=zh-Hans">开关控制</a></p><p>「开关控制」允许用户使用单个开关或按钮来遍历和选择屏幕上的元素。</p><p>对于因为运动受伤或者其他因素导致肢体使用存在障碍的用户，这款应用显得尤为方便。不需要触摸整个屏幕与手机进行交互，使用单个开关遍即可遍历和选择屏幕上的元素。</p><p>这里的开关可是广义上的哦！既可以是一种「物理设备」，例如 AbleNet、Enabling Devices、RJ Cooper 和 Tecla，可将按键信号发送到您的 Android 设备；也可以是「蓝牙键盘」的某些按键；当然，你也可以使用内置的「Android 设备上的按钮」<strong>，</strong>如音量调高和音量调低按钮。</p><figure class="image ss-img-wrapper image_resized" style="width: 591px;"><img src="https://cdn.sspai.com/2024/03/15/6cc78d2ece018bed368d2820bb67cc21.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>独立于手机的物理开关</figcaption></figure><p>这里，我们来看看一个非常典型的场景 —— 通过「面部动作 + 相机」作为开关。</p><ol><li>在开关控制设置中，打开「相机开关设置」，一共提供 6 个面部动作：「张嘴」「微笑」「挑眉」「向左看」「向右看」「向上看」。</li><li>选择某一个面部动作，为其制定操作。这些操作包括：<ul><li>相机专属操作：「暂停相机开关」</li><li>移动和选择：「选择」「上一项」「下一项」</li><li>对可突出显示的内容执行操作：「轻触并按住」「向前滚动」「向后滚动」</li><li>全局操作：「主屏幕」「返回」「通知」「快捷设置」「概览」</li></ul></li></ol><figure class="image ss-img-wrapper image_resized" style="width: 320px;"><img src="https://cdn.sspai.com/2024/03/15/19d5240ca76e08347823dd740bdfc357.gif" /><figcaption>使用相机开关进行井字棋小游戏</figcaption></figure><p>我们还可以对特定动作进行精细化的调整，包括「表情的幅度」、「动作保持的时长」等等。</p><p>另外，我们最好记得设置「重复的相机开关触发动作时长」，这样就可以防止表情时间保持过久带来的误触。</p><h3>Voice Access</h3><p>🔗 链接：<a href="https://play.google.com/store/apps/details?id=com.google.android.apps.accessibility.voiceaccess&amp;hl=en">Voice Access</a></p><span class="ss-application">&nbsp;</span><p>最近新上映的沙丘 2 里面，姐妹会利用「音言」控制他人的行为；这里，我们也能「音言」控制我们的手机。</p><p>一切操作都可以用声音来命令：打开应用程序、在屏幕之间导航、键入消息、编辑文本……</p><h2 style="margin-left: 0px;"><strong>小结</strong></h2><p style="margin-left: 0px;">科技造福人类，无障碍服务的出现，和随之配套的应用组件，展现了 Google 在 Android 设备上的人文情怀。</p><p style="margin-left: 0px;">我相信这次推荐的这几个小工具，能够帮助不同用户更好的使用 Android 手机，通过小小的手机窗口，探索大千世界。感谢阅读。</p><p style="margin-left: 0px;">&gt; 关注 <a href="https://sspai.com/s/J71e">少数派公众号</a>，解锁全新阅读体验 📰</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87551</id>
            <title>更适合P人宝宝体质的学习方法：你根本不需要“自律”</title>
            <link>https://sspai.com/post/87551</link>
            <guid isPermaLink="false">https://sspai.com/post/87551</guid>
            <pubDate></pubDate>
            <updated>Tue, 26 Mar 2024 08:17:49 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 自学, 失败, 学习能力, 阅读
<br>
<br>
总结: 作者在自学web开发过程中遇到失败，意识到自己缺乏学习能力，通过阅读心理学和脑科学书籍，开始重新思考学习方法，强调体验式学习的重要性。 </div>
                        <hr>
                    
                    <p>这篇文章的诞生大概要从这里开始：</p><p>自学 web 开发，这应该是我在脱离应试教育体系后，第一次真正的想要学点什么东西，结果并不美好：我在半途而废和重新开始中循环，一次次怀疑自我过后，所剩无几的热情彻底熄灭，我宣布正式放弃。</p><p>这件事成为了一个问题，这是我第一次感受到个人能力方面的彻底失败，我明白失败的点不在于我学不会编程，而是我根本不懂怎么学习，我缺乏一种以前从来没研究过的自学能力。</p><p>我一直都喜欢阅读各类泛心理学书籍，以及各种和脑科学相关的知识，我觉得首先要研究明白自己，才能更好的利用外在工具。而这次失败事件过后，我开始了更加广泛的摄入，它成为了一个锚点，引导我在吸收各种材料的过程中，更关注那些怎么能帮我把这个问题彻底解决的领域。</p><p>终于，我脑海里慢慢有了答案的雏形，虽然依然属于半混沌状态，我想，把它写下来或许能更加清晰一些，也可以启发有类似问题的人。</p><hr /><h2>1. &nbsp;“体验式学习”的缺位</h2><h3>1.1 应试教育并没有教你怎么学习</h3><p>大学以前的阶段与其说教育，更像一种筛选机制，天生缺乏“做题思维”和那些，较真，“不上道”的人就会被筛掉（每天都在胡思乱想：为什么要上学，考个好大学到底有啥用？我学这些东西能干啥？）</p><p>我在这几年才搞明白应试和学习是两回事，两者的玩法完全不同。回想我的高中时期，我和那些网瘾少年的唯一区别就是我还能去上上课，因为我根本觉得应试体系这套毫无意义，在这个过程中我无法获得任何乐趣，进而导致我对学习本身产生了反感，而实际上我反感的是应试，但这种概念的混淆一直影响着我。</p><p>如果你足够幸运，进入大学，虽然你获得了前所未有的自由，但是因为之前的应试阶段根本没有给我们任何<strong>关于真正的学习尤其是自学一门技术</strong>的理念与经验，这种自由就白白浪费了，你需要的不是先要找自己该往什么方向发展，而是先要学习“学习本身”。</p><h3>1.2 重新认识学习这回事</h3><p>远古时期原始人狩猎采集，在自然环境艰难求生，其实就是人类学习模式的原型：</p><ul><li>实践、探索、做实验，不停试错，反复纠正，将动态的实验结果抽象为静态的概念内化。</li><li>经验丰富的老人带新手出去打猎，新手通过模仿老人，在具体情境中，重复第一种模式，遇到问题去问老人，直到自己成为下一个老人。</li><li>第一个老人怎么来的？回到第一种模式。</li></ul><p><strong>做实验和当学徒</strong>，试错和模仿，二者相互揉合，重复，产出结果，直到学徒成为下一个老师，整体是一个启发式的过程。</p><p>可以说学习就是这么回事，想学任何东西都绕不开这两种基本原型，人类发展至今依然如此。</p><h3>1.3 你的学习到底缺了什么？</h3><p><strong>情境和体验</strong>，两项对学习至关重要的因素，在长久以来应试体系中是严重缺位的。</p><p>而对于 MBTI 人格分类下的 P 型人格，尤其是 Se（外倾感觉，Extraverted Sensing） 为主副功能的 SP 人来说，“在体验中感受，在实践中领悟”正是他们这类人最适合的学习方法，直接上手，产出结果，而应试教育根本不为他们提供这些。</p><p>（夸张点说，让这些人待在教室，不如直接送他们去各种工厂玩一玩，看一看。当然这又涉及到职业教育这个话题，展开来讲又是一篇文章了，大概理解我想表达的意思就好）</p><p>而进入大学，大部分学科，教学安排依然是脱离实际生产环境，本质还是应试体系的延伸，而直到实习这个过程才算得上一种真正的学习（因为实习符合我们上面谈到的学习原型）。</p><p>接下来的问题是所有人都同样需要面对的：</p><p>很多人直到实习后，工作后，才真正学会了自己工作所需的技能，另一些倒霉蛋也正是在实际情境中才发现自己根本不适合这个学科，这份工作。</p><p>这就是一个悖论：你无法通过工作之外的内容来胜任一份工作。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/25/02cf2372b1f04d4163d6f55c0ef41640.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>依然以应试思维试图解决这个问题的人，都没有认真审题。</p><hr /><h2>2. 体验式学习的核心</h2><p>问题的关键在于，要学什么，你就要把自己放入学习目标产生实际效用的情境中，并且最好能立刻看到目标对应的结果，拿到反馈，举例：</p><h3>学编程</h3><p>❌错误做法：</p><p>我要学习 web 开发 &gt; 某某大师总结的 roadmap（学习路线图） &gt; 天书般的知识体系 &gt; 欺骗自己（我们遇到什么困难，都不要怕！微笑着面对它，加油，✊🤓奥利给！）&gt; 3日后劝退</p><p>✔️正确做法：</p><p>先搞一个简单的个人网站 &gt; 搜索引擎 or GPT 搜怎么做一个个人网站 &gt; 跟着攻略敲 &gt; 遇到问题 &gt; 返回前面继续问 &gt; 重复以上步骤 &gt; 最后做出来一个很垃圾很丑陋的网站，但是能跑，哇好开心 &gt; 我怎么把这个网站变得好看酷炫一些 &gt; 重复以上步骤</p><h3>学英语</h3><p>❌错误做法：</p><p>我要学英语 &gt; XX机构总结的语法攻略，单词大全，某UP主总结的音标套路…… &gt; 多线操作难以持续，一段时间后放弃</p><p>✔️正确做法：</p><p>从最基本的高频核心单词（如牛津3000词）入手，不学语法，不管音标，只背意思和发音 &gt; 输入大量语料，开着字幕看自己喜欢的简单英语视频，听英文歌，用英语和 GPT 聊天…… &gt; 成果：看懂个五六成，造句挤牙膏，单词有的忘掉 &gt; 忘了的词巩固，不懂的新词查，继续输入输出 &gt; 更新成果 &gt; 重复以上步骤</p><h3>学运营</h3><p>❌错误做法：</p><p>我要学运营 &gt; 价值998的全套手把手教程 &gt; 被XX大佬拉入“核心群”，发来一堆批量生产的过气录播课 &gt; 试了以后发现没用 &gt; 质问大佬，大佬顾左右而言他，后面装死不回 &gt; 惊呼自己被割韭菜</p><p>✔️正确做法：</p><p>直接注册一个号 &gt; 明确自己大概要做什么方向 &gt; 找一些这些方向的头部号，看它里面最好的那几篇内容，分析它为什么好 &gt; 根据分析，模仿一篇同样套路的，然后直接发出来看看 &gt; 观察评论和数据反馈 &gt; 根据结果总结下一次可以怎么提高 &gt; 重复以上步骤</p><h3>总结</h3><p>第一种学法为什么劝退？第二种为什么有效？</p><p>因为第一种学法是脱离情境的，学和做是分离的，而且是大而全式的完美主义思维，缺乏明确的最小目标。</p><p>而第二种学法符合 1.2 中提到的学习原型，自学，独立思考，有大量的试错和做实验，快速模仿迭代，内化实验结果。而第二种学法的每个步骤，可以按照这种模型继续划分为更小的步骤。</p><p>考虑到现在请一个有货的老师需要付出很高成本，用搜索引擎和 GPT 其实是可以充当这一身份，每次搜索就是提问一次，GPT 配合相关 Prompt 更是能直接扮演。（在运营这个案例里，市面上大量头部帐号也是你的老师，可以这么说，能让你模仿的对象都是老师）</p><p>这是一个“结晶式”的过程，你可能会遇到各种意外情况和问题，问题用搜索引擎和各种“老师”来解决，你的知识体系就像结晶体，不停在原有的基础上东拼西凑，越来越复杂，这个过程中你需要退回去剔除掉一些没用的多余的晶体，或者修复之前的漏洞，来让这个结晶体变得完善。</p><p>这个结晶体是抽象后的概念和实践中的经验形成的混合体。</p><p>简言之，在以学会具体技能为目的的学习中，没有“学会了再去做”这回事，如果一个人学会了那他一定也会做，学和做就是一回事。</p><hr /><p>对体验式学习有一定了解后，我们来讲一些具体问题：</p><h2>3. 为什么你的学习目标永远实现不了</h2><h3>3.1 因为你定的目标根本无法实现</h3><p>“学会编程”“学会英语”式的目标，根本就不是目标，仔细想想，“会”的标准是什么？</p><p>是掌握世界上所有的编程语言？背下来所有的英语单词？这个范围可以无限扩大下去。</p><p>“学会XX”就是一种<strong>幻想</strong>。</p><p>而幻想根本没有<strong>具体实现的方法</strong>。</p><h3>3.2 什么是有效目标</h3><p>让我们把白日梦变得现实一点，越现实越好，<strong>越小越好，最好小到毫不费力</strong>。</p><p>“如何学会编程？”缩小。</p><p>“学会编程中的 web 开发领域？”范围太大，依然是做梦，缩小。</p><p>“如何做一个个人网站？”做一个网站想想就复杂，到底怎么做？缩小。</p><p>把它分解为如下最小目标：</p><ol><li>搜索“怎么零基础做一个个人网站”</li><li>在结果中挑一个排版顺眼的往下看</li><li>代码部分你一个字都看不懂，那就从第一个不懂的关键词开始查</li></ol><p>第一个关键词：“VSCODE编辑器”</p><p>回到第一步，搜索，下载安装编辑器，目标完成，回去刚才的页面接着往下查，遇到问题，回到第一步，重复N次。</p><p>同样，“学习英语”可以缩小为：</p><ol><li>先掌握核心词汇</li><li>今天先掌握20个词</li><li>掌握牛津3000词中的第1到第5个词</li><li>背下来第1个词的意思和发音</li><li>在每个词上重复这个过程</li><li>当词汇量达到1000个，开始输入大量现实语料，同时输出（同样按照最小目标原则进行步骤分解）</li><li>继续背单词</li><li>重复N次</li></ol><p>（这个举例可能不是太严谨，在实际操作中，如果你有一定英语基础，输入和输出可以和背单词同步进行，在这里只要领会分解目标的操作即可）</p><p>总结就是，把一个目标分解到不能再分解为止，简单到毫不费力也可以完成，这样形成的才是有效目标。</p><p>这就是<strong>最小目标原则</strong>，也是如何真正制定有效目标的方法。</p><p>补充：每一个目标，都是能够对现实产生实际效用的，而所有目标完成后，一定也是能产生一个能够实现具体目的的结果：做完一个个人网站，能够开着字幕完整看懂一个视频，实现一个用来批量操作电子表格的 python 脚本……</p><p>过去我们学习为什么经常半途而废，就是因为我们的学习结果无法立刻反映在现实世界，这是违反人类本能的学习方式。婴儿将一个物体移动位置后，马上就会产生愉悦的神情，因为他发现自己可以改变世界，人类天生就有一种“作为原因的快乐”，我们对生活的掌控感，认为自己能够产生影响，愿意去做工作，也源于此。</p><p>而我们需要在自己的学习中加入“作为原因的快乐”。</p><h3>3.3 克服完美主义：切忌大而全</h3><blockquote><p>Done than perfect</p></blockquote><p>你是否每次学习一个项目的开始，就搜罗各种攻略停不下来，想要找到一个覆盖一切的解决方案，最后大把时间耗在构建这个大而全的学习方案，然后烂尾？</p><p>让我们回顾一下前面提到的，要真正掌握一门技术，跨越“会”与“不会”的真正信息就藏在“做”的过程，这个信息你不做是无法搜集到的，这就意味着根本不存在完美的学习方案。</p><p>说白了，你不做，根本连什么是“好”都不知道，何谈完美？</p><p>因此，在计划方面，无需纠结太多，只要知道自己最后要达成什么目的，然后按照每个最小目标去做就好了。</p><p>“怎么下载安装VSCODE？”就是一个计划，这种规模的计划对于你而言足够了，完成一个，再定下一个，渐进式提高，每次提高的内容也要符合最小目标原则。</p><blockquote><p>再次强调，足够小，小到毫不费力。</p></blockquote><p>在做的过程中，也会有完美主义的心态阻碍学习，完美主义者经常陷于这样一种困境：</p><p>必须要用一种“标准全面优雅”的解决方式，去解决学习中遇到的某个问题，即使答案就在眼前，还去浪费大把时间找那个完美答案，最后问题也没有得到解决，心态也磨没了。</p><p>还是我们前面提到的，作为一个初学者，<strong>能够解决问题的方案就是最好的方案</strong>。</p><p>在这个过程中遗留的小问题或者不完美的解决方案，就是另一个新计划的开始，所以先把它记下来，完成现在的任务，再去解决。</p><p>从0到1，从1到2，是现实。</p><p>一次从0到100，是做梦。</p><hr /><h2>4. P人宿敌：拖延、效率与自律</h2><h3>4.1 你也许并不需要日程表</h3><p>番茄钟？每天细化到分钟的时间日程表？如果这些东西对你没用，我来介绍另一种模式：</p><p>以一个半小时为周期，利用<strong>整段时间来集中进行任务</strong>，同时引入一段<strong>热身时间</strong>进入状态</p><blockquote><p>20 分钟热身期 + 1 个小时左右的专注期 = 一个半小时完整学习周期</p><p>以一个半小时为基准，每次的总时长和热身期可以根据具体情况增加/缩短。</p></blockquote><p>在热身期，做一项和你接下来要做的工作相关，能够迅速投入，且非常简单的活动。</p><p>例如，你要继续完成一个编程项目，你可以先打开算法题网站，挑一道初中级难度题，限定时间20分钟，不管做没做完，时间一到，立刻停止，回到那个主要项目。你会发现你已经进入编程的状态了，接下来就是利用整块时间高效学习。</p><p>就像健身开始前做的那些热身活动，大脑进入活跃状态也需要启动。</p><p>一天下来，根据具体情况，只需要让自己完成 1-3 个周期，剩下的时间休息放松。</p><p>Q：为什么是一个半小时？</p><p>A：因为科学研究结果表示，这是成年人能维持高度注意力的平均大概时长。可以根据自身情况适度调整，从一个小时先练起。</p><p>Q：热身期的作用？</p><p>A：我们从一个任务切换到另一个任务，都需要一个“切换期”，每次切换都要消耗精力进入新的工作模式，热身的目的就是为了快速度过这个切换期。</p><p>Q：优势在哪？</p><p>A：所有需要创造力的活动都需要大量整块的专注时间，学习，编程，绘画，文学创作等等都需要，根据上一个回答里的任务切换理论，番茄钟这种东西就是在主动打扰自己，这样中途不需要考虑别的事情，所有周期完成后，今天就结束了，心智负担小。</p><p>Q：有用吗？</p><p>A：我自己就在用，有用，你可以试试，反正不要钱。</p><h3>4.2 拖延的本质，以及如何干掉拖延</h3><p>拖延是完美主义的产物，前面我们讲了最小目标原则和完美主义的应对方法，综合应用处理拖延问题，我们可以这样：</p><h4>试试“只写一个字”</h4><p>拖延的本质，在于我们把从0到100这个过程当成了一个必须要一次性完成的任务，我们可以回忆一下每次拖延的时候在想什么：</p><blockquote><p>这个任务要完成的话，要这样，再那样，然后这样……中间还可能遇到 A 情况， B 情况， C 情况……想想就烦，后面再说吧</p></blockquote><p>但是如果我们要做的只有这些：</p><blockquote><p>打开 word，只写一个字，任务完成</p></blockquote><p>假如你打开了电脑，写了一个字，trust me，你会再写一百个字。</p><p>只要“不做”切换到“做”，你其实就已经把拖延干掉了，在“做”的状态待一会，度过热身期后，你已经进入了任务状态，不会再去想拖延。</p><p>开始我们提到了，拖延是完美主义的产物，因为拖延者在心中构想的那个结果就是一种达不到的完美状态，如果要实现它不是0到100，而是0到无穷，是幻想，幻想是没有实现路径的。</p><p>而实现只写一个字，毫不费力。</p><p>针对工作中的完美主义造成的拖延，在这里我再提供一种方法：</p><p>假设你心中的结果是100分，下次你可以告诉自己：做到80分，我就停手。然后把这个80分的成果提交，自己继续完善那个达不到的100分。</p><p>你最后会发现：80分的已经足够好。</p><p>如果想彻底根治，还有一种方法，下次专门交一个60分的成果，然后观察别人的反应，你会大吃一惊。</p><h3>4.3 太容易分心怎么办？</h3><p>太多文章教你“怎么用一个APP管住另一个APP”，我只想说一句：</p><blockquote><p>直接卸载所有的信息流APP，最简单且唯一有效的方式，I mean it</p></blockquote><p>你对抗的不是一个APP，而是这个世界上最聪明的算法工程师、最懂人性的产品经理，他们比你更懂你的弱点，刷信息流会上瘾，这件事本身就是设计好的，唯一解法：退出这场不可能获胜的对抗。</p><p>戒烟的最有效方法就是不抽烟，而不是电子烟或者别的替代物。</p><p>不抽烟你不会死，反而活得更久。不刷微博你啥也不会错过，只会更快乐。</p><p>这就是彻底解决问题的方案，注意力也是你身体健康的一部分。</p><p>如果真的有大事发生，不用看新闻你也能知道。世界上99%的事其实都不受你的控制，如果你整天去纠结，只能徒增焦虑，改变不确定性的最好方式就是去做事，剩下的交给命运。</p><p>根据林迪效应，久经考验流传下来的那些就是好东西。所以，在这个信息垃圾满天飞的时代，当周围的人沉迷那些新东西时，你更应该去回看那些经典著作，稳赚不赔。</p><p>如果你能做到，那注意力的问题其实已经解决，剩下这些就属于锦上添花了：</p><p>环境方面，保持一个清爽的桌面，不要放和学习无关的东西。专注期间手机保持静音丢一边去，相信我你不是啥大明星，消失一个半钟头不会有任何问题。</p><p>如果你需要音乐进入状态，选择柔和的纯音乐，任何歌词都会吸引人的注意力，推荐那种1个小时起步的钢琴曲合集，选一个你最喜欢的，以后每次都听这个。</p><p>在学习中保持专注和冥想训练的原理一样，每次察觉到自己分心，就把注意力拉回来，继续任务，全力保持一个完整周期。多次练习，分心的次数会越来越少，心流状态在整个周期的占比也会增加。</p><p>最后，既然提到冥想，建议你可以从每天5分钟开始，<strong>真的有用</strong>。</p><h3>4.4 怎么提高效率？</h3><p>如今市面上充斥着各种“一周学会python”，“半个月减值增肌”，“完美PPT速成攻略”，光打出这几个名字都让我感到那股子焦虑劲儿。</p><p>《刻意练习》中提到，那些所谓的天才，也是练的最多的人，天才也是靠堆时间堆出来的，学习这件事本就如此，毫无他法。</p><p>事先就把心态放长远一些，慢就是快。一天完整走完每个周期，效率自然不成问题。</p><p>只要完成了你所有的最小目标，就是最高的效率。</p><p>有没有发现我们根本没提到“自律”这个词？自律其实也是一个“完美主义词”，因为它无法被量化，如何评价一个人有多自律？这个人的自律值为99？现在你明白这种东西有多荒谬，它就是为了引起你的焦虑，所以别再想啥自律不自律了。</p><hr /><h2>5. 学习很重要，休息更重要</h2><blockquote><p>如果你不知道自己需要什么，你可能需要睡觉</p></blockquote><p>睡眠为什么重要？因为在睡眠中你依然在学习，白天那些问题，会进入大脑的“后台程序”，这是突破的关键。很多著名科学家都有一觉醒来，某个苦思冥想的问题直接顿悟的体验。</p><p>不管你是不是夜猫子，每天都要按时准点睡觉。入睡前一个小时调暗房间亮度，看一些让大脑安静下来的材料，如一些讲座播客等，文学类书籍也可以。</p><p>对于那些听音乐学习的人，入睡之前放和白天一样的音乐。</p><p>如果中午困了，去睡觉，但不超过30分钟。</p><p>任何形式的运动都对学习有促进作用，每天爬楼梯，走路就是一种锻炼，效果显著。</p><p>如果你懒得去健身房，每天多走走路吧。</p><p>白天多运动也有利于夜晚的睡眠质量。</p><hr /><h2>最后</h2><p>想不出结语咋办？那就不写。这篇文章我改了两天，很多的点我还想重写，但我决定直接把它发出来，80分就够了，对抗完美主义的案例，peace</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87541</id>
            <title>丝滑的 iOS 进度条解锁交互到底是怎么制作的？</title>
            <link>https://sspai.com/post/87541</link>
            <guid isPermaLink="false">https://sspai.com/post/87541</guid>
            <pubDate></pubDate>
            <updated>Tue, 26 Mar 2024 07:38:07 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: SwiftUI, 渐变光, 物理, 遮罩
<br>
<br>
总结: 本文介绍了如何使用 SwiftUI 实现吉光卡片 App 底部彩蛋入口的动画效果。重点讲解了渐变光的视觉把控、物理效果的模拟以及遮罩的应用，帮助读者了解动画实现的原理和细节。通过叠加多层渐进阴影和调整透明度、扩散大小来模拟真实世界的光效，同时使用遮罩来裁剪多余部分，使设计更加精准。通过这些技巧，读者可以学习到如何利用 SwiftUI 实现流畅的进度条动画。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;">原文首发于：<a href="https://www.bmms.me/blog/silky-smooth-ios-progress-bar-interaction-explained">丝滑的 iOS 进度条解锁交互到底是怎么制作的？</a></p><p style="margin-left: 0px;">这篇是拆解吉光卡片 App 底部彩蛋入口的动画实现。将这个入口发到社区后，很多小伙伴表示对实现原理比较感兴趣，于是便有了这篇文章，我将从思路和原理入手，带大家抽丝剥茧地带大家了解这个动画是如何实现的。新手可以通过这个文章，了解实现的原理，老手可以看代码来更深入了解实现的细节。</p><figure class="image ss-img-wrapper"><img alt="而立之年的首页横幅" src="https://cdn.sspai.com/2024/03/25/article/72ff063a0c0dfa61adcb627f966808b4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">我将尽可能详细地拆解 <a href="https://apps.apple.com/app/apple-store/id6463467787?pt=126475836&amp;ct=bmms&amp;mt=8" target="_blank">吉光卡片</a>小彩蛋的实现原理，确保大家可以理解并掌握其中的所有步骤。动画效果使用 SwiftUI 来实现，所以你可以看到其强大的功能和灵活性。我希望你们会喜欢这个教程，并从中学到新的技巧和知识。我会贴上必要的部分代码块，有兴趣可以自行查看或忽略。</p> <p>&nbsp;</p><h2 style="margin-left: 0px;"><strong>渐变光</strong></h2><p style="margin-left: 0px;">在这个动画中，极其重要的点在于对渐变光的视觉把控。关键的细节在于如何通过模拟物理世界点光源的扩散与衰减效应模拟出真实世界的感觉。另外就是在光的边缘，如果通过遮罩层对光进行裁切，保证光不会被发散出去。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/25/3934a3fab1f24fde34bfb087be71a638.gif" /><figcaption>渐变光进度条加载展示</figcaption></figure><h3 style="margin-left: 0px;"><strong>物理</strong></h3><p style="margin-left: 0px;">通过叠加多层的渐进阴影，可以得到一种更柔和，更接近物理效果的散射光。这种效果就像是光从光源发出后，边缘会逐渐变得柔和，而远离光源的光则会逐渐散开，给人一种非常自然和真实的感觉。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/3fc20d6e6e50b349156b075e231d8205.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p style="margin-left: 0px;">一般来说，我们可以通过叠加三层或更多层的渐进阴影来达到这种效果。渐变层的透明度、扩散大小，阴影数值没有太多的规律可言，关键还是尽可能还原物理世界的规律，适当的调整各层的扩散大小和透明度数值，通常，扩散小的层次透明度数值大，扩散大的层次透明度数值小，通过这样的非线性叠加，可以得到非常理想的效果。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/c51f476d5ab7b93b264fe94f5d9b290b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code>.shadow(color: .accent.opacity(0.3), radius: 80)
.shadow(color: .accent.opacity(0.5), radius: 60)
.shadow(color: .accent.opacity(0.6), radius: 20)
.shadow(color: .accent.opacity(0.7), radius: 8)</code></pre><h3 style="margin-left: 0px;"><strong>遮罩</strong></h3><p style="margin-left: 0px;">在 SwiftUI 中，如果有一些多余的部分需要去除，我们可以采用一个非常简单的方法，就是通过加入一个矩形的遮罩来达到我们的目的。这个矩形遮罩的作用就是将那些我们不需要的、多余的光线部分进行裁剪，从而使得我们的设计更加精准和符合我们的期望。这种方法不仅简单，而且效果非常好，可以帮助我们在设计中达到更好的效果。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/9bf1a14f47f2fe00c373d53ff34f1f2e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code>.contentShape(Rectangle())</code></pre><p>&nbsp;</p><h2 style="margin-left: 0px;"><strong>进度条的实现</strong></h2><h3 style="margin-left: 0px;"><strong>百分比</strong></h3><p style="margin-left: 0px;">在 SwiftUI 中，GeometryReader 它提供了几何坐标读取的功能，用来读取该空间中的大小和位置信息，这是一个非常有用的工具。利用这个工具，我们可以在最外层添加一个撑开的宽度修饰器，这样我们就可以获得一个动态宽度的进度条。具体来说，这个进度条的宽度会根据我们设置的参数动态地进行调整，非常灵活且易于使用。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/2d257406d9a99323e54d95f5b61b9cfe.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3 style="margin-left: 0px;"><strong>宽度变化</strong></h3><p style="margin-left: 0px;">此时这里的 progress 是一个百分比，它可以表示进度条的完成程度。例如，如果我们设置每隔 0.01 秒增加 0.01，也就是 1% 的 progress，那么要跑完整条进度条就需要 0.01 x 100 = 1秒。这样一来，我们就可以根据需要设置进度条的速度，让它以我们希望的速度进行加载。但是这样我们可能会得到一条线性增长的进度条，这可能并不是我们想要的效果。</p><pre class="language-null"><code>@State private var progress: CGFloat = 0
@State private var timer: Timer?
@State private var isProgressCompleted: Bool = false

var body: some View {
    GeometryReader { geometry in
        RoundedRectangle(cornerRadius: 12, style: .continuous)
            .frame(width: isProgressCompleted ? geometry.size.width : geometry.size.width * progress)
    }
    .frame(maxWidth: .infinity)
}</code></pre><h2 style="margin-left: 0px;"><strong>蓄力的实现</strong></h2><p style="margin-left: 0px;">这个方法实现了三个功能，这三个功能都是在用户使用过程中非常重要的：</p><p style="margin-left: 0px;">松手的时候会归位。这是一个贴近物理的反馈，因为它可以保证在用户松手后，进度条会自动归位，不会对其他操作产生影响。</p><p style="margin-left: 0px;">渐进式的宽度增量。通过这个功能，我们可以看到进度条的宽度是逐渐增加的，而不是突然增加，这可以带来更好的用户体验。</p><p style="margin-left: 0px;">具有增量的震动提示。这个功能可以在进度条增加的同时，给用户提供震动提示，增加用户的使用感觉。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/25/77b856c4fcfa13fa5e537ae26940013d.gif" /></figure><h3 style="margin-left: 0px;"><strong>加速度</strong></h3><p style="margin-left: 0px;">那么，怎么去获取到一条有加速度的更接近物理蓄力感觉的进度条呢？我们采取了一个简单的方法，就是设置了一个常量增量 acceleration 为 0.00007。这样，每次增加的量就不同，且呈指数型增加。所以在完成第一步的时候，progress 就变成了 0.007% + 0.07% = 0.077%，所以可以看到宽度的变化最开始是缓慢的，随着不断的相加，这个进度条就只需要 1.72秒 就可以从 0% 到 100%。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/932709050bd78c3e50c5dafc48183d26.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">进度条只要不满足到 100% 的条件，isProgressCompleted 这个条件就是 false，也就会执行重置计时器，这就是 resetProgress() 这个方法所要做的事情，让进度条回归到 0。假如进度条达到了 100%，那么 isProgressCompleted 就会是 true，那么循环就结束，用户可以看到进度条的完整过程。</p><h3 style="margin-left: 0px;"><strong>震动</strong></h3><p style="margin-left: 0px;">震动提示是通过 UIKit 里面来实现的，有不同的挡位的震动可以选择，这里选择了一个比较轻的挡位 soft。这里的方法其实跟宽度的加速度增量类似，也是一个递增的方法且跟随进度条的宽度变化而变化的。当进度超过 0.1%，会产生一次震动，根据上面第一个 10 毫秒才变化了 0.07% 的进度，可以发现是一个先慢后快的进度反馈，跑完震动条大概会震动 75 次，这样的设计可以增加用户的使用感觉，提升用户体验。</p><p style="margin-left: 0px;">这里有个值得分享的，震动的频次不能过高，我一开始设置的是只要的宽度发生变化，就震动一次，首先是会震动到你手麻，其次是发现震动反馈有些许卡顿。所以才重新设置了震动阈值，来“降低”震动的频次。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/87849d4c2731d055ec7855766f5b2d80.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code>    func startProgress() {
        // 取消之前的计时器
        timer?.invalidate()
        isProgressCompleted = false // 重置进度完成状态
        var increment = 0.0007 // 初始进度增量
        let acceleration = 0.00007 // 进度增量的加速度

        let feedbackGenerator = UIImpactFeedbackGenerator(style: .soft)
        feedbackGenerator.prepare()

        // 定义震动的阈值，例如每增加1%时触发一次
        let vibrationThreshold: CGFloat = 0.01

        // 记录上次震动的进度
        var lastVibrationProgress: CGFloat = 0

        // 创建一个新的计时器
        timer = Timer.scheduledTimer(withTimeInterval: 0.01, repeats: true) { [self] timer in
            // 更新进度条的进度
            self.progress += increment

            // 增加下一次的进度增量，模拟加速效果
            increment += acceleration

            // 当进度超过上次震动进度+阈值时，触发震动
            if self.progress &gt;= lastVibrationProgress + vibrationThreshold {
                feedbackGenerator.impactOccurred()
                lastVibrationProgress = self.progress
            }

            // 确保进度不会超过1
            if self.progress &gt;= 1 {
                // 当进度条完成时，保持进度状态，不重置
                timer.invalidate()
                self.progress = 1
                self.isProgressCompleted = true // 标记进度完成
            }
        }
    }

    func resetProgress() {
        // 取消计时器并重置进度条
        timer?.invalidate()
        progress = 0
        isProgressCompleted = false // 重置进度完成状态
    }</code></pre><p>&nbsp;</p><h2 style="margin-left: 0px;"><strong>长按手势</strong></h2><h3 style="margin-left: 0px;"><strong>序列化手势/手势链</strong></h3><p style="margin-left: 0px;">开始和重置的两个方法是要搭配手势来实现的，这里通过 sequenced 来完成前后两件事情，一件是长按开始，另外一个未达条件，去归零进度条。如果只是往上叠手势，这些手势其实是异步的且权重是一样的。而手势其实跟图层是一样的，是可以设置优先级和前后顺序的。下面的例子是一个同步的例子。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/9023d488c9aab4a10d5fc385e9d2e873.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code>   LongPressGesture(minimumDuration: 0.5)
            .onEnded { _ in
                withAnimation {
                    if !isProgressCompleted { // 如果进度未完成，则开始
                        startProgress()
                    }
                }
            }
            .sequenced(before: DragGesture(minimumDistance: 0))
            .onEnded { _ in
                withAnimation {
                    if !isProgressCompleted { // 如果进度未完成，则重置
                        resetProgress()
                    } else {
                  //
                    }
                }
            }</code></pre><h2 style="margin-left: 0px;"><strong>矩形缩放</strong></h2><h3 style="margin-left: 0px;"><strong>神奇移动/Magic move标注</strong></h3><p style="margin-left: 0px;">矩形的缩放是通过一个强大的方法 matchedGeometryEffect 来实现的。这个修饰器的使用实际上是非常简单直接的，它与AE（After Effects）里面的动画标记效果有些类似。在使用这个修饰器时，你只需要定义动画的初始帧和结束帧，然后它会自动处理其他的帧，也就是中间的过渡帧。这种方式可以让动画过程看起来非常流畅自然。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/25/cb31214e8e5e50fd44127fbdc46d26a7.gif" /></figure><p style="margin-left: 0px;">为了能够准确地识别这两个帧，SwiftUI 提供了一种属性包装器，叫做Namespace。Namespace的主要作用就是给初始帧和结束帧进行唯一标识，保证动画的正确性。除此之外，我们还可以利用ifElse 的语句来实现元素的切换。比如，我们可以让一个元素在某个时刻消失，然后另外一个元素出现，而在这个过程中，所有的动画变化都会被自动补齐。这就是说，你不需要手动去处理每一帧的变化，所有的过程都是自动的，极大地方便了开发。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/c6ce150c34254c13601589a29cbfda5f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code>@State private var scaleIntoOneCard = false // 缩成一张卡片
  @Namespace private var shapeTransition // 几何动画切换
  
   if !scaleIntoOneCard {
         progressbar()
           .matchedGeometryEffect(id: "card", in: shapeTransition)
   } else{
				RoundedRectangle(cornerRadius: 4)
				   .matchedGeometryEffect(id: "card", in: shapeTransition)
   }</code></pre><p>&nbsp;</p><h3 style="margin-left: 0px;"><strong>一张变六张</strong></h3><p style="margin-left: 0px;">在上面的描述中，我们提到了一张卡片，这张卡片已经没有用处了，所以我们直接让它消失。但是，这个过程对用户来说是不可见的。实际上，在卡片消失的0.5秒前，我们已经提前偷偷地把后面的六张卡片用ZStack堆叠起来了。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/25/76c42eeefd37a737403c9f8e28c48705.gif" /></figure><p style="margin-left: 0px;">这种堆叠方式其实就是我们熟悉的初始帧和结束帧的逻辑，其中一个是前后堆叠的ZStack，另一个是水平堆叠的HStack。所有的变化动画都是由matchedGeometryEffect来完成的。每一张卡片的边际依次从1到6，这样就能形成一个良好的视觉效果。在这个过程中，我们需要注意的一点是，id前后一定要一一对应，否则会造成混乱。这是一个非常重要的细节，可能会导致整个动画效果出现问题。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/0985d37f8ad0b23c80924806cf0bf4e1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code>	 ZStack {
            ForEach(0 ..&lt; 6) { index in
                card()
                    .matchedGeometryEffect(id: "card\(index)", in: shapeTransition) // 动画标记
            }
        }</code></pre><pre class="language-null"><code>     HStack {
            ForEach(0 ..&lt; 6) { index in
                card()
                    .matchedGeometryEffect(id: "card\(index)", in: shapeTransition)
            }
        }</code></pre><p>&nbsp;</p><p style="margin-left: 0px;">所以总结来说就是，长按拉满进度条后，立刻变成一张卡片，然后单张卡片消失，接着一张卡片变成六张卡片，六张卡片消失，出现密码输入框。这个动画的过渡效果其实可以类比 keynote 里面的 magic move 的效果。</p><h2 style="margin-left: 0px;"><strong>输入框</strong></h2><h3 style="margin-left: 0px;"><strong>等宽数字</strong></h3><p style="margin-left: 0px;">类似验证码的输入框，是可以通过六个 Textfield 来实现的，然后再通过 Focusfield 来实现焦点的游走，但是我懒。后面的输入框背景是假的，我用的是一个完整的 textfield。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/25/27a2f3cfac7d24cf4b42a296bf021735.gif" /></figure><p style="margin-left: 0px;">通过控制字体的字体间距来实现，这个时候一定要设置等宽的数字，保证每个间距都是一样的。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/223fc2325133058e95b8cfb92e1a7edd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code> .kerning(20)
 .font(.system(size: 13).weight(.bold).monospaced())</code></pre><h3 style="margin-left: 0px;"><strong>晃动</strong></h3><p style="margin-left: 0px;">这里有个密码错误的晃动提示，我也采用了一个偷懒的方法，通常来说一个递减 x 轴的 offset 来控制一个左右晃动的效果。而我是在这个输入框通过一个弹性动画来实现的，也就是当输入框刚要向 x轴的偏移 4 个单位的时候，就被强行停止了。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/25/78dbc5805ea36647e8902f3fe8274166.gif" /></figure><p style="margin-left: 0px;">停止的动画是有弹性的，所以还需要多几帧才可以归位到 0。这样就讨巧地实现了一个 shake 的效果。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/38e9c79166a25bb2cb2f744e553b693c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code> .offset(x: start ? 4 : 0)
 
 //
 
 start = true
 withAnimation(Animation.spring(response: 0.2, dampingFraction: 0.2, blendDuration: 0)) {
 start = false
 }</code></pre><p>&nbsp;</p><h3 style="margin-left: 0px;"><strong>消失弥散过渡效果</strong></h3><p style="margin-left: 0px;">输入框成功的消失动画，使用了一个自定义的复合过渡效果，是带透明度和大小的变化。这也是苹果喜欢用的一个过渡，比如说 ipad 上的 spotlight 的消失效果。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/25/a3b409792df1139613e90d491c475e9b.gif" /></figure><p style="margin-left: 0px;">其实很好理解，结束帧是一个放大和模糊的状态，这里可以控制 radius 和 scale 来控制整个效果，而这个强度的调整其实跟即将消失的物体的大小也是息息相关的。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/c9057fbc83794883fb46f1744df25294.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code>private struct BlurModifier: ViewModifier {
    public let isIdentity: Bool
    public var intensity: CGFloat

    public func body(content: Content) -&gt; some View {
        content
            .blur(radius: isIdentity ? intensity : 0)
            .opacity(isIdentity ? 0 : 1)
    }
}

public extension AnyTransition {
    static var blur: AnyTransition {
        .blur()
    }

    static var blurWithoutScale: AnyTransition {
        .modifier(
            active: BlurModifier(isIdentity: true, intensity: 5),
            identity: BlurModifier(isIdentity: false, intensity: 5)
        )
    }

    static func blur(
        intensity: CGFloat = 5,
        scale: CGFloat = 0.9,
        scaleAnimation animation: Animation = .spring()
    ) -&gt; AnyTransition {
        .scale(scale: scale)
            .animation(animation)
            .combined(
                with: .modifier(
                    active: BlurModifier(isIdentity: true, intensity: intensity),
                    identity: BlurModifier(isIdentity: false, intensity: intensity)
                )
            )
    }
}</code></pre><p>&nbsp;</p><h3 style="margin-left: 0px;"><strong>动画控制</strong></h3><p style="margin-left: 0px;"><strong>DispatchQueue.main.asyncAfter </strong>是一个常用的方法，用于在主线程上延迟执行代码。这个方法非常适用于需要稍后执行操作，但不阻塞当前线程的情况。这对于改善用户界面的响应性或等待某些条件成熟后再执行操作特别有用。我还喜欢嵌套来使用，比如说在执行了某个指令，完成后0.5秒再执行另外一个指令。这样连加减法的延迟都不用计算了。</p><figure class="image ss-img-wrapper"><img alt="当时在家里拍视频的场景" src="https://cdn.sspai.com/2024/03/25/article/806180770dd0d20a43e338824f6b807e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><pre class="language-null"><code>  DispatchQueue.main.asyncAfter(deadline: .now() + 1) {
                                withAnimation {
                                    showSixCards = true
                                }
                                // 再一秒之后显示输入密码
                                DispatchQueue.main.asyncAfter(deadline: .now() + 1) {
                                    withAnimation {
                                        showPasswordInput = true
                                    }
                                }
                            }</code></pre><p style="margin-left: 0px;">&nbsp;</p><p style="margin-left: 0px;">完结散花～很高兴能跟大家分享一些设计的小细节，这是一篇设计和技术五五分成的文章，其实可以发现，懂视觉的人不懂技术，经常受限于实现。换句话说，技术限制了你对于设计的想象，而技术有能力实现，但是又缺乏对设计颗粒度的认知，很多开发经常说：“没必要，又看不出来”。他们之间还是隔了一条很大的缝隙，割裂，马里亚纳海沟！社会发展的形态的分工就似乎只让我们“专注”在一个事情，而很多事情的完成本质上一个连贯的多学科复合的事情，至少我是这么理解的。</p><p style="margin-left: 0px;">文章写得比较仓促，尽可能通过图解的方式带大家了解实现的原理，如果对文章有任何困惑或不理解的地方，欢迎反馈。</p><p style="margin-left: 0px;">吉光卡片 App 应用地址：</p><span class="ss-linkCard">&nbsp;</span><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87558</id>
            <title>一日一技 ｜ Windows 双网卡使用 WiFi 优先上网</title>
            <link>https://sspai.com/post/87558</link>
            <guid isPermaLink="false">https://sspai.com/post/87558</guid>
            <pubDate></pubDate>
            <updated>Tue, 26 Mar 2024 04:42:18 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 校园网, 有线网卡, 无线网, 路由修改
<br>
<br>
总结: 文章介绍了校园网断流问题以及通过双网卡解决方案，通过例子解释了路由原理，推荐了使用GUI软件进行路由修改的方法，以及如何调整默认路由的优先级来解决有线网无法连接互联网的问题。 </div>
                        <hr>
                    
                    <p>最近，学校的校园网不知为何总是偶尔抽风，虽然每次断网的持续时间不长，但这个中断也容易影响学习，每次断网后感觉很多工作无法进行了。但此时的校园无线网又是顺通无阻的，可惜无线网无法连接课题组的服务器。这篇文章就来探索一下鱼与熊掌兼得的解决办法。</p><p>一般情况下，我们不需要考虑有线和无线网卡的问题，只要任意一种能够联通网络即可。但是，如果你遇到了下面的这些情况，那么就需要考虑双网卡的问题了。</p><ul><li>日常工作需要使用有线网连接内网服务器，但是有线网因为未知原因失去了互联网的连接因此无法同时查阅资料；</li><li>在校园正在通过有线连接使用校园网，但想要访问 Steam 或者 SciHub（这类网站一般被加入到黑名单了）；</li><li>在公司有些私人的事情想要完成，但不想通过有线网访问被侦测流量。</li></ul><p>而 WiFi 一般来说可以通过自己的手机作为热点，这样就能绕过很多部署在有线网络背后的限制和断流问题了。</p><h2>通过例子认识原理</h2><p>决定一个网络包（Package）通过哪个物理网卡（Interface）发送数据给其网关（Gateway），主要由路由（Route）中的这 3 个因素决定：</p><ul><li>目标地址 （Destination）</li><li>掩码（Mask）</li><li>优先级 （Metric）</li></ul><p>当一个网络包中的地址加上掩码正好等于目标地址的时候，则该网络包通过本条路由中的指定网卡发送给其网关处理。当然，同一个网络包有可能有多条路由均符合该匹配条件，机器会根据优先级依次判定路由，最长匹配先发送。</p><p>让我们用送快递的例子来解释这个原理。假设你是一个快递分拣中心的经理，你需要根据收件人的地址将快递（Package）分发到两个下级快递投递站。在这个例子中，我们可以将快递员看作物理网卡（Interface），将分拣中心和投递站看作网关（Gateway），而根据路线选择最佳交通工具和路径的过程就是路由（Route）。假设你有两个交通工具（Interface）：电动车（Metric = 1）和小汽车（Metric = 2），以及两个下级投递站：京海市总投递站（Mask：京海市）和京海市青华区投递站（Mask：京海市青华区）。</p><p>假设你看到的收件人地址是京海市青华区养老院。那么，和投递站的掩码一匹配，就能发现应该投递往京海市青华区投递站；Metric 信息可以理解为，一般情况下，用小汽车投递会更快。</p><p>但现实情况下，有时候城市会限行，这种情况下就需要手动调整优先级用电动车来投递了。</p><h2>普通人也能上手的路由修改方式</h2><p>如果使用搜索引擎搜索「windows 使用双网卡上网」，网络上的文章大部分均指向使用管理员权限打开命令行，然后通过一系列的命令操作来更改路由。这种方式不仅需要熟悉命令行，也需要一定的网络知识。相信大多数人看到系统默认的终端就头疼。</p><p>我最后找到一款古老的 GUI 软件「<a href="https://www.nirsoft.net/utils/network_route_view.html"><strong>NetRouteView</strong></a>」，它不仅能够浏览目前的路由信息，也支持更改路由。官网上面表示，该工具支持任何版本的 Windows 系统，从 Windows 2000 到 Windows 11。我在 Win10 下使用了很多次都运行良好。下图是该软件在我电脑下展示的一个路由信息。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/26/article/9886ec925f38922a2e503fd4b000a9ef.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这个路由表里，我们只关注 Connection Name 这一栏为以太网（Ethernet）和无线网（Wi-Fi）的路由项。在每个网卡下面，都包含了该子网中的路由信息，同时均有一条相对比较特殊的路由（下称默认路由），其目标地址和掩码均为 0.0.0.0，且该路由的优先级比同网卡下其它的路由项优先级都要低。默认路由是对网络包中的目的地址找不到存在的其他路由时所最终选择的路由。</p><p>我们通过手动分析路由表的优先级可以发现，以太网的默认路由的优先级比无线网的默认路由的优先级要高，因此当用户访问外网互联网时，会优先选择以太网的默认路由。然而，在本文的上下文里，有线网因为一些原因无法正确连接互联网，就造成了本文开头提及的问题。</p><p>因此，我们的解决方案也很显而易见了。我们需要让外网互联网请求优先走 WiFi 无线网的默认路由而不是有线网的默认路由。在 NetRouteView 这款软件里可以这么更改，选中默认路由右击编辑，<strong>将两个默认路由的优先级 Metric 互相对调一下</strong>。以我图中的信息为例，将图中红色的 65 改为 55，然后将蓝色的 55 改为 65，就可以了。由于这两条默认路由的优先级均为各自网卡路由项的最低，因此修改它们并不影响那些内网服务的路由请求优先匹配。</p><p>这样一来，内网的有线连接不会受到影响，而外网的请求又会优先走无线连接，从而达成了我们的目标。如果优先网络恢复后，想要恢复原来的路由设置，除了可以再次交换两个默认路由的优先级以外，还可以重启电脑，该路由表的最后一栏 Persistent 表明了这些路由项均非持久化，重启后会即可恢复，所以即使修改出问题了也不怕。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87501</id>
            <title>复古机身、胶片模拟以及高溢价：聊聊富士 X100 VI</title>
            <link>https://sspai.com/post/87501</link>
            <guid isPermaLink="false">https://sspai.com/post/87501</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Mar 2024 03:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Matrix, 写作社区, 产品体验, 富士 X100 VI
<br>
<br>
总结: 本文介绍了Matrix写作社区推荐的富士X100 VI相机，讨论了其特点和价值，以及对不同画幅相机的比较和评价。文章主张放下偏见，重新审视X100 VI相机的特点和价值。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><ul><li>关联阅读：《<a href="https://sspai.com/post/87038" target="_blank">打造一部「电子茅台」：聊聊富士的产品策略及市场博弈</a>》</li></ul><p>2023 年 2 月 20 日 ，富士发布数码旁轴相机 X100 VI，售价 11390 元。随后京东开启预约抽选，预约人数超过 100 万，笔者有幸见证了这一空前的盛况，成为了分母的一员。</p><p>想来，京东预约抽选应该是普通人可以原价买到 X100 VI 的唯一渠道了，而其他能拿到首发 X100 VI 的用户要么是渠道商的关系户，要么就是拥有钞能力舍得在二级市场加价购买的土豪。</p><p>正因如此，关于富士 X100 VI 值不值，值不值得加价购买的讨论也喧嚣而上。</p><p>考虑到长期以来键摄圈<sup class="ss-footnote" href="" title="编者注：指只用嘴和理论讨论摄影但没有实操经验的用户。">1</sup>对于不同画幅的相机的比较都是这样的画风：</p><ul><li>M43 / APS-C和全画幅比：只看画质，其他性能不重要。</li><li>全画幅和 4433 中画幅比：不能只看画质，机身性能也很重要。</li></ul><p>考虑到这篇文章在发布之后可能会有一些极端的读者对笔者的成分进行攻击，所以在文章一开始，笔者先给自己叠甲，做个全方位立体防御。</p><p>「我既是 APS-C 用户，也是全画幅用户，更是中画幅用户。既用富士，也用索尼，还用尼康，数码胶片拍立得三修，是一个成分复杂的器材抚摸党，不要轻易定义我。」</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/23/3322233e69fab6b3f9d639d21e7af774.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>你知道笔者家为啥这么穷了吧</figcaption></figure><p>所以，笔者希望大家能放下对画幅的偏见，摘下对富士的有色眼镜，我们一起，重新审视一下这台 X100 VI 相机。</p><h2>X100 VI 的特点</h2><p>要说 X100 VI 的特点，就得先从富士相机的特点说起。一般来说，富士相机的特点有三个：</p><ul><li>特有的光电混合取景器，这也是旁轴相机的关键元件；</li><li>复古的外观，即便不拍照，背在身上也是一个好看的配饰；</li><li>独创的 X-Trans 传感器，这也富士能调出胶片滤镜的根本。</li></ul><p>前面两个很好理解，第三条对于许多人都很陌生，毕竟拥有光电混合取景器的富士相机都价格不菲，性价比不高，一般不做为富士推荐走量的机型，自然了解的人也就不多。</p><p>那么这篇关于 X100 VI 的评测，就从这个光电混合取景器说起。</p><h3>光电混合取景器</h3><p>富士的光电混合取景器是富士旁轴相机的关键元件。要想做旁轴相机，怎么都绕不开徕卡，在相机小型化的普及过程中，徕卡功不可没，仅仅是确立了 135 画幅的标准就足以名垂青史。</p><p>在上世纪 60 年代之前，旁轴一直都是摄影工作者主流的拍摄设备，直到 1959 年尼康大 F 横空出世，单反才取代了旁轴成了摄影行业最强的生产力。徕卡旁轴之所以没落，笔者认为原因有二：一个是旁轴的视差比较大，无法做到所见即所得；第二就是徕卡没有做出来自动对焦，虽然黄斑对焦很有意思，但是效率和自动对焦还是比不了。</p><p>当然，徕卡的没落不代表徕卡品牌的消失，借着昔日的荣光，如今的徕卡已成为了数码行业的小资轻奢的代表。</p><p>富士做旁轴相机，自动对焦技术自不必说，日系品牌都能搞定，至于旁轴的视差问题，理论上只要使用电子取景器就可以完美的解决了，这在无反时代实现起来都不是问题，索尼的 APS-C 以及富士的 X-E 系列都是如此。</p><figure class="image ss-img-wrapper"><img alt="Fujifilm X-E4 Review - Rekindling my Relationship with Digital Photography" src="https://cdn.sspai.com/2024/03/23/article/9353a145e0be897bc63f07c0ffd0d7aa.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>富士 X-E4，图片来自 casualphotophile.com</figcaption></figure><p>没有反光板的相机无法称之为单反，没有光学取景器的相机也同样不能称之为旁轴，虽然他们外形很像。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/6c26f26389d238556e980f1cd65d1e28.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>尼康 Zf 外观上和尼康 FE 外形十分相近，但没人说它是单反。图片来自 DPReview</figcaption></figure><p>而松典这台相机，在概念上比富士 X-E4 更接近于旁轴。</p><figure class="image ss-img-wrapper"><img alt="松典(SONGDIAN)数码相机DC101L报价_参数_图片_视频_怎么样_问答-苏宁易购" src="https://cdn.sspai.com/2024/03/24/article/c67578a2aefb4cdcfb3b6e01e564b838.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图片来自电商平台</figcaption></figure><p>富士既想学徕卡的高逼格做一台真正的旁轴，又不想踩徕卡的坑，就只能另辟蹊径想一个两全其美的办法——光电混合取景器。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/0f842c278d2c28fca4127bd483e25e3b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>富士独特的混合取景模式</figcaption></figure><p>光电混合取景器的工作原理简单来说就是光学取景器和电子取景器合二为一，可以随时切换，想逼格可以逼格，想精准可以精准，还有个混合模式兼顾逼格和精准。</p><p>电子取景模式和普通无反相机几无区别；光学取景器和数码单反的取景器一样，有电子数显辅助；混合模式会在右下角探出个小屏幕用来做合焦确认。</p><p>这个取景器是富士独有技术，也是富士 X100 和 X-Pro 系列定价的底气。当然，一定会有人说这是花拳绣腿没有用，但我们试想一下倘若徕卡得到了这个技术，那么新的 M 系列它就敢卖十万；尼康有了这个技术，他就敢做全画幅的尼康 SP 数码旁轴，而且一定大卖。</p><p>再举个有意思的例子，拥有光电混合取景器的 X100V 定价 9790 元，没有这个取景器的 X-E4 套机才卖 6799 元。在许多用户眼里，这个取景器可能还真的就值 3000 块。</p><p>你可以觉得它不值，但这是独一份的技术也是事实。</p><h2>复古外观</h2><p>和奥巴尼康的复古是复刻自己的经典机型不同，富士并没有太多原型机可以复刻，因为富士在胶片时代就是个二线品牌，固定镜头相机做得比较多，可换镜头相机少，只有 TX 系列（哈苏 XPAN）被当做了 X-Pro 系列的原型。</p><p>其它的机型基本上都属于「原创」的复古，你在 X100 上可以看到康泰时柯尼卡和徕卡影子，用高情商的说法就是取各家之长，低情商的说法就是终极缝合怪。不过无论怎么理解，都不影响这个设计的确是踩在了消费者的审美上，在数码时代相机为了追求效率和耐用在外观设计上都趋于同化，而富士相机的出现的确让人眼前一亮。</p><p>笔者的这一台是银黑拼色的外观，也是目前受关注最高的机型。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/3d95994c139b266d8971e568ccb3dd0b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>顶部有快门、ISO 二合一和曝光补偿转盘，前后都有控制拨轮。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/cfd2899636cac04356cf4d0de4831c3f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/5babe28b48ab14efc73e489e9fe648f0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>快门采用的是手动胶片机的快门设计，可以使用快门线进行控制，当然我更喜欢用快门按钮。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/c1c27fc42fb8c886e4dba93c4b021024.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/eece87f862a619527a7be23a539eec90.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>正面手柄不是很突出，裸机的握持感很一般，使用官方赠送的皮套可以略微增加一些握持手感。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/2432ba3852502a1c6b8ca7193e8ee3eb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>和富士其它相机不同，对焦模式切换开关被设置在了相机左侧。而接口被设置在了相机右侧，只要插上线就没办法握持了，正好 X100 VI 也不支持边充边用，问题倒不太大。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/db30a17ec6548de1d770c3fe2fd0902a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/bae725d765f68a1b8c213bd093740067.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>X-Pro 3 上的位置在正面</figcaption></figure><p>相机背面采用了一块可以上下翻转的屏幕，分辨率达到 162 万，画面显示还是十分细腻的。而 EVF 取景器的分辨率则有 369 万。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/0c95f1b26e31f728ad56ea425fd02756.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/8258f6c5e4f42c830ec7913674d6e116.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>按键方面则采用和富士中档相机一样的布局，但按键的尺寸则小了许多，尤其是快速菜单按键，小到令人发指。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/cd2c812031a9eeae0ebf65b8af0b47ee.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>富士为了让 X100 VI 成为拿来就能用的完全体相机，也给它内置了闪光灯，闪光指数为 4，可以设置调整 1-1/64 的功率，也可以 TTL。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/cb92cdb0e927050131252a1758ce9e34.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>电池仓从下部开口，使用的依旧是祖传的 W126S 电池，由于这代增加了防抖，所以续航比前一代大大降低，但是优势在于这电池非常便宜。电池仓盖还带豁口，也就是说还可以使用假电池增加续航，但是谁会用这机器长时间拍视频呢？</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/d27654377f33b08abb00c8a4fc78cde5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>存储卡槽设计在了电池仓内，仍然是祖传的 USH-I 卡槽，最高规格只支持到 V30，让 X100 VI 视频拍摄的最大码率只有 200Mbps。得益于 H265 编码的高压缩率才使得相机可以支持 4K 60p 和 6K 30p 的拍摄。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/7fc2b565fc906ef425170664dfe90ec0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>X100 VI 采用的是 X100V 同款镜头，23mm 焦距（等效焦距为 35mm），f/2.0 光圈，采用镜间快门，声音很轻。由于镜头很薄，安装上皮套之后使用常规姿势调整光圈会卡手，只能用一种很怪异的姿势去调整。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/002568c1999185284727c66746d32a8e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>说到这个原装赠送的皮套，我吐槽的点就非常多了。</p><p>首先，这就不是为 X100 VI 专门定制的皮套，而是给 X100V 定制的，有一种捡哥哥姐姐旧衣服穿的感觉。既然五代机型的配件能用在六代上，也就证明外观上基本上没啥太大变化，多增加了一个防抖只是在重量上多了几十克而已。</p><p>因此，五代用户对于这个皮套的吐槽六代用户也会照单全收，比如说右侧没有开口导致不能直接充电。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/40ccef63a9ab6d365a2d658432b76e87.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>再比如说底部没有螺丝口，无法直接安装在三脚架上。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/b3a4cf57f1796c3be5074dc644104f73.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>虽然严丝合缝，但是没有给快门按钮留出余量，使得快门会一直处于压迫状态。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/3cb528dcfd1e9f20b9b7f2b7101b812d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>也正因如此这个真皮皮套在海鲜市场很不受待见，一百块都卖不掉。</p><p>好在我们还有第三方厂家的配件，像斯莫格就第一时间推出了专为 X100 VI 研发的新品配件，包括兔笼、过片手柄、真皮皮套等等。笔者看了图片介绍，感觉要比原装的好上很多，至少设计上符合用户的使用习惯。</p><p>虽然这些配件要到 20 号以后才能买得到，但首发的 X100 VI 也不过 4000 台，许多人到下个月都未必能买得到，不是很急（笑）。</p><h2>胶片滤镜</h2><p>X100 VI 拥有包括 Real ACE 滤镜（简称 RA 滤镜）在内的 20 种不同的胶片滤镜，和去年发布的中画幅 GFX100 II 一样多；又采用了和 X-T5 及 X-H2 一样的 4000 万像素传感器和五代处理器，也就是说，X100 VI 是所有 APS-C 里像素最高的相机，在整个富士相机家族里，滤镜也是最多的。在富士同等像素的机器里，X100 VI 却是最便宜的。</p><p>好家伙，buff 叠满了。</p><p>从笔者的使用的体验来看，这个 RA 滤镜更像是一个偏日常的滤镜，并没有像 NC 滤镜那么有辨识度，色彩比较寡淡，饱和度不高，比较贴近人眼真实看到的色彩，比较符合自身的描述。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/ca857e091300fdb697ab008925879472.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="ss-imgRows"><img alt="" src="https://cdn.sspai.com/2024/03/24/57517b2f59bc3b8a99f7c05a5f3db446.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdn.sspai.com/2024/03/24/ef89f9b139685a5cb44bfbf7eda3d4c9.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/58975ac73ab87dc3af5f4f3da61bea7d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/577085c1592fe8da3b569ba08ce74966.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/e999a4418c6f6503c7cee65ce86431e5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>第五代传感器除了像素的明显提升外，还将原生最低 ISO 降低到了 125，使得低感画质相当不错。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/9260a61339ef0bd679a7c6ed8638482d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>不过，随着 ISO 的提高，画面涂抹的现象也开始越来越明显，这也是 X-Trans 传感器的通病。</p><figure class="ss-imgRows"><img alt="" src="https://cdn.sspai.com/2024/03/24/e6dee20d987cc53a9de736133ca89c1a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdn.sspai.com/2024/03/24/392b8035a4fe0270b369ee7814afc7db.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>当然，想要解决这种现象，只要把机内锐化的参数调高就好了。考虑到现在许多购买相机的人都没有电脑，使用机内调整进而原图直出就成了刚需，富士在机内可调整的参数十分丰富，经常会有人在某书平台上分享他们现编的参数，有一些可以作为参考。 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/0066b14f436978400d9e1df74d7afd15.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>23mm 镜头等效 35mm，这是一个人文摄影的经典焦段，但人文摄影的重点在于讲故事，这不是笔者擅长的领域，笔者更擅长拍人物。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/d025ea05d952a84369dbf36a7e8ba55f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>富士一直被诟病的对焦问题，在 X100 VI 上仍然没有解决，人脸识别的优先级还是要高于对焦框的。虽然新的 AI 芯片可以让人脸识别的越来越准，但 X100 VI 的镜头本身的对焦性能一般，更多时候都是「脑子跟上了，但是身体跟不上」。</p><p>防抖方面 X100 VI 的表现可以算上优秀，使用 1/2s 快门手持拍摄也能保证清晰度，再结合它 4000 万的像素，使用缩图大法拍摄夜景，可以明显弥补 APS-C 相机在高感上的劣势。</p><figure class="ss-imgRows"><img alt="" src="https://cdn.sspai.com/2024/03/24/c30614c010e32161aa3a6fe8f2e82770.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdn.sspai.com/2024/03/24/04a759705d0240df8b8be379dba8e8cc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>X100 VI 的机械快门最大速度为 1/4000s，电子快门最大速度可以达到 1/180000s，晴天的中午也能全开光圈进行拍摄，以保证足够的虚化。除此之外 X100 VI 还内置了 ND 滤镜，可以降低 4 档曝光，达到双重保险的目的。</p><p>关于 X100 VI 的性能，我主要就想讲这么多，如果你之前是富士用户，那么只要熟悉一下按键的位置就可以很轻松的上手 X100 VI 了，如果你之前没用过富士相机或者压根就没用过相机，那你就需要仔细阅读一下说明书了，这是十分有必要的。</p><h2>价格和需求</h2><p>富士 X100 VI 到底值不值 11390 元这个价？</p><p>我们可以把富士 X100 VI 看做是增加了混合取景器和 23mm 镜头的 X-E5（目前 X-E5 还没发布，我们假定其是 4000 万像素带防抖的旁轴造型）。既然混合取景器可以值 2000 到 3000 块，23mm f/2.0 的镜头也能值 2000 块，那么抛开这两项，就相当于「X-E5」的机身不就只要 7390 块，这放到整个相机圈里都是非常炸裂的存在。</p><p>而且大家也不要忘了，X100 VI 是一个固定镜头的旁轴相机，旁轴相机本身定位就是一个时尚单品，用现在的话说就是一台为使用者提供情绪价值的数码玩具。这类产品的价格从来也不是与性能直接挂钩的，何况 X100 VI 的性能也不差。</p><p>按照马斯洛需求层次理论，用户购买 X100 VI 主要是为了满足第三层以上的需求。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/08a312979e37210fb54d89bcb70de048.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>马斯洛需求层次，图片来自维基百科</figcaption></figure><p>而那些以生产力机型的标准去要求他，或者说以「干活」的需求来要求它的那些人，从来也不是 X100 系列的目标客户。</p><p>最后我们讲一下核心问题——如何才能拥有一台 X100 VI。</p><p>笔者也知道，作为一个原价上车的用户，在这里劝大家不要溢价购买有点「站着说话不腰疼」，<strong>但对于那些就是喜欢 X100 VI 的人来说，略微的溢价购买我其实也不反对，但是凡事要有度，那些溢价五六千块购买的，我敢说他们不出半个月就会后悔。</strong></p><figure class="image ss-img-wrapper image_resized" style="width: 223px;"><img src="https://cdn.sspai.com/2024/03/24/92a712e521b038d306c4d538e4e8931c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>情况就是这么个情况，加价五千算优惠</figcaption></figure><p>到底怎么把握这个度呢？我给大家一个参考。</p><p>首先，你要找到这个机器的上位替代产品，即性能一致，功能和价格略有增加的同级别产品。笔者认为 X100 VI 的上位替代是同为 4000 万传感器且带防抖、同样有着复古外观的 X-T5。而 X-T5 虽然也缺货，但是总体供货量还是比较稳定，每个月都有新货的补充，缺口不是很大，只要肯排队一般也都能原价买到。前几天亚马逊上的 X-T5 做到过含税包邮不到一万二的售价，和国行原价差不多，再配一只 XC35 镜头也不过一万三千出头，如果真要是有一万三千多块预算并且对体积不是很敏感，那我更推荐这个组合而不是 X100 VI。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/24/5fbc4df6e70875705bd3c2a01dd3aa6f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>多多留意还是能蹲到 X-T5 合适的价格的</figcaption></figure><p>由于国外市场富士并没有国内这么大热度，所以在一些国家的线下还是可以原价买得到的，目前海鲜市场上的水货客给出的报价（韩版、东南亚版等），算上代购费和运费也差不多在13500 元左右。</p><p>综合以上两点，笔者认为 X100 VI 在 13500 元以内，也就是溢价 2000 以内是可以考虑入手的，当然越便宜越好。</p><p>至于入手渠道，当然是去和线下和老板谈啦，因为富士是明令禁止加价售卖的，但渠道商看着二级市场溢价么多不眼红也是不可能的，贸然找一个不认识的人卖了还怕被钓鱼，就很矛盾。多参与一些渠道商组织的线下活动，和老板多处好关系，成为自己人，说不定那一天老板就给你叫到一边——</p><p>「我这有一台 X100 VI 你要不要？」</p><p>你会要吗？</p><p style="margin-left: 0px;">&gt; 下载 <a href="https://sspai.com/page/client">少数派 2.0 客户端</a>、关注 <a href="https://sspai.com/s/J71e">少数派公众号</a>，解锁全新阅读体验 📰</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87476</id>
            <title>关于蔚来长寿命电池的「少数派思考」</title>
            <link>https://sspai.com/post/87476</link>
            <guid isPermaLink="false">https://sspai.com/post/87476</guid>
            <pubDate></pubDate>
            <updated>Fri, 22 Mar 2024 09:47:47 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 电动汽车, 电池寿命, 换电补能, 租电买电
<br>
<br>
总结: 过去几年，电动汽车一直强调续航和快充，但电池寿命问题被忽视。蔚来通过电池租赁模式解决了这一问题，延长电池寿命并降低长期用车成本。通过换电补能和租电买电模式，蔚来提供了更灵活的选择。同时，蔚来坚持自研技术，推出长寿命电池和其他创新产品，展现长期价值。作为优秀品牌，蔚来值得推荐。 </div>
                        <hr>
                    
                    <p>过去几年里，电动汽车一直都在强调续航，强调快充，通过各种标定的参数来吸引消费者的注意力。但关于电池寿命问题，大家都默认了国家规定的 8 年 12 万公里质保，而超过保修期之后，电池衰减，不稳定性，意外损伤，可能会带来巨额的维修成本。确实，因为电动车发展的太快，很多用户还没意识到电池质保到期的问题，这一点确实不如传统燃油车了，机械结构只要保养好，可以一直开到 60 万公里，不存在动力电池的问题。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/6c6cae5d8cb214b5cd1828b834247827.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>但蔚来率先关注电池寿命问题，并通过电池租赁模式，很好地解决了这个问题。如何延长电池使用寿命？降低消费者的长期用车成本？这一切还要从换电说起。</p><h2>换电补能：不仅效率高，且门槛更低</h2><p>如果你不亲自去体验一下，只是凭空想象换电的复杂性，就没法理解蔚来车主的感受。我也是有这样的思维转变过程。试驾过程中，体验过不用下车 3 分钟满电走人的效率感，立刻就下了订单，提车至今跑了 10000 公里，换电近 40 次，没遇到任何问题。</p><p>换电模式除了补能效率高之外，蔚来做了一个巨大创新，那就是 BaaS 电池租赁模式，车电分离，大大降低了购车门槛。拿我的满配 ES6 为例，如果常规整车购买模式，总价要 41 万，但通过 BaaS 电池租赁模式，我实际付款 33 万多，这跟我的 Model Y 长续航基本同价，但两辆车的配置和体验完全不在同一级别。</p><p>同样的价格，选蔚来获得的是 4 块 Orin 智驾芯片，至今仍然是顶级算力，E-NCAP 碰撞测试五星评级。高品质内饰，23 扬声器的杜比全景声音响，独创的 Nomi 互动机器人，用了就很难回去。很多的体验细节，可以等我蔚来 ES6 使用 10000 公里的深度文章。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/3c5912276e77d3ed5fc69bfa8498a241.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>租电买电：自由灵活，长期更无忧</h2><p>车电分离的天生优势，也将电池的衰减和质保问题转移给了厂商，如果消费者一直选择租电使用，就不用为电池衰减和意外损伤买单。并且可以根据自己的需求，随时升级 100 度和 150 度长续航电池，按天、按月计费皆可。而蔚来，通过底层材料研发和智能 BMS 调控，可以将电池寿命延长到 15 年，相比常规一体化电池的 8 年质保延长了一倍。3 月 14 号的蔚来长寿命电池战略发布会上，蔚来电池系统副总裁曾士哲提出，研发长寿命电池的技术和运营目标是让电池寿命终止健康度（SOH）≥85%。</p><p>电池寿命长，分摊的成本就降低了，省下的钱又回馈给消费者。因此，蔚来最新的 BaasS电池月租更是大幅下调，我的 ES6 标准续航电池，从原来的每月 980 元，直接降到 728 元/月，同时还给了付 4 赠 1 和一次性60张免费换电券的权益（5月31日前下单可享），就是每年只需要实付十个月租金，还有额外 60 张免费换电券，按照五年使用期，最终每月租金只需要 482.4 元，相当于降价了一半。如果我想中途买断电池，租金费用也可以部分折抵，用到第三年可以抵近 9000 元，第五年可以抵 17000 多元，买断成本进一步下降。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/eb8db9444a29b2b8590ab5408589502f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>坚持自研，选择长期价值</h2><p>长寿命电池是如何做到的呢？是一个蔚来深耕底层技术研发的综合成果。首先在电池材料端，跟电池工厂进行正负极材料的创新优化，自研 HPSE 电解液，提升电池本身的能力寿命。而另一方面，则来自换电体系的智能化运营能力，系统可以随时监测电池状态，调控每一块电池的频度和强度，电池回到换电站后，有了更好的充电环境，定制化的充电策略，进一步延长了循环寿命。而这种综合的电池管理能力，其他厂商很难复制，成为蔚来的独家优势。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/6da60c39fa281da7e4a03b197464f9ac.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>长寿命电池的推出，只是蔚来技术自研的冰山一角。比如去年底发布的行政旗舰 ET9，天行智能底盘SkyRide，线控驾驶系统，900V 高压架构，各项指标都是行业领先。甚至推出了自主研发的神玑 NX9301 算力芯片，这是全球首个五纳米智能驾驶芯片，这已经是智能电动车最核心的部分了。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/7f4f068f8db02aaf675633457b9d2333.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在很多大家看不到的地方，比如说我参观了蔚来智能工厂，首创的魔方车辆存取平台，可以实现多车型，多配置的灵活定制生产；全自动的机器人产线，四门完全自动化安装；包括自研电机生产线，都有大量的底层技术积累。只是需要更多的时间，慢慢释放长期价值。</p><h2>支持优秀品牌，向你推荐蔚来</h2><p>作为一个内容社区创始人，我们会体验推荐很多产品，但汽车产品则格外谨慎，因为它不仅是几十万的大额消费，还关系着用户和家人的生命安全。哪怕只是一些产品和服务的不完善，也会给用户带来很多麻烦。所以我作为引荐者，一般都需要深度体验，更多了解企业之后，才会给出推荐购买的建议。</p><p>现在，我可以正式的向你推荐蔚来汽车了，我购买蔚来产品，体验了车主服务，参加了 NIO Day，参观了智能工厂，跟李斌和沈斐等高管面对面交流。蔚来都是一家真诚的、向上的、可信赖的企业，他们的产品和服务能给你带来惊喜和愉悦。我也正式放上我的引荐码<strong>「SSPAI」</strong>，通过这个引荐码购买蔚来汽车的朋友，可以来找我，我会送一份少数派的纪念周边，力所能及的支持一下坚持长期主义的本土品牌。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87473</id>
            <title>在电子游戏里，人工智能正从专用迈向通用【UCG】</title>
            <link>https://sspai.com/post/87473</link>
            <guid isPermaLink="false">https://sspai.com/post/87473</guid>
            <pubDate></pubDate>
            <updated>Fri, 22 Mar 2024 09:38:31 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div>         关键词: 人工智能, 游戏, 强人工智能, 通用人工智能
        <br>
        <br>
        总结: 人工智能在游戏领域取得了重大进展，从弱人工智能到强人工智能的发展，研究者正在努力实现通用人工智能，通过训练智能体在不同游戏中完成任务，实现像人类一样玩游戏的能力。 </div>
                        <hr>
                    
                    <p>【文：FJ 排：NE】<br />人工智能已经学会用“键鼠”玩电子游戏了。<br /><br />人工智能（AI）无疑是目前科技界最热门的研究领域，最近十年里我们已经见过许多令人兴奋的成果。从“深蓝”与 AlphaGo 分别在国际象棋和围棋上击败职业棋手，到 OpenAI Five 和 AlphaStar 能够与《刀塔2》或《星际争霸2》职业电竞选手同场竞技，AI 能应对的环境与规则正在变得越来越复杂。<br /><br />然而，过去我们所看到的这些 AI，都是“弱人工智能”，它们只能处理特定的问题 —— AlphaStar 可以在《星际争霸Ⅱ》里击败职业选手，但它完全不会玩别的游戏，也无法直接让它学会别的游戏，因为它是“为玩《星际争霸Ⅱ》而设计的”。</p><p>&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/3f8baaa4f0a20c653964c883977aa872.gif" /></figure><figure class="image ss-img-wrapper"><img alt="1.gif" src="https://cdn.sspai.com/2024/03/22/article/34dcc196ad9a433507b5f749450dbefd.gif" width="616" /><figcaption>AlphaStar会且只会玩星际2</figcaption></figure><p style="text-align: center;">&nbsp;</p><p>现在，全球的研究者正在努力实现“强人工智能”，也就是所谓的“通用人工智能”（AGI，Artificial General Intelligenc）。而就在最近几周，两篇论文让我们见到了这方面研究的一些初步成果。无独有偶，两支团队训练人工智能的方法都用到了电子游戏。<br /><br />北京智源人工智能研究院、新加坡南洋理工大学、北京大学计算机学院携手公开了通用计算机控制智能体框架“CRADLE”，它能够像一个人类玩家一样学会并打通《荒野大救赎Ⅱ》第一章的头两个任务；谷歌旗下的 DeepMind 则公开了通用 AI 智能体“SIMA”，它可以在《无人深空》等 9 款不同游戏中完成一系列任务，其中还包含连人类都会觉得具挑战性的任务。<br />&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/a87d55bf12ea983fe1f6522b8f11fb7a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="2.jpg" src="https://cdn.sspai.com/2024/03/22/article/f9fc7792cbfcc1d7f93800aa8a2d46ef.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="1022" /><figcaption>CRADLE可以像人类一样玩游戏，SIMA也一样</figcaption></figure><p>已经在多款游戏里训练过的 SIMA 自不必说，它不止会一款游戏，而 CRADLE，虽然在迄今为止的研究里只玩了《荒野大救赎Ⅱ》，但考虑到它的运作方式，是有望能学会玩更多不同游戏的。<br /><br />一切的开端，是“像人类一样玩游戏”。</p><h2>像人类一样玩游戏</h2><p>&nbsp;</p><p>CRADLE 和 SIMA 先后在三月初和三月中旬公布，两者的研究方式和侧重点有所不同，但有一个关键点是相同的，那就是两者都不依赖典型人类用户无法使用的应用程序接口（API，application programming interface）。它们像人类一样接受视觉信息输入、像人类一样输出键鼠操作信号。<br /><br />依不依赖 API 这一点非常重要。当年 DeepMind 开发的 AlphaStar 在《星际争霸Ⅱ》以 5-0 的压倒性优势击败了职业选手 MaNa，就被质疑“不公平”。</p><p>​</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/93981cf8e21a321e4b4b7a3422231d14.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="3.jpg" src="https://cdn.sspai.com/2024/03/22/article/872d60df14a6b69fde5c853412a6ad05.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="1146" /><figcaption>AlphaStar在当时就被质疑“耍赖”</figcaption></figure><p>&nbsp;</p><p>AlphaStar 是 DeepMind 跟暴雪的正式合作项目，开发与研究的过程中，AlphaStar 被灌输了大量《星际争霸Ⅱ》的数据，也使用了 API 直接访问游戏程序的代码，以实现手术刀般精准的操作，甚至还拥有全图视野，不受游戏镜头的限制。换言之，AlphaStar 玩游戏的能力是“定制的”，这跟 CRADLE 和 SIMA 的性质完全不同。<br /><br />CRADLE 玩游戏不依赖任何特殊 API，而是会从与人类玩家所看到的的游戏画面相同的画面中提取信息，包括文本信息，比如游戏中的标题与文段、导航标签（比如菜单）、通知与指示等，还包括视觉信息，比如布局、图像、动画、用户界面等。为了让智能体理解这些信息，CRADLE 的研究团队使用了论文发表时最强大的大型多模态模型（LMM，Large Multimodal Model）GPT-4V 作为主干模型。<br /><br />至于输出，虽然 CRADLE 并没有真的在物理层面操控了键盘和鼠标，但它所生成并输入到 PC 中的操作指令，与人类操作键鼠输入到 PC 的指令是一样的。</p><p>​</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/306f715f8410226be0bf1d1f73735087.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="4.jpg" src="https://cdn.sspai.com/2024/03/22/article/0cdcfdab90d95f487b39787c6fa1920b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="1366" /><figcaption>CRADLE的运作原理示意图</figcaption></figure><p style="text-align: center;">&nbsp;</p><p>最终，CRADLE 能理解和解释执行计算机画面以及来自任意软件的连续帧（还包括音频）之间的动态变化，并能生成合理的计算机控制动作，再可靠地执行。实战中，CRADLE 成功完成了《荒野大救赎Ⅱ》第一章主线头两个任务，也成功挑战了游戏第二章开放世界中的开放式任务。<br /><br />而全称是 “可扩展、可指导、多世界代理”（Scalable, Instructable, Multiworld Agent）的 SIMA，它无法通过 API 访问游戏的内部状态、奖励或任何其他特权信息，玩游戏时所接收的屏幕观察结果也与玩游戏的人类相同，并且同样是通过虚拟键鼠在虚拟 3D 环境中执行操作。</p><p>​</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/f1ed7ffa7aa4ad2baeb59db80fdb57c0.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="5.jpg" src="https://cdn.sspai.com/2024/03/22/article/52f3d4c33c40f523cbd3ca817e137711.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="1210" /><figcaption>SIMA的运作原理示意图</figcaption></figure><p>&nbsp;</p><p>换言之，SIMA 跟环境的交互接口，与人类是“兼容”的，因此它能实现任何人类可以实现的目标，也能够从人类行为中直接模仿学习。研究团队也确实找来了真人玩家让 SIMA 学习。SIMA 通过观看人类打游戏、聆听人类玩家玩游戏时的对话，不断提高自身的游戏水平，在多款游戏中成功通过了 600 项基本技能评估。<br /><br />过往那些“玩游戏的 AI”，要不是“超人类对手”，要不就是无情的刷分机器，相比之下，CRADLE 和 SIMA 似乎更人性化了 —— CRADLE 就像一位单机游戏萌新，虽然还不是很熟练，但正在努力学习；而 SIMA 则像是一位多人合作游戏萌新，暂时还玩得不算很好，但会虚心听队友的指示打辅助。<br />&nbsp;</p><h2>像人类一样动脑子</h2><p>&nbsp;</p><p>根据 CRADLE 研究团队的说法，CRADLE 是首个在不需依赖已有知识或资源的前提下，能够在复杂 3A 游戏中跟随主线真正完成任务的基于 LMM 的智能体代理。<br /><br />过去许多同类研究中，往往需要事先向智能体灌输大量对应游戏的数据进行预训练，比如会打《星际争霸Ⅱ》的 AlphaStar 、会下围棋的 AlphaGo，都被“投喂”了大量的对局资料。而 CRADLE，则是在对《荒野大救赎Ⅱ》一无所知的状态下开始游戏的。<br />&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/6a54fed594f2410effacac6b9ee3434c.gif" /><figcaption>CRADLE从零开始学玩《荒野大救赎Ⅱ》</figcaption></figure><p><br />而 CRADLE 之所以能在这种前提下游玩《荒野大救赎Ⅱ》，全靠它自身具备的推理决策能力 —— 推理，决策，实践验证，反思，然后再一次实践。<br /><br />CRADLE 拥有 6 个主要模块：<br />•&nbsp;&nbsp; &nbsp;信息收集模块 - 负责接受输入的文本和视觉元素等信息；<br />•&nbsp;&nbsp; &nbsp;自我反思模块 - 可以评估上一次操作是否成功、分析失败原因并尝试纠正，也可以重新规划行动；<br />•&nbsp;&nbsp; &nbsp;任务推论模块 - 会根据反思结果推论出最适合当前时刻的任务策略；<br />•&nbsp;&nbsp; &nbsp;技能管理模块 - 能够检索 CRADLE 目前已经学会的技能中是否有适合当前任务的，并且能随时根据实际情况更新已有技能或生成新的技能；<br />•&nbsp;&nbsp; &nbsp;行动规划模块 - 会在技能集中选择适当技能，结合任务推论、上次行动结果和长期总结，生成可执行的行动序列反馈给执行器；<br />•&nbsp;&nbsp; &nbsp;记忆模块 - 则负责长期保存经验，以及协助技能管理模块存储、检索、新增技能。<br /><br />论文中举了一个实际例子说明这种推理能力。游戏中某个任务引导要求玩家装备一把武器，CRADLE 最初从武器轮盘中偶然选择了“刀”，但由于任务其实是需要玩家装备一把枪，因此游戏仍然会提示让玩家重新打开武器轮盘选择武器。此时，CRADLE 的自我反思模块能认识到之前的操作是错误的，于是在之后的尝试中，CRADLE 成功地装备了枪，将任务推进到下一个阶段。</p><p>​</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/9e575d0b54b0315cf9aea4f19b0cf6a7.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="7.jpg" src="https://cdn.sspai.com/2024/03/22/article/8cb9e88efa4452e81c45f8a4296160d2.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="814" /><figcaption>CRADLE的推理决策过程</figcaption></figure><p>&nbsp;</p><p>​CRADLE 成功挑战游戏第二章开放世界中的开放式任务更是令人感到惊艳。进入《荒野大救赎Ⅱ》第二章后，玩家将会遇到一些开放式的任务，比如“购买补给品”，需要操作角色从营地出发抵达瓦伦汀镇的杂货铺并购物，游戏对这种任务所提供的引导极少，但 CRADLE 自己“动脑子”完成了，就像人类玩家一样。<br /><br />但话说回来，由于 CRADLE 的推理决策能力主要依赖于 GPT-4V 来分析各种信息，所以目前 CRADLE 的游戏水平受到了 GPT-4V 感知、理解能力的局限。</p><p>​</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/bdf811dbded056a781a6ac1e371b725f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="8.jpg" src="https://cdn.sspai.com/2024/03/22/article/928f28475fd65c269012f053080b3828.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="984" /><figcaption>CRADLE的能力受到了GPT-4V水平的限制</figcaption></figure><p>&nbsp;</p><p>比如，GPT-4V 的空间感知能力还不足以实现精确的细粒度控制，因此 CRADLE 判断目标物体准确相对位置的能力还有待提高；还有，GPT-4V 目前还难以理解特定领域的概念，因此 CRADLE 在遇到游戏中一些代表特定目标或指代某些鼠标和按键操作的图标时，也不一定能明白图标的作用；此外，GPT-4V 在较长的上下文中很容易被不相关的信息分散注意力，于是 CRADLE 在一些较长的流程中，有时会混淆过去和现在的画面。<br /><br />在未来，当类似 GPT-4V 这样的 LMM 进一步提高各方面水平，CRADLE 玩游戏的能力也将同步提高。研究团队在论文最后透露，未来会让 CRADLE 尝试更多不同的游戏，比如模拟类和策略类，并且还会尝试各种软件应用程序，尝试证实 CRADLE 能够与任何软件无缝交互。<br />&nbsp;</p><h2>像人类一样听人话</h2><p>&nbsp;</p><p>跟“喜欢独自钻研”的 CRADLE 不同，SIMA 更擅长在其他玩家身上学习玩游戏。这种学习方法来自 SIMA 所掌握的一项独特能力 —— 它能听懂人话。<br /><br />在许多 AI 研究项目中，研究者往往需要使用计算机专用的简化语法或指令集来与 AI“沟通”，就算是采用了 GPT-4V 的 CRADLE，也需要用优化过的提示词来训练。而 SIMA 不一样，它用开放式的自然语言进行训练。</p><p>​</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/1636b5ebf86045611f5ec3c606ad0238.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="9.jpg" src="https://cdn.sspai.com/2024/03/22/article/0e5f7092b890355a622d0cb758f94db0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="1214" /><figcaption>SIMA除了视觉信息外，还会结合人类的语言指令来运作</figcaption></figure><p style="text-align: center;">&nbsp;</p><p>所谓“自然语言”，简单来说就是正常人类平时所说的话。SIMA 可以理解并执行各种自然语言指令，从简单的“向左转”，到复杂一点的“比较反物质和反物质外壳的制作成本”，再到需要广泛语义知识的“从铲干草的人手中夺取干草叉”，SIMA 都能听懂，并作出正确的反馈。<br /><br />于是 SIMA 的研究团队找来了一些玩家两两组队并分成两批，一批是一名玩家观察并指导另一名玩家玩游戏，一批是两名玩家自由地边交流边玩游戏。开发者让学会了“听人话”的 SIMA 观看这些人类玩游戏的录像，观察行为并记录引发行为的语言交流。<br /><br />经过观察学习人类玩游戏作为预训练，研究团队再让 SIMA 去不同的游戏中挑战一些能够在 10 秒左右之内完成任务，比如在《无人深空》里前往飞船所在地、在《英灵神殿》里砍倒一棵树、在《模拟山羊3》里开车。这些任务都是 SIMA 从人类玩家身上观察学习过的。</p><p>​</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/d7e32ffbf64141188a3d96d919159c49.gif" /></figure><figure class="image ss-img-wrapper"><img alt="10.gif" src="https://cdn.sspai.com/2024/03/22/article/2369ea7272055b74c015ac5c70658c8f.gif" width="480" /><figcaption>SIMA已经可以在不同游戏里应对各种任务</figcaption></figure><p>&nbsp;</p><p>研究团队评估这些任务是否算成功的标准也颇为苛刻，除了 OCR（光学字符识别）评估外，团队还找来了“至少玩过 16 小时对应游戏的资深玩家”，5 人为一组为 SIMA 玩游戏的录像“严格地”打分。有多严格呢？如果 SIMA 在挑战中执行了无关的操作，哪怕最终达成了目标，这个任务也要标记为失败。<br /><br />根据论文展示的实验结果，SIMA 已经能够在多个不同环境里完成一些任务，其中还包括人类玩家都认为具有挑战性的任务。例如在《无人深空》里的任务表现，人类玩家的任务成功率也仅有 60%，而 SIMA 的任务成功率则是 34%，也算是可圈可点。<br />&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/838b1f4b17f0f1f363fb21f740916b9b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="11.jpg" src="https://cdn.sspai.com/2024/03/22/article/fcbe74ddcba65033edca622d3c64c249.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="1197" /><figcaption>人类的成功率也才60%，而SIMA已经可以做到34%</figcaption></figure><p style="text-align: center;">&nbsp;</p><p>值得一提的是对照组，它们是除了被控制的变量外，其余部分都与 SIMA 相同的智能体。环境专用组（Environment-specialized）是只让学习一款游戏的智能体，语言消融组（No language ablation）是没有使用语言输入的智能体，这两个智能体的任务成功率都低于 SIMA。换言之，多游戏环境下的训练，以及自然语言的训练，确实都能提升 SIMA 玩游戏的水平。<br /><br />尽管 SIMA 目前尚未达到人类水平，但无论是其能够将学习经验扩展到不同游戏的泛用性，还是能听懂人话的特性，都非常有前景。开发团队表示，未来会进一步扩展到更多游戏/实验环境中，并希望 SIMA 能够处理例如“寻找资源并建立营地”这种需要高层次策略规划和有着多个子任务的复杂任务。<br />&nbsp;</p><h2>结语</h2><p>&nbsp;</p><p>CRADLE 和 SIMA 的研究各有优劣，侧重点和意义也有所不同。CRADLE 侧重于为 AI 建立一种与世界交互的通用方式，为未来真正实现 AGI 铺平道路；SIMA 更关注智能体在不同复杂环境中的适应性，并建立一种能够在虚拟世界安全地测试，而无需承担真实世界测试风险和成本的方案。殊途同归的是，这两个项目都正在电子游戏中，向实现 AGI 迈出了一大步。<br /><br />这乍听起来跟普通游戏玩家距离相当遥远，但我相信，游戏 AI 的终极形态，肯定也会是 AGI 而不是只会靠设定好的脚本运作的“人工智障”。现在这些前沿研究，终有一天会哺育出玩家在游戏里所面对的完美智能体。而就在我为这篇文章写下结尾的时候，英伟达已经在 GDC 2024 上公布了一系列游戏相关的 AI 技术。<br /><br />英伟达高级科学家 Jim Fan 在二月就预言，“2024 将会是机器人之年、游戏 AI 之年、模拟之年”，现在 CRADLE 和 SIMA 已经开了个好头，不妨让我们一起期待 2024 年还能见到怎样的突破。<br />&nbsp;</p><hr /><p><br />参考资料：</p><p>&nbsp;</p><p>Towards General Computer Control: A Multimodal Agent for Red Dead Redemption II as a Case Study (arxiv.org)</p><p>&nbsp;</p><p>A generalist AI agent for 3D virtual environments - Google DeepMind</p><p>&nbsp;</p><p>Google’s new gaming AI aims past “superhuman opponent” and at “obedient partner” | Ars Technica</p><p>&nbsp;</p><p>向数字世界AGI迈进！智能体已经从头开玩「荒野大镖客 2」了 | 机器之心</p><p>&nbsp;</p><p>谷歌通用AI智能体发布，3D游戏玩法要变天了 | 量子位​​​​</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87463</id>
            <title>出乎我意料的优秀热点机——Redmi Note 12 5G</title>
            <link>https://sspai.com/post/87463</link>
            <guid isPermaLink="false">https://sspai.com/post/87463</guid>
            <pubDate></pubDate>
            <updated>Fri, 22 Mar 2024 06:36:15 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 热点机, 频段和信号, 发热, 续航
<br>
<br>
总结: 文中介绍了作者换掉摩托罗拉 S30，选择小米 Redmi Note 12 5G作为热点机的经历。通过对频段和信号、发热、续航以及电池保护等方面的比较，作者认为Note 12 5G是一台优秀的热点机，具有良好的信号支持、低发热量和长续航时间。 </div>
                        <hr>
                    
                    <p>去年 8 月，实在受不了 888+ 感人发热量的我毅然决然把当时的热点机摩托罗拉 S30 拿到了小米之家以旧换新换了一台 Redmi Note 12 5G。这是一个很大胆的决定，不仅是因为当时 Note 12 5G 在线上价格低不少，而且从使用旗舰芯片的 S30 换到使用入门级芯片的 Note 12 5G，意味着我将舍弃 WiFi 6、USB 3.0 等与热点质量息息相关的配置。但半年多的使用下来，我反而觉得当初换掉 S30 是一个十分正确的选择，Note 12 5G 确实可以成为一台优秀的热点机。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/21952bd782ad16e5ff1f97a69bfa458c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>WiFi 5 433Mbps</figcaption></figure><p>提到热点机，相信很多人首先想到的是各种低端机和老旗舰。我自己刚开始也是这么考虑的，但实际用下来发现有一些需求和痛点实际上还是大大限制了我自己的热点机选择范围。</p><hr /><h4>1. 频段和信号</h4><p>作为一台热点机，收发移动网络的能力肯定是摆在第一位的。Note 12 5G 支持的频段并不算少，近两年中低端机喜欢阉割的 n28A 和 n77 频段在这台机子上也是有的。支持的频段更多，也就意味着在不同的地方出行时，其更可能保持在 5G 而不是 4G（例如有些乡镇移动会使用 n28A 频段，手机不支持的话就掉 4G 了）。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/4a954b4ce118c031235fdc63c092710e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>这频段配置可以说是很良心了</figcaption></figure><p>而信号方面，由于载波聚合的缺失，Note 12 5G 的网速表现在部分场景下实际上是会比支持载波聚合的机子差一些。但考虑到老旗舰和其他低端机大多也不支持载波聚合（印象中 5G 载波聚合在 8G2 时代才推广开，如有错误欢迎指出），这个缺点可以接受。而且实际体验下来这台机子搜寻信号能力并不弱，即便是在地铁这种场景也基本和其他手机的信号保持一致。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/a8e21745f9c379b73c459e4ba95b0b3d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>日常信号实测，与其他机子表现基本一致</figcaption></figure><hr /><h4>2. 发热</h4><p>发热这一点很多人在选择热点机时不会在意，但它实际上很大程度上影响了热点的稳定性。和主力机不是在手上就是在裤兜不同，热点机大部分时间都是放在包里默默无闻。在这种散热极差的场景下，热点机本身的发热量是不容忽视的。像我之前使用的 S30，出门时则经常出现因为过热导致网络不稳定，即便在室内环境也经常出现下载大文件时过热然后速度骤降的情况。</p><p>此时 Note 12 5G 使用的高通骁龙 4 Gen1 反而成为了优点。相对新的架构、台积电工艺加上不强甚至算有点弱的性能，让它在开热点待机的情况下发热量很小，实测在 27 度空调房内使用 USB 共享网络时，即便全速下载机身也仅仅是略有温度，也不会出现掉速的情况。出门时直接放在包的最内层也不用担心过热，出门回来再把它拿出来时机身最多也仅是温温的。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/f3f9731ba35942e845e91d702c1ed6a4.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>想让 4 Gen1 热起来还是有难度的</figcaption></figure><p>这一部分实际上已经把大部分 8G2 以前的旗舰机排除了，除非仅仅想连接 4G，在有 5G 的需求下，865/870 的机子由于外挂基带导致发热严重；888 和 8G1 虽然是集成基带发热相对小一些，但也不太适合长时间满速和放包里的场景。至于为什么不选麒麟芯片的机子，这个下面再说。</p><hr /><h4>3. 续航</h4><p>相比于发热，续航很多人还是比较在意的。同样的，得益于骁龙 4Gen1 的低功耗，尽管和 S30 一样都是 5000 毫安时的电池，但实测 Note 12 5G 开热点可以做到 10 小时以上的续航。即便是长时间高速上传/下载的情况下也能做到 7-8 小时的续航。</p><p>这一部分再一次将大部分 8G2 以前的旗舰机排除了，865 - 8G1 时代的老旗舰很多电池都不大，加上这几代 SoC 在开热点场景下的功耗偏高，实际续航表现也不尽人意。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/bd8d2568b15481099733c789193b012f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>出门情况，全程 5G 优先，续航个人觉得很顶了</figcaption></figure><hr /><h4>4. 电池保护</h4><p>不能否认的是，现在手机的电池管理已经很成熟了，平常睡觉一直插着充电器也是问题不大的。但是对于热点机来说，超长时间插电才是常态。这时候相比于一直让电池满电，让电池电量能维持在 80% 左右才是更好的选择。</p><p>这一部分 Note 12 5G 并不占优，因为小米系直到 14U 发布才提供了全场景的电池充电保护，能限制只充到 85%。这一功能不说 Note 12 5G 了，即便是小米的当家旗舰小米 14 目前稳定版也还没下放，大概在 Note 12 5G 停更前也还没下放。但是 Note 12 5G 出厂搭载的是 MIUI 13，而且去年小米的 BL 解锁政策还没那么恶心，因此很自然的我解锁了这台机的 BL 锁，并刷上了充电限制模块，当充到 81% 时自动将充电电流设置为 0，电量掉到 79% 时恢复，这样就能实现将电量维持在这个区间，进而保护电池。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/fcaa8c4f36fc9bb090fdda4465f7d31d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>QSC 自动停充还是挺好用的</figcaption></figure><p>在电池保护这一块，麒麟系的机子都被悉数排除在外了，因为鸿蒙并没有这种限制功能，也不能 ROOT（严谨来说可以，但目前基本没办法）。同样的，很多不能 ROOT 的机子在这一部分也被排除了。当然有些系统自带这个功能，比如三星的 OneUI 就支持开启充电保护，限制充到 85% 并维持在这个电量。</p><hr /><h4>5. 拓展用途</h4><p>接着上一部分，有了 ROOT 之后热点机的可玩性得到了很大的提升。目前这台机除了开热点以外，还刷了透明网关模块，这样不管是开热点，还是将这台机连入 WiFi，都能很轻松地给其他设备提供特殊网络访问。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/463344870c33c2e054af496e9d3c766f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>随身携带的透明网关</figcaption></figure><p>总所周知（大概），安卓机共享网络时不管是 WiFi 热点还是 USB 共享网络，基本上每次启动的网关和网段都不一样，WiFi 热点还会自动选 WiFi 频段，对于我来说，固定的 IP 和频段还是很有必要的。而有了 ROOT 之后就可以使用大佬制作的模块 hook 系统，实现固定 IP 和频段。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/03cb145588dff1038246d61af9f67aca.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>除此之外，配合自动化软件，还能轻松实现开机后自动打开热点。如果是配合带 USB 的路由器使用，还可以设置连接 USB 后自动关闭热点，断开 USB 时自动启动热点。这样一套配置下来，这台机子基本可以做到 0 操作，只要记得给它充电就行。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/article/4a48188ed2dcd3db4911c34dec37a1f9.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><h4>6. 总结</h4><p>去年 8 月，在我挑选热点机前，我曾以为我能有很多的选择。但细细列出自己的需求之后，却发现实际上满足这些需求的机子屈指可数。的确，从参数上看，WiFi 5 单天线 433Mbps、USB 2.0 的 Redmi Note 12 5G 怎么看也不是一台合格的热点机，更像是无奈之下的选择。但是，如今百兆宽带都可以满足日常的上网需求了，433Mbps 和 USB 2.0 也已经超过了能用的范畴，加上 Note 12 5G 本身的低功耗低发热长续航，它也自然能如标题所说，成为一台出乎我意料的优秀热点机。而且它也让我重新思考，以我自己的需求，我并没有必要购入一台 WiFi 6、USB 3.0 的旗舰机然后将其作为热点机，Note 12 5G 本身就已经能满足我的需求了。</p><p>&nbsp;</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87419</id>
            <title>关于2024年3月札幌-小樽-定山溪的北海道之行</title>
            <link>https://sspai.com/post/87419</link>
            <guid isPermaLink="false">https://sspai.com/post/87419</guid>
            <pubDate></pubDate>
            <updated>Fri, 22 Mar 2024 02:19:16 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 记忆, 旅行, 北海道, 签证
<br>
<br>
总结: 作者在回忆旅行经历时提到了记忆的重要性，描述了自己对北海道旅行的向往和签证办理的经历。 </div>
                        <hr>
                    
                    <p>趁着记忆还未褪去，我现在听着耳机里传出的电影《情书》的OST记录下这篇旅行回忆，既是为有缘看到这篇文字的人提供一点参考，也是给自己备忘。</p><h2>1.缘起</h2><p>上一次也是唯一一次去往日本，还是2019年年初跨年的关东之行，当时办理了3年多次签证，可惜后来因为covid19的原因，多次签证仅派上了1次用场。原本想要在2023年的十一长假再次前往日本并办理了5年多次签证，后来因故未能成行。</p><p>这一次北海道的出行也有偶然因素，2月初的某一天打开日常不会登录的微博，发现关注的一位几乎没有交流的高中兼大学的师姐春节期间和家人去了北海道并赞赏有加。来自中国西南地区的我们，几乎不曾体会过北方的冰雪世界。于是，对于日本以及冰雪世界的双重向往令我萌生了想要3月中上旬去北海道旅游的想法。但我又担心北海道的冬季是否已经结束，虽然据说北海道一年四季都有不同的风景，但是若不能体验标志性的冰雪甚至反而体验了化雪时期的泥泞，不免会有遗憾，于是，我在chathub上询问Gemini：</p><blockquote><p>北海道的积雪到什么时候融化？</p></blockquote><p>Gemini给我的回复如下：</p><blockquote><p>北海道的积雪融化时间取决于具体地点和年份。一般来说，北海道的积雪在3月到5月之间融化。<br />在北海道的南部，积雪通常在3月底或4月初融化。在北海道的中部和北部，积雪通常在4月底或5月初融化。在北海道的山区，积雪可能要到5月底或6月初才会融化。<br />以下是一些北海道主要城市的积雪融化时间：<br />札幌：3月下旬<br />旭川：4月中旬<br />函館：4月中旬<br />小樽：4月中旬<br />帯広：4月下旬<br />釧路：5月初<br />2024年，北海道的积雪融化时间可能会比往年稍早。这是因为2024年的冬季气温比往年偏高。<br />以下是2024年北海道主要城市的预计积雪融化时间：<br />札幌：3月20日<br />旭川：4月5日<br />函館：4月10日<br />小樽：4月10日<br />帯広：4月20日<br />釧路：5月5日<br />请注意，这些只是一些预测，实际的积雪融化时间可能会有所不同。</p></blockquote><p>虽然不知道Gemini的数据来源是哪里，但是这依然给了我3月中上旬的北海道仍有可供赏玩的冰雪以充足的信心。我之后也通过官方的气象网站和小红书持续关注北海道当地的天气和城市景观。</p><p>我又初步查询了机票的价格，由于已经不再是传统上的旺季且不是中国的假期，成年人不含托运行李的往返机票价格只需1700元，令人满意。</p><h2>2.签证办理</h2><p>事实上，日本签证对于中国人应当相当友好且成熟，只要提供要求的资料，通过率和效率都令人满意。</p><p><strong>办理渠道</strong>：日本签证只能通过具备资质的旅行社进行递交，于是我们通过淘宝的一家旅行社进行了办理，事实上，考虑到现在的时间和精力成本，即使可以自行提交，大概率自己也没有心思去进行繁杂的信息收集和资料准备了。在下单后办理的过程中我才发现，携程官方提供的签证服务价格更具竞争力，虽然会不时调整（或许是随他们该项服务的产能而调整），但总体上会比淘宝上的同类服务价格更低。</p><p><strong>5年多次签证</strong>：签证的条件总结起来很简单，主要就是具有50万人民币以上的存款或年度收入，并且只需要一人达到该条件，其他家庭成员就可以一并办理，3年多次签证的门槛相应下调。我们连同2岁小朋友在内的一家人都顺利办理了5年多次签证。一个小小的经验是，对于签证中要求提供的照片，我通过微信小程序<strong>易绘创</strong>从生活照中进行截取，省去了重拍的麻烦，并通过拼多多上提供的冲印服务进行冲印和邮寄，由于电商平台上的该类服务免去了昂贵的门店成本和中间环节，价格极具竞争力，仿佛可以达到冲印免费仅收取物流费用的效果。</p><p><strong>单次签证</strong>：单次签证的要求是具有10万人民币以上的存款或年度收入。对于我们家人的挑战在于，为了享受更便利的程序和可能的高效率，我们想要在上海领区进行签证申请，这要求申请人在长三角地区居住。为了证明这一点，官方要求的材料是<strong>居住证</strong>或<strong>居住证审批申请</strong>。根据上海当前的规定，申请上海的居住证需要首先完成<strong>居住备案</strong>（随申办上即可完成），在居住备案完成的6个月后，方可提交居住证申请，换言之，在之前未进行过其他相关措施的情况下，至少要在6个月后才可以提供要求的<strong>居住证审批申请</strong>。好在实务中似乎并未如此严格，提供前述<strong>居住备案</strong>以及<strong>经居委会盖章的居住证明</strong>同样得到了认可。</p><h2>3.攻略制定</h2><p>最初，我尝试通过AI对旅游行程做出初步的规划和建议——我描述了我们的到达和离开时间，我们的人员构成，以及我们的核心诉求（居住在同一地方，最好插入滑雪和温泉的体验等）。各个AI模型反馈的结果不尽相同，但都不能很好的贴合我们的需求，相比较而言，阿里的通义千问和月之暗面的kimi chat所呈现的结果是明显错误比较少的。</p><p>其后，为了更快的决定行程的框架并节省收集诸如交通信息一类的具体信息的时间，我在闲鱼上购买一个目前居住在北海道的台湾女生提供的北海道行程的客制化服务。事实证明，这是一个明智的决定。虽然可能由于这位女生在兼职从事这项业务，她的回复并不非常及时，但是她做出的回复都全面且详细，又由于她具备丰富的在地以及为其他人设计行程的经验，我们很快就对4天的行程达成了日维度的总体决定。剩下的就是填充细节并补充查询可能涉及的交通和餐饮等信息了。</p><p>最后，我不得不感叹<strong>小红书</strong>上面与旅游相关的信息的丰富程度，很容易可以通过关键字找到提供有用信息的笔记。同时，<strong>谷歌地图</strong>和<strong>大众点评</strong>也提供了大量有价值的信息——前者可以提供来自全世界各国用户对于各类餐厅、景点、商场的信息和用户评价，并且它的标记和收藏至清单功能可以很方便的将目的地批量分享给同行者，在旅行途中随时查看附近是否有什么之前已经收藏的地点并顺路造访也使得行程的充实度提升；而后者主要可以提供中国用户视角的评价，但是由于该app上面的马太效应以及对于海外商户的总体评价数量较少，存在大量未必收录或点评数量极少的门店。</p><h2>4.具体行程</h2><p>接下来是本次北海道之行的具体记录，会直接按照时间顺序进行记录，并穿插如此制定行程的原因以及我的旅行感想。</p><h3>第一天 上海-札幌</h3><h4>机场交通</h4><p>我们一早六点即从家里出发赶往浦东T2，由于这个时间太早，磁悬浮列车尚未开通，否则离家不远的磁悬浮凭借其快速、准点和适中的价格一直是我们往返机场的首选交通工具。本次使用了兴业银行行悠白信用卡的接送机权益，分派的别克GL8也是不错的送机车辆，除了较大的容量外，其因具有较高的底盘且没有新能源汽车的强动能回收而不会那么容易令小朋友晕车，很适合带小孩出行的家庭。</p><h4>往返机票和移动WIFI</h4><p>到达机场后即在这次选择的春秋航空柜台办理值机和托运手续。这次选择春秋航空的航班，一方面是由于航班时间很合适，早上出发中午到达，可以在入住后仍有一些游玩的时间，充分利用了一整天；一方面当然也是因为春秋航空的票价具有相当的竞争力。虽然没有充分检索相关信息，但是我印象中春秋航空在上海-日本航线上已深耕多年，因此可以提供到日本各个城市的丰富选择。</p><p>自从十几年前读大学期间偶然坐过一次春秋航空，我就决定未来不再乘坐这家航空公司的航班，那时候以其为代表的廉价航空刚刚在中国兴起，其对于行李重量异常苛刻的限制，以及在飞行途中利用机上广播持续推销各类商品的创收手段，都让我无法接受。不过现在的我倒是对这方面宽容了一些，一方面理解了廉价航空通过提供差异化服务而降低运营成本进而降低机票价格的策略的价值，一方面不知道是整体运营策略的改变还是我坐的航线的个别现象，我这个航班的机上营销力度似乎也低于我之前的印象。</p><p>值得一提的是，为了更精准的区分不同需求的用户，春秋航空的机票在出售时即主要根据行李托运额度和座位位置对票价做了区分，我在购买的时候选择了无免费托运额度的机票，因为想着后期同样可以加购行李托运权益，甚至通过在淘宝平台上购买第三方提供的权益代购服务而节约支出。但事实证明，至少针对我所购买的这个航班来说，第三方卖家提供的行李托运权益售价高于官方，而在机票购买后再进行加购的合计价格也要高于从一开始就直接购买打包服务的价格。所以，如果对托运行李有需求，不妨从一开始就评估好不同购买方式的价格高低，以便做出最优决策。</p><p>最后，再提一下关于婴儿车的问题。我们面临的约束是，</p><ul><li>根据我们购买的机票，每名乘客可以有一件免费的规定了尺寸的手提行李的额度；</li><li>如我上文所述，我的托运行李重量有所限制，我们去程的托运行李再加上婴儿车的重量会超过该额度；</li><li>从安检到登机口还有颇长一段距离，婴儿车可以大大增加我们携带婴儿的便利程度。</li></ul><p>事实证明，行前的担心是多余的，无论是去程还是返程，我们都顺利的将婴儿车带上了飞机（我们的婴儿车折叠后可以放入行李架），并且未占用手提行李的额度。</p><p>至于移动WiFi，我选择了携程上的漫游超人。其实在我近期的出境经历中，已经没有再准备过移动WiFi，因为中国通讯运营商都已推出了包含每日封顶消费额（20-30元人民币）的境外漫游套餐，既能让境外的电话和上网体验丝滑便捷，又避免了早年间昂贵到令人焦虑的费用问题。不过我们本次出行涉及到3个成人的手机上网需求，为了避免繁琐的境外漫游业务开通程序，并且移动WiFi无限量4G流量16元人民币/天的收费也确实低廉，我就选择了移动WiFi。这几日使用下来体验不错，移动WiFi的硬件就是一个仅保留移动热点业务的安卓手机，电量可以支持充满电后从早用到晚的一整天使用，网速也令人满意。</p><h4>入境</h4><p>空乘人员会在飞机上发放入境申报单，很容易就可以完成填写。札幌新千岁机场入境排队的人并不多，如果之前已经填写好了申报单的话，几乎直接就可以到达边检人员面前。</p><p>入境检查的时候经历的一个小插曲是，由于我们本次出行预订的是一处Airbnb民宿，所以我在入境申报单当中填写的地址就是该民宿的详细地址信息。其中一个工作人员原本根据常规经验，想让我们补充上酒店的名称，我解释我们预订的是Airbnb并提供提前打印好的预订信息并给工作人员查看手机上的房源页面后，才获得通过。我后来才想起来，该民宿其实也有一个正式名称，如果当时就填写到申报单上的话，流程或许会更加顺利。</p><h4>新千岁机场</h4><p>拿到托运的行李后，已经是当地时间13点过，一方面我们并没有预订不大可能会好吃的飞机餐，一方面也是做攻略时看到很多人在社交媒体上表示新千岁机场具有较高的可吃可逛性，于是准备前往新千岁机场国内线区域寻觅食物。</p><p>来日本旅游的一大好处是，大部分公共设施（包括各类公共场所和餐饮店）都有自己的官方网站（网址很容易通过搜索引擎及谷歌地图获得），网站上会就浏览者关心的大部分问题做出详细的解释，再结合上文说到的大家在SNS上面的评价和个人经验分享，便可以对该处设施的体验具有相当程度的预判性。比如新千岁机场的<a href="https://www.new-chitose-airport.jp/">官方网站</a>（提供多种语言）上，就对机场内配备的包括购物、用餐、娱乐乃至住宿在内的各种设施进行了全面的收录，而这样的完整介绍很有利于游客据此进行提前规划。以这顿午餐为例，我已初步决定吃拉面，小红书上的笔记会大概介绍说机场具有一个大型的拉面共和国区域，一次性囊括了多家知名拉面店，并列出其中可能人气最高的一两家，但是若你想提前知道究竟有哪些拉面店可供选择，这些拉面店分别的自我介绍或口碑如何，并想计划出选择的优先级时，则最好通过官方网站上面的收录情况做进一步的检索和分析。</p><p>新千岁机场的商铺和饮食主要分布在国内线航站楼，而我们原本计划在午餐后从机场坐JR线前往位于札幌市区的住所，JR线刚好就位于国内线的B1层，所以我们从国际线通过2楼的连廊走到国内线来用餐，再搭乘列车的安排是很顺路的。但是不得不吐槽，国内线位于机场内主干道的直梯只有一台，且容量有限，从B1层的JR出口通到顶层3楼的餐饮区域，每一层都有大量推着行李车的游客上上下下，由于我们推着婴儿车和不止一个行李箱，所以不得不在2楼等了三四个来回的电梯，才终于搭上电梯到达3楼。事实上，在我们返程的途中，由B1层的JR线出口去往国内线2楼，在同一个电梯遭遇了同样的问题。</p><h4>机场内的午餐</h4><p>弟子屈拉面</p><p>拉面据说是北海道的四大特色食物之一（另外三样是汤咖喱、海鲜盖饭和螃蟹），我在综合考虑了避免市区网红店的排队以及机场似乎没有好口碑的汤咖喱店之后，决定抵达北海道的第一餐就吃拉面。事实上，我一直对日式拉面感觉一般，可能因为老家的面条品质不错以及日式拉面有点太过重口。不过，既然来到日本，拉面又是北海道的特色，体验一餐总是可以的。在行前的攻略中我已有所了解，机场国内线3楼有一个拉面共和国，汇聚了10余家拉面店，最出名人气也最旺的是入口处的一幻（其实也不知道究竟是品质确实超群还是地理位置占优），不过也有网友对他家的特色海鲜汤底给出差评。我之前的计划是，若一幻需要排队，则我们就去备选的弟子屈，后者也是一个在小红书上口碑不错的店家——事实果然如此。</p><p>我们点了两种汤底，特色酱油和特色盐味，味道尚可但不会留下特别的印象，或许还是对日式拉面吃得太少，无法品鉴不同拉面的细微差别。</p><p>支付方式</p><p>在日本的支付可以使用多种支付方式，收银台旁印刷的logo感觉有数十种之多。不过对于中国人来说，通常会使用支付宝（在日本有时候是pay pay）、微信支付、信用卡或西瓜卡这几种。在covid19之前，支付宝和微信支付在日本的推广力度和普及率似乎不错，但是之前听说疫情几年中国游客的大幅减少令二者的普及大幅降低。不过我这次观察下来，它们的普及率还是蛮高的，除了极少数仅支持现金或信用卡的商家之外，这两个工具中至少有一个可以得到支持。</p><p>支付宝和微信支付都推出了自己的营销计划，以微信支付为例，它推出的计划是，先在小程序上领取优惠，随后按刷卡笔数的阶梯在汇率上给予力度逐渐加大的折扣，最大的折扣大概相当于刷卡额的0.7%。这个优惠力度并不如我携带的建行muse卡境外消费1%刷卡额的常规返利+单月超过5000元的刷卡额8%并封顶200元返利的力度。所以，我在这几日优先选择使用信用卡进行支付。</p><p>kinotoya冰淇淋</p><p>kinotoya牛奶冰淇淋位于国内线2楼主干道旁，是新千岁机场的必吃网红店，我们吃完拉面后即前往排队。由于这个店主要销售制成的饼干、蛋挞以及从冰淇淋机中现打的冰淇淋，所以排队并不慢。不过可能由于之前被网上神乎其神的评价把预期拉得太高，我倒并没有觉得有那么惊艳，最为特殊的可能是这个冰淇淋主体的高度远高于一般的冰淇淋，令人印象深刻。</p><h4>去往住所以及西瓜卡</h4><p>吃完冰淇淋后，已经是15点多，我们准备搭JR前往位于札幌的住所。我们从家里带上了前次到访日本所购买的2张西瓜卡，经过事前查询，这2张卡在我们的本次行程所涉及的各地均可使用。西瓜卡的有效期是自最后一次使用后10年，这比香港八达通的5年更加人性化。不过，在机器上进行西瓜卡的充值必须使用现金，这实在不是很方便。</p><p>而我这几天也使用了手机上的电子西瓜卡，总体感到满意。日本现在已全面支持并大力推广基于手机NFC的电子西瓜卡，苹果手机用户即使还在中国就可以很方便的提前开通（相关操作和使用细节可以察看小红书），而对于安卓系统的支持似乎仅限在日本当地发售的手机。除了环保之外，使用电子交通卡的好处是，一方面省去了携带并使用实体卡的麻烦，另一方面，电子交通卡无需500日元的保证金，游客还可以按照提前查询好的交通费用进行最后一笔交通费的充值消费，达成0余额的操作。</p><p>从新千岁机场乘坐JR到达札幌站大概耗时40分钟，一路上看着铁道两旁不时变幻的雪景，也是一种难得的享受。</p><h4>抵达Airbnb上预订的住所</h4><p>如上文所说，我们本次选择了Airbnb上的民宿ELM FAMILY STAY，事实证明，这是一个令人满意的决定。</p><p>在我规划行程的时候，我查询到，札幌市区交通方便的快捷酒店的价格大概是700-800元人民币/晚，这样的酒店房间通常只配备一个1.5米的床，一个迷你的卫生间和浴室以及将将够打开一个大行李箱的房间空间。如果入住酒店的话，我们一行3大1小至少需要2个这样的房间，或是一个价格昂贵的套房，但是，我找到的这个Airbnb房源平均只需1100人民币/晚，就可以让我们所有人愉快的入住，并提供充足的空间和日常用品。以下是我在Airbnb上对本次住宿的评价：</p><blockquote><p>我们3个成人和1个幼儿在Yuri的房子里度过了3个愉快的晚上。</p><ul><li>交通：房子位于距离札幌2站地铁的东区役所前站步行仅5分钟距离，从地铁站出来，走过两三个路口就到房子门口，非常方便。从札幌站换乘东丰线需要在站内步行大概10分钟，但是一路会经过很多商场和便利店，利于采购和补给。</li><li>房子：第一次体验日式的一户建，感受非常好，简明精致的装修维护得很好，各种电器一应俱全。起居室与厨房在1楼，3个卧室在2楼（拥有2个双人床和3个日式地铺），但是1楼和2楼各有一组分离的卫生间和浴室。厨房和卫生间配置了各种厨具、杯子、碗、毛巾、浴巾和牙刷，省去了采购这些东西的麻烦。但是需要注意，房间不配备牙膏和拖鞋，需要的住户可以自行准备。</li><li>周边：我们在东区役所前站4号口出来的中型便利店进行了必需品的采购，在附近的鸟串烧鸟店进行了一次夜宵，还在附近的光星绿地（Kosei Green Area）进行了一次难忘的夜间玩雪。</li><li>房东：房东Yuri人非常好，从我决定入住前就给予我耐心的解答，在我入住的前中后都给予了清晰且热心的提示和建议，令我感到安心。<br />总的来说，Yuri的房子为我们初次到访北海道增色很多，相信一定会是我们长久的美好记忆。</li></ul></blockquote><p>另外，可以介绍一下入住的体验。虽然是民宿，其实也是在日本有关机构进行了备案的营业性场所。在我预订了房源之后，就已经收到了官方机构发出的电子邮件，以对计划入住的人员进行预申报。房源的门口会配备一个联网的电子平板，以供办理入住手续——再次确认之前申报的信息，并与工作人员进行远程的视频确认（多种语言可选），入住流程整体顺利且高效。</p><p>总的来说，我推荐其他游客，尤其是家庭或团体出行的游客，优先考虑Airbnb上的房源，不仅可能提供更优惠的价格，也可以让你获得更好更当地的住宿体验。</p><h4>大通公园和札幌电视塔</h4><p>在住所稍作休整后，我们就出发前往大通公园。到达的时候天色已经暗下去了，不过见到雪就兴奋的我们还是颇玩了一会儿。</p><p>从大通公园靠近地铁站一端一路玩到电视塔后，刚好可以乘电梯到观景台俯瞰札幌夜景。看到这个电视塔是1950年代即已建成，还是很受震撼。</p><h4>汤咖喱晚餐</h4><p>上文已经提到，汤咖喱是北海道的特色食物之一。在社交媒体上会看到各种推荐的帖子，被推荐的店家也是非常之多，似乎每家店都有自己的独特优势——或者有特色调味的咖喱汁，或者有炸得恰到好处的蔬菜，或者有口感突出的鸡腿或汉堡肉，但是热门的店铺常有排队很久的情况。我在地图上标记了若干家店，计划合适的时候就近尝试顺路的店家。</p><p>从电视塔上下来，迎着凛冽的风，我们决定这一餐就吃汤咖喱。于是步行来到不远处的hiri hiri，一家位于商场B1层的汤咖喱，在我们坐下的时候并没有其他顾客。这家店有英文菜单，不过服务员不太能使用英语，用手指着菜单完成点单倒也没什么障碍。这家汤咖喱的味道我觉得一般，或许要的辣度应该更高一些。</p><h4>光星绿地和鸟串的夜宵</h4><p>汤咖喱配的标准份量米饭并不很多，于是我们决定再去靠近我们住所附近的烧鸟店吃点夜宵。下午经过我们所住那一站地铁的时候，就被地铁内飘着的烧烤味道所吸引了。</p><p>到达地铁站后，我们先在出站口附近的便利店做了一点采购，再去烧鸟店。但没想到从便利店去往烧鸟店的路主要是经过一处住宅楼下的绿地公园——光星绿地，由于这个公园不属于日常道路，积雪蛮厚，我们一路边玩边走，趣味盎然。</p><p>鸟串烧鸟店应该属于连锁店，可以扫码用中文菜单点单，不过翻译质量不佳。这家店的食物味道中规中矩，并没有什么特别的亮点。</p><p>吃完夜宵后，我们就返回住所洗漱休息了。</p><h3>第二天 札幌-小樽-札幌</h3><p>为了避免更换住所的麻烦，我们此行一直住在札幌，再加上带着小朋友，不适合搭乘时间太长的交通工具，所以没有计划去到距离札幌太远的其他北海道城市。</p><p>小樽既是《情书》的取景地，又是著名的港口都市，距离札幌也近，自然被纳入了本次行程之中。总的来说，小樽的核心旅游区即围绕南小樽站到小樽站的这段路扩展，既会经过商业街区，也会经过小樽运河景区。所以一般从一头逛到另一头就可以覆盖大部分知名景点或商店。综合考虑了就餐计划后，我们决定在南小樽站下车，并从小樽站返回札幌。</p><h4>小樽商业街</h4><p>从札幌到小樽，在札幌站坐JR即可，车次较多，所以不需要特别规划坐车时刻。近来似乎有不少游客会想在途中的钱函或朝里这两个海边小镇下车打卡，如果是这样的话，就需要特别注意搭乘慢车，否则是不会停靠这两个小站的。但即便坐的是快车，也一样可以在车上看到列车经过海边时候的景色。</p><p>在南小樽站下车的乘客并不多，下车后一路走到以Kitty咖啡馆为代表的商业街入口即可，车站附近一路的乌鸦令人印象深刻。</p><p>实话说，小樽商业街给我留下的印象也不算深刻，主要即点心店、玻璃制品店和海鲜店，单个店所能逛的时间并不需要太长。</p><h4>政寿司</h4><p>政寿司算是小樽的网红寿司店，在小樽有2个店，看官网介绍，在日本其他地区也有不少分店。官网上就可以进行预订，由于对接了第三方的专业订餐平台，预订体验很好，但是需要注意，日文的菜单通常是信息最全面的，翻译为外文的菜单会做一定程度的简化。</p><p>由于带小朋友，我们选择了包房。套餐中的菜品做好后，几乎一次性送到。寿司的口味也并无什么特别，倒是套餐中的墨鱼（鱿鱼？）面（一种切好的墨鱼刺身）对于我们比较新奇。</p><h4>小樽运河和天狗山</h4><p>午饭后我们继续逛完小樽核心区域的后半段，主要即小樽运河，这是小樽著名的打卡点，游客较多，不过风景确实不错。</p><p>离开小樽运河后，我们出发前往天狗山。天狗山是小樽的著名景点和滑雪场，可以俯瞰小樽全城，也是电影《情书》令人印象深刻的开场的取景地。去往天狗山的交通方式是乘坐9路公交车，终点站即天狗山下，再乘坐缆车到达山顶（冬季大雪天最好提前在其官网查看缆车运行情况，可能会因天气原因暂停运营）。9路公交车的起点站在小樽站前，我们在距离小樽运河更近的第3站等候，由于该公交发车频率并不高，所以最好提前规划好乘车时间。</p><p>天狗山山顶有室内的观景台和景观餐厅，也有大面积的室外空间，可以观景和玩雪。小樽的气温原本就比札幌更低，天狗山顶的积雪很厚，可以玩得尽兴。</p><p>由于要吃晚餐并返回札幌，我们大概在5点之前即下山返回小樽市区。不过这时候也有大量游客为了观赏黄昏以及夜晚的风景而上山。</p><h4>小樽仓库No.1和若鸡时代</h4><p>小樽仓库No.1</p><p>从天狗山搭乘公交返回市区后，我们先去了坐落在运河边上的小樽仓库No.1。</p><p>小樽仓库No.1是当地规模较大的精酿啤酒店，兼具自酿啤酒消费和啤酒酿造培训的业务，是当地精酿爱好者的俱乐部。门店采用古典欧洲装修风格，进入门店就好像进入了宫崎骏某些动画的场景，大堂中间的巨型酒罐令人印象深刻，透过大堂一侧的玻璃也可以看到数个大型酿酒罐。门店采取半自助的点餐方式，每个SKU都有一个数字编号，顾客自行在桌上的点餐纸上填写所需商品的编号、数量及要求后给到服务员即可。除了较为标准和传统的酒款外，也有加入了水果酿造的风味型啤酒，我们尝试了其中四款，都还不错。餐食基本覆盖了常见的下酒菜，我们点了毛豆、火腿和烤香肠拼盘，算是中规中矩。值得一提的是，酒馆的纸质杯垫是啤酒酿造的核心工艺环节的手绘，颇具特色，顾客可以带走收藏。总的来说，对于来到小樽的啤酒爱好者来说，这是一个不可错过的店。</p><p>顺便补充一下，日本人对啤酒非常喜爱，日本也有多个知名的啤酒品牌，每个品牌又会推出很多子系列或限定款。大部分酒款都并未进入中国市场，所以来日本旅行的一大乐趣也是在餐厅或便利店体验各式各样的啤酒。以北海道为例，札幌啤酒是日本著名的啤酒品牌（进入中国市场的品牌直接取了札幌sapporo的音译三宝乐），北海道当地也有地区限定的classical款，清爽利口，值得一试。</p><p>若鸡时代</p><p>若鸡时代是当地主打炸鸡的小餐厅，据说最早主要经营寿司，后来为丰富菜品而推出炸鸡，没想到炸鸡倒是爆火。之前看到社交媒体和大众点评上对于这家店的炸鸡评价颇高，于是决定体验一下。</p><p>门店与小樽站的步行距离大概十来分钟，我们七点多到门店的时候，需要等位十几个号。在门口的机器上登记人数后可以领到纸质的排号单，门口专门隔出了一个专门的等号间。由于门店有两层楼，并且炸鸡属于快餐，所以翻台速度很快，等候不到几分钟就已经叫到了我们。叫到号后会有专人引导入日式榻榻米座并发放桌子号牌，顾客看好菜单后，携号牌到前台点单及付款，其后工作人员会将食物送到座位。</p><p>说实话，并未感觉这家的炸鸡有什么特殊，没有体会到之前网友所说的表皮焦香而鸡肉汁水丰富的状态，倒是鸡翘由于脂肪含量高而很适合油炸方式烹调，算是这顿饭的亮点。</p><p>从若鸡时代离开后，我们便步行至小樽站搭乘JR返回札幌。如果在小樽需要待到比较晚的话，需要留意一下JR末班车的时间，印象中，函馆线的末班车只到晚上九点多，而更快速的线路则是七点多就已收班。</p><p>顺便一说，本次行程当中，我阅读了松本清张的名作《点与线》。很久之前就听说过这部著名的社会派推理小说，这次刚好让AI推荐与北海道有关的文艺作品时被再次推荐。读毕小说后，对小樽到札幌的这段列车行程产生了不一样的感觉。</p><h3>第三天 札幌-定山溪-札幌</h3><h4>定山溪日归温泉</h4><p>在最早的计划中，曾想过在这次行程中同时体验温泉和滑雪，甚至已发现，得益于定山溪温泉区和札幌国际滑雪场较近的距离，可以设计从札幌出发在一日之间完成滑雪和泡汤再返回的路线（虽然行程可能会有点赶）。不过由于家人在临行前2周经历了较重的流感，就不再安排滑雪这样的大运动量活动了。</p><p>通常来说，由于温泉旅游区都不在繁荣的城市内，所以要想泡汤，一般就要在温泉旅馆住宿一晚。不过如果温泉区的距离不是很远的话，也可以采用所谓日归的方式，定山溪之于札幌就是这样的一个存在。虽然定山溪也有各个档次的温泉旅馆或度假村，不过上文已经说过的原因，我们选择了日归。</p><p>当地也为想要体验日归的市民或游客提供了相应的产品，如我们选择的<a href="https://www.jotetsu.co.jp/bus/bus_pack/qlqoi2000000034n.html">温泉一日游套餐</a>就很好。包含了往返的快速巴士和在6家指定的温泉泡汤的组合券，每个成人只需要2200日元。这个券既可以在网上进行预订和购买，也可以在线下进行购买后预约。请注意，温泉无需预约，但是若要搭乘只停大站的快速河童号（Kappa liner）的话，需要提前预约后按时搭乘，否则若车上座位已经约满，则不可临时上车。我们是在网上进行预约购买后直接到指定巴士站（札幌站23号口出来便是）上车的，所以不知道线下的购票和服务体验如何。</p><p>由于河童号的班次非常有限，我们选择了最早的札幌站9:40+最晚的定山溪车库前14:30的班次，10:30到达当地后，有4个小时的时间游玩及泡汤。河童号的用车是类似旅行社大巴，婴儿车可以放入巴士车身的行李厢。达到定山溪神社前站后，我们先从定山源泉公园一路玩到二见吊桥。原本我通过查看地图，猜测是否可以直接从二见吊桥去到地图上看着很近的<a href="http://www.yunohana.org/jyouzankei/">汤之花定山溪殿</a>泡汤（谷歌地图显示的路线是原路返回主干道并绕行很长距离的路线），事实证明谷歌地图的路线是对的，从二见吊桥去到汤之花需要翻过一座山，而这是不被允许的（不知道非冬季是否也会设路障）。于是我们走了很长距离，在接近12点的时候到达了汤之花。</p><p>关于温泉的选择，社交媒体上有很多人推荐巴士终点站的丰坪峡温泉，其以印度人主理的咖喱餐厅和文身友好而著称，据说很多咖喱爱好者甚至会专门为了尝试他家的咖喱而前往。不过综合考虑到交通（由于规划的总时间确定且巴士间隔较长而导致要么游玩时间太少要么泡汤时间太少）和带小孩（其官网显示温泉具有儿童游玩区域）的因素后，我们选择了口碑同样不错的汤之花定山溪殿。</p><p>到达汤之花后，我们先在2楼吃了简餐（仅支持现金+电子取餐牌），然后轮流进行泡汤。汤之花温泉男女分开，拥有3个室内温泉和3个室外温泉（禁止拍照），先完成沐浴再进行泡汤，泡汤时不要穿任何衣物，毛巾（支持现场付费购买）可以顶在头上防寒。正如网友所说的那样，在飘着大雪的室外泡温泉是一种独特且难忘的体验。泡好后，可以如当地人一样在自动贩卖机购买当地产的冰牛奶饮用。</p><h4>札幌市内闲逛及雪华亭的螃蟹晚餐</h4><p>回到札幌市区，我们在当地著名的商业街区狸小路闲逛购物后，前往已预约的附近餐厅雪华亭吃晚饭。</p><p>上文已经提到，螃蟹也是北海道的特色之一，有数家人气很旺的主打螃蟹的餐厅，我们选择了尚可以预约的雪华亭（通过官网进行预约，预约后会进行电子邮件确认）。雪华亭采取套餐制，预约的时候就需要选定套餐，经过比较，我们选择了可以吃到北海道3种螃蟹（红毛蟹、帝王蟹和枫叶蟹）的性价比套餐——雪月风华。套餐份量挺大，但是我们一致认为，这家店的螃蟹还是不及大闸蟹好吃，肉质不够细嫩且有较重的咸腥味。</p><h3>第四天 札幌-上海</h3><p>我们上午10点从住所出发往机场，在安检后的免税店（安检前购物通常需要到达特定金额才可办理免税，常规的知名伴手礼在安检后的免税店也一应俱全）购买了一些伴手礼后即返回上海。</p><h3>5.总结</h3><p>4天的旅程短暂但充实，来自中国南方的我们首次体验了北国之冬。日本的商业和服务业高度发达，作为世界著名旅游胜地的北海道在各方面对于游客都非常友好。推荐有兴趣的人前往，并祝愿可以得到像我们一样难忘的体验。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87443</id>
            <title>性价比的诅咒：从小米汽车估价聊起</title>
            <link>https://sspai.com/post/87443</link>
            <guid isPermaLink="false">https://sspai.com/post/87443</guid>
            <pubDate></pubDate>
            <updated>Fri, 22 Mar 2024 02:11:35 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: V2EX, 小米汽车, 价格预估, 技术发布会
<br>
<br>
总结: 文中介绍了一个关于小米汽车价格预估的帖子，通过V2EX平台展开了讨论。调查结果显示大多数人认为小米汽车的起售价格应在19.99万至21.99万之间。同时，文章还提到了小米在技术发布会上与其他车型的比较，以及小米选择性价比之路的原因。文章最后还提到了小米在智能手机市场竞争中的路径依赖和副作用。 </div>
                        <hr>
                    
                    <p>故事要从 V2EX 的一个<a href="https://v2ex.com/t/1022863" target="_blank">帖子</a>说起。我推测楼主是看到了一个疑似泄露小米汽车价格的截图，然后玩起了常见的骗铜币发帖手法，没想到1天左右的时间收获了 900 多回复，间接实现了对小米汽车起售价格预估的一次问卷调查。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/53b184b6962d5cfe9336b820e3ca6233.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>小米汽车起售价格预估的统计结果</figcaption></figure><p>在对其中包含有效价格信息的 958 条数据进行统计后，我获得了上图的结果。小米第一款手机发布至今已经超过 10 年，但这个品牌仍然难以摆脱 1999 这个数字组合。无论是玩梗还是发自内心期待，最多人将小米汽车 SU7 （标准版）的起售价格铆定在了 19.99 万。一半的有效回复者觉得起售价不应该超过 21.99 万。即使是容易受极端值影响的平均数，也只是落在了 22-23 万这个区间。这几个指标，全部都低于疑似泄露的起售价 26.14 万。</p><p>2023 年底雷军开了一个小米汽车的技术发布会，当时提及的其他车型包括特斯拉 Model 3 Performance，特斯拉 Model S，奔驰 EQS，保时捷 Taycan Turbo，这些车型中价格最低的是暂未在国内发售的 Model 3 Performance，美国起售价在 4.5 ~ 5.5 万美元之间波动，国内起售价预计会处于 30 ~ 40 万人民币价格段，和上面的几个数还是有不少距离。发布会未提及的 Model 3 国内现时起售价为 24.59 万，倒是与调查数据的几个集中趋势指标最为接近。至于其他车型，大家应该都明白仅用于性能、体验铆定，价格没什么可参考性。</p><p>大众对小米品牌的印象依旧充满浓重的性价比色彩，小米自己似乎也没有勇气全然舍弃这种期待。除了因近几年舆论环境而着重强调的研发能力及成果，那场技术发布会整体基调还是通过与高价车型的对比来凸显自身的性能及体验优势。尽管没有公布价格，但“性价比”仍然是看过技术发布会的观众心中很容易会想到的字眼。</p><h3>事后诸葛亮：只有性价比能让小米当时活下来</h3><p>马后炮地说，小米当初如果没有选择性价比这条路，可能没办法存活至今。在 2010 年前后这个时间点，华为已经做了好几年运营商合作机，2010 年开始出货 Android 智能手机； vivo 实际上是步步高音乐手机的新马甲，有深厚的行业积累；似乎和手机行业离得比较远的 OPPO，也已经做了好几年 DVD 机和 MP3/MP4，起码在消费电子产品领域是有经验的；至于看起来和 OPPO 有点像的魅族为什么后来没能成为国产智能手机的代表性品牌之一，则需要另一篇文章去讨论了。</p><p>反观小米，创始人雷军出身 PC 软件行业，是消费电子硬件的行外人，无论是人脉还是其他资源都需要从头积累，和其他品牌并不站在同一条起跑线上；即使想做高端产品，当时小米自身的条件可能也并不允许。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/7dd41dd039925aaa217676ef45e84ecd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>小米第1款手机发布前社会经济环境</figcaption></figure><p>彼时的社会经济环境与性价比产品的相容性比较高，我相信这也是小米作出决策的重要影响因素之一。2006 年，北上广深城镇居民月度人均可支配收入不足 1900，2008 年为 2000 出头，2010 年增长至 2600 左右，一线城市城镇居民一个月可以随意挥霍的闲钱不过两千多，其他地方只会比这低得多。另一方面，网民数量绝对值以及互联网普及率都在快速增长，上网的设备已经开始从台式机转向手机，这意味着有巨大的增量市场在等待合适产品的出现。</p><p>对于大量闲钱不多的潜在客群的预期，再加上对低价低质这种常规做法难以为新品牌带来声量的判断，让小米在当时选择性价比之路看起来颇为顺理成章。</p><h3>那么古尔丹，代价是什么</h3><p>小米早期硬件利润率低要靠高毛利的广告来补足，业务整体利润率低让研发投入增长率低，这两点对小米品牌口碑带来的破坏已经被多方充分讨论，无需多言，在此只简单补充一些我对智能手机系统广告的看法：我觉得 MIUI 早期泛滥的系统广告不仅给购买了小米手机的客户日常用机体验带来严重负面影响，更让其它品牌认为这是一项值得推广的业务，使得 2024 年的当下 HyperOS 竟然已经不是广告最烦人的智能手机系统，可以说让人哭笑不得。</p><p>性价比之路让小米在国内残酷的智能手机市场竞争里留到了现在，也使其习得了路径依赖，我觉得这是更为值得关注的副作用。举一个可能不恰当的例子作对比：老黄、农企、牙膏厂做 C 端芯片时，一般会先从旗舰开始设计，再一步步阉割往下切出整条产品线。而在同时推出标准版、Pro 版本的做法成为智能手机行业主流之前，小米数字系列每年只有 1 款机型，这款机型自立项起就要考虑如何 cost down 保证毛利至少不为负（净利大概无暇顾及了），年复一年，成为固定动作。曾经的“没有设计就是最好的设计”，便是这种做法的生动体现。</p><p>这种思路下做出来的旗舰实在是名不副实，然而很少人会在成功的时候考虑改变长期以来习惯的做法，毕竟改变太让人不安了。于是性价比成为了小米做硬件产品的基调，称其为安身立命之本可能也不为过，毕竟有特色总比没特色要好——直到 2015 年出货量增长停滞、2016 年出货量不升反跌。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/22/f0167298d7ebcbf6606ac534f2f370ac.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>小米集团手机出货量年度变化趋势</figcaption></figure><h3>小米 MIX，可惜了</h3><p>如果从雷军在小米十周年演讲披露的信息来看，小米 MIX 的立项时间最早可以追溯到 2014 年，其实并不能算是小米在 15/16 年遇到困境继而改革过程中的产物。但从结果而言，这款产品对小米确实意义非凡，它的积极影响甚至可能不局限于品牌层面。</p><p>即使小米 MIX 不是智能手机行业第一款采用全面屏的机型，但它一定是将全面屏概念带到国内的第一款手机，可以称得上是国内行业首创——当时大概没有谁会想到这样的壮举竟然有一天会由小米来完成。至少在小米 MIX 发布后的一段时间里，小米的品牌形象改善了不少，普通用户对这款手机即便可能购买意愿不高，也很难从心底里否认这是一款好产品。</p><p>然而现在再提小米 MIX，就好像在说“我祖上也曾阔过”。小米 MIX 后续机型并没有能够开启小米手机的高端旅程，这个系列的存在感越发薄弱。虽然自此之后，小米数字系列机型的设计有了很大改善，红米产品线独立成 Redmi 品牌试图摆脱小米品牌的性价比标签，近年与徕卡的合作也让小米手机的成片有了质的飞跃，小米数字系列实实在在地变得越来越好，但还是会听到那句话：“都这个价位了，还买小米？”</p><p>&nbsp;</p><p>性价比这把双刃剑，始终横亘在小米面前，过去它砍向其他厂商的“智商税”，现在它砍向小米小心翼翼的品牌溢价，毕竟这两个词其实是对同一个概念的不同演绎。</p><p>&nbsp;</p><p><i>题图 Image by rawpixel.com on Freepik</i></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87423</id>
            <title>基于思源笔记的数据库使用分享</title>
            <link>https://sspai.com/post/87423</link>
            <guid isPermaLink="false">https://sspai.com/post/87423</guid>
            <pubDate></pubDate>
            <updated>Fri, 22 Mar 2024 02:05:20 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 数据库, 双链功能, 构建思想, 构建形式
<br>
<br>
总结: 思源笔记更新至3.0版本引入了数据库功能，与其他笔记软件相比，拥有数据库和块级双链功能的思源在文档整理时更加灵活，构建思想参考了PARA系统和INKP知识管理法，构建形式主要应用了数据库的关联功能，主要架构包括主题库、概念库、资源区等，主题库是最重要的库，与所有库双向关联，通过状态标签进行区分，实现短期和长期主题的流转。 </div>
                        <hr>
                    
                    <h2>概述</h2><p>思源笔记更新了3.0以后，正式引入了数据库这个大功能(目前只有表格视图，看板、画廊视图待开发中)，下表是目前思源与其他笔记软件的区别小汇总，只比较原生自带能实现的功能。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/21/f58e8f926a6d746722b74838370a00b4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>可以看出，拥有了数据库和块级双链功能的思源，在文档和内容整理的时候可以有更多的选择，可以在保持双链DailyNotes流程的情况下方便文档的筛选归类，弥补在文档树内翻找文档的繁琐。下面介绍我在思源中的数据库用法。</p><h2>主架构</h2><h3>构建思想</h3><p>首先知识库的总体构建思想参考了PARA系统和INKP知识管理法。下面是两种方法的简介，详细介绍可看《打造第二大脑》和《打开心智》这两本书。</p><blockquote><p>在PARA系统中，每一条信息都可以被划入以下四大类别中：1. “项目”：工作或生活中正在从事的短期活动；2. “领域”：致力于长期履行的责任；3. “资源”：具有潜在利用价值的课题或兴趣点；4. “存档”：除上述三项以外的休眠信息。<a href="">*</a></p></blockquote><blockquote><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/21/59d8e06d8d5323a70b4a01797e76d317.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>INKP强调的不是自下而上，而是自上而下。也就是先通过积累形成若干个主题，再从这些主题出发，想清楚自己缺少什么，需要去弥补什么，然后有意识地去获取知识来填充这些主题，完善这些主题。简言之：先建立框架，再填充框架。</p><p>总结：通过收集主题搭建框架，并完善主题相关的问题及概念，将主题知识运用于实际项目中，与概念笔记共同复盘完善主题。</p></blockquote><h3>构建形式</h3><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/21/ef956d33eef91b4a862b2cd311f30afa.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>​整体完整架构见上图，主要应用了数据库的关联功能，相当于Notion里的Relation功能，其中单向、双向箭头分别表示数据库之间单向或双向关联。例如单向关联是在概念库里新建关联列关联到书籍库，然后在这一列里就可以选择书籍库内的书籍，但是在书籍库不会新增与概念库有关的列，也看不到关联了什么概念。而双向关联就比如主题库和文章库两边会互相新建一列，能互相看到关联的文章或主题。</p><p>因此可看出主题库与所有库都双向关联，整个架构主要是主题库、概念库、资源区这三大类的互相关联，图中所有的字词含义见下：</p><ul><li><strong>主题库</strong>（源自INKP中的主题，用于日常关注的横向宽泛的知识或问题，例如投资理财/写作输出/软件使用等）<ul><li>短期主题（等同于PARA的项目，例如装修资料/旅行计划等）</li><li>长期主题（等同于PARA的领域，例如投资理财/写作输出等）</li><li>归档主题（等同于PARA的归档，例如软件使用/生活资料等）</li></ul></li><li><strong>资源区</strong>（主题/概念所使用的资源，等同于PARA的资源，此部分可根据个人需要自行增减）<ul><li>文章库</li><li>启发库</li><li>白板库</li><li>书籍库</li><li>文献库</li></ul></li><li><strong>概念库</strong>（源自INKP中的概念，用于纵向树状的专业知识，例如高数/英语等，也可以通过资源区的内容补充概念笔记的内容）</li><li>工作库（用于工作项目所需的记录、资料，不与资源库关联）</li><li>收记（用于存放每日笔记 Daily Notes，相当于收集箱）</li></ul><p>上述的横向和纵向知识也可以理解为网状和树状知识，主题一般是各类宽泛知识或问题合集，而概念则是指一门学科下的知识概念，其已经有前人在教材或书籍里总结的完整脉络，每大章节下的概念都通过在概念库的主题文档下新建单独的数据库作为文档目录进行汇总，概念笔记也可以通过参考资源库的笔记内容进行完善，进一步为主题笔记的编写做好准备。</p><p>另外如果你目前在应用PARA流程，不需要INKP的概念库，或者觉得整个架构过于复杂繁琐、花里胡哨，那就可以只保留一个主题库和文章库，其他书籍库之类的资源类型按需增加，整个结构就如下图会变得比较简洁。在PARA系统中原作者是通过文件夹加前缀如"工作-文件夹名称"进行区分工作笔记，在此处也可以通过名称区分“工作-主题名称”一并纳入主题中进行流转，不单独增加一个库。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/21/cab8ea20ab1aebaa5340e5acc4a615ef.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>核心页面介绍</h2><h3>主题库</h3><p>主题库如下图，是最重要的库，所有的资源库和概念库都与其双向关联，通过状态列的标签进行状态区分，例如最近要做个下个月旅行计划，可以打上“短期”的标签，用完之后打上“归档”标签，下次想做下一年的旅游计划又可以打上“长期”标签，这样就能流转不同主题，专注于当前在处理的短期或长期主题，归档暂时不关注的主题，这也是PARA的核心用法。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/21/89fb612c674a28d886273a239b27394f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>​其中因为PARA的项目和领域这两个概念我认为不够直观，且防止与任务管理里的项目的概念冲突，因此我使用短期和长期进行划分。我的与个人、工作项目有关的任务均在滴答清单中管理，思源只是在主题或工作库中新建项目资料的记录。</p><p>另外主题库也可以是问题库，也可以把你关注的问题放进去，例如“如何构建知识体系”这种问题也可以当成主题，这个用法是根据以下视频而来<a href="https://b23.tv/hP2pEqj" target="_blank">【从数据收集到知识输出：Notion流程全攻略-哔哩哔哩】</a> ，这个视频中问题清单(酿酒厂)的理念与INKP中主题的定义类似，即主题是问题的合集，大家也可以根据需要借鉴。</p><h3>文章库</h3><p>接下来的书籍库、白板库等资源区中的库基本都如下图文章库类似，最关键的点就是要双向关联主题库，然后就可以通过筛选功能筛选不同主题下对应的文章等，相当于用主题库的主题来对资源做分类，例如下图的一级分类就是关联到主题库的列，其中选择了“行动流程”这个主题，这样“PARA系统”这个文章就与主题双向关联了，其他的状态、重要性等均是根据自己的需要进行设置。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/21/c17c4bd9a7fb3d7d6186e61cbc5a1c18.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>启发库</h3><p>然后就是思源数据库独有的用法了，思源的数据库支持把段落块或者纯文本直接当成主键放入数据库(Notion只能在数据库新建一行新文档，不能链接至已有文本或使用纯文本)，所以可以把你觉得有用的文字段落、随笔链接到数据库进行分类整理。我是通过Memos同步插件把Memos上的随笔导入思源，然后定期挑选觉得有用的放入启发库中分类并制卡记忆。这里提一下思源笔记支持闪卡(间隔重复)功能，可以对你看到的任何笔记段落进行制卡记忆复习的流程， 非常方便。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/21/c9a6bb88143ef6243d045876c51def10.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>使用流程图</h2><p>​</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2024/03/21/04cb0116cde7ca1b0fb8ea2afa9b6826.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>总结</h2><p>此套流程的核心是主题，需要围绕当前的主题进行产出，通过数据库充当各类型文档资源之间的桥梁，另外也通过资源库给各种文档类型找到自己的位置，不用再担心无法分类的问题，只需要放进去，后续再考虑关联到对应的主题即可，主题文档也能通过数据库面板反向查看关联的文档，形成双向链接，和传统双链的流程并不冲突，且极大提升了思源的文档管理能力。这套流程除了启发库需要思源的块链接特性支持，也可以应用在其他支持数据库的笔记软件中，例如Notion/FlowUs/Wolai等等，希望能给大家带来一些启发，欢迎交流讨论。</p><h3>模板</h3><p>由于文字说明可能比较抽象，所以我制作了核心用法的模板放在以下链接的文章末尾，在思源笔记中新建文件夹后右击文件夹导入即可参考或使用~</p><p><a href="https://ld246.com/article/1710832318646" target="_blank">基于思源笔记的数据库使用分享 - 链滴 (ld246.com)</a></p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87428</id>
            <title>因为外面的世界足够大</title>
            <link>https://sspai.com/post/87428</link>
            <guid isPermaLink="false">https://sspai.com/post/87428</guid>
            <pubDate></pubDate>
            <updated>Fri, 22 Mar 2024 01:55:37 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 初次独居, 小屋生活, 自由空间, 人生体验
<br>
<br>
总结: 作者讲述了自己初次独居时的小屋生活，分享了在30平米小屋里的种种经历和感悟，强调了小屋带来的自由空间和人生体验。 </div>
                        <hr>
                    
                    <p>刚毕业的时候，我住在一个30平左右的一室一厅。</p><p>说是一室一厅，但实际上只有半扇墙和帘子隔开。我的猫可以轻易跳上墙坎，用头挤开帘子，钻进房间，跳上床，然后选个舒服的角落，蜷成一团，开始打呼。</p><p>隔壁是更大的一室一厅，住着一对情侣，我们共享着一扇铁门——房东把一套七八十平米的房子隔成了两套。</p><p>因为房子很小，没办法做很复杂的菜式，基本只能蒸个排骨or鱼，但凡要做个姜葱炒蟹之类需要备菜超过两种以上，厨房台面就会挤得满满的。</p><p>那时候还没有外卖，我住在没有电梯的9楼，所以经常都是把吃饭这件事放到外面解决。</p><p>好在我当时住在极其繁华的市中心，想吃什么逛什么买什么都很方便。我既可以一直躺在自己的小世界里——我工作了，不用再看任何人的脸色了，又可以有随时走出去的自由。</p><p>看《东京八平米》的时候，我就想到了曾经的那间30平米的小屋。</p><p>当时，我每天走上楼的时候，路过敞开着门飘出饭香露出大饭桌的人家；因为出门丢垃圾门被风带上了，逐级敲门希望别人帮我打开一楼门禁，最终开门并且目送着我直到走出大门的独居老人；因为我提不动10kg猫砂而送到我家门口的动物医院实习生；会送我一袋子牛奶的善良邻居；快递寄存在小卖部而每次都记得我的店员；教我弹钢琴也在姐姐得了绝症的时候求助过我的年轻女教师。</p><p>《东京八平米》的作者吉井忍跟我不一样的是，她住在更小的“四叠半”，大概就是八平米大。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/21/article/d1d8bf99e5d75daa0e8506a08ffd29fc.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>所以房租也很便宜，不用像我这样用2/3的工资支撑着房租，她拥有更多的自由：</p><p>“<strong>因为房租很便宜，我不用增加自己的工作量也能够拥有经济上的自由空间，让自己去接触各种不同的文化。这种生活方式让你心中的满足感得到提升</strong>。这是在八平米的房间里学到的一种经济学。”</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/21/article/e586e25e6db1f33deba902f649c090fe.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>也正是因为八平米的小屋里无法放下冰箱、洗衣机等等日常用家电，她不得不得走出小屋，也因此看到很多丰盛的人生，这正是这本书最迷人的地方。</p><p>&nbsp;</p><blockquote><p><strong>通宵电影院</strong></p></blockquote><p>比如错过“终电”的夜晚，她选择在通宵电影院里度过，也因此认识了一位从学生时代就开始在独立电影院看电影，毕业后继续在这里工作的中年男士。</p><p>他告诉她，自己看电影是一种单向的经验，但在电影院，你可以学会与别人共处的技巧。</p><p>这也是一种人生体验，更重要的是，他说，</p><p>“我们想通过通宵放映跟年轻人说，每个人的人生都很有意思。你想想，有人喜欢在周末的晚上出来看通宵电影，这种生活方式已经有一点与众不同，他们很可能属于不那么容易融入主流社会的一群人。</p><p>我是希望新文艺坐能为那些人提供一个安心坐下来的地方，这里放映的电影也许很小众、不主流，但我们就觉得这样很好，这才是人生嘛，</p><p><strong>每部电影、每种人生都那么不一样，每个作品都那么好看。那你也一样，和别人不一样没关系，这是好事。</strong></p><p>我也是过来人，吃过苦，遇到过很悲伤的事情，在某种程度上电影救了我。所以我相信电影是有力量的。”</p><p>&nbsp;</p><blockquote><p><strong>早上八点关门的喫茶店</strong></p></blockquote><p>老板是一位七八十岁的白发老爷爷，衣着老旧但很用心，之所以凌晨开门，是因为照顾周边需要早起的体力工作者。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/21/article/af07d7813bcdcf363d548a0d23a394e1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>他给作者讲了很多战时故事，二战时与母亲在釜山吃过的一碗乌冬面，大轰炸中去世的同学，拥有着天然卷发而因误会烫发被剃平的东京太太。</p><p>有的人活着就是历史，这些故事拼凑出战争的另一面，让人感慨久远的战争其实近在咫尺，它不是教科书上的历史，而是还在呼吸的现实。</p><p>当然了，最动人的还是他自己的故事。</p><p>年轻的时候正值日本棒球盛行，会打棒球的男孩子也深受女孩子的欢迎，他在大学时是个优秀的棒球投手，开开心心念完本科，毕业后工作也很卖力，经历过最繁盛的时代，香港的裁缝可以当场量尺寸拿起针就能做出一套西服，就连后来的三越百货公司都不能比。</p><p>第一次婚姻的妻子很漂亮，全职在家带孩子，后面跟别人跑了，他独自把女儿养到十八岁，去了美国念书，和西班牙籍律师结了婚。有一天一个女孩子突然到店里喊他爷爷，他才知道那是他在西班牙的孙女。</p><p>第二段婚姻是入赘，喫茶店就是这第二任太太提出要开的。后面的故事就不是那么浪漫了，他照顾突然跌倒瘫痪而脾气变得暴躁的太太，好不容易太太去世后，刚有种“解放的感觉”，内弟的妻子也去世了，内弟家务一概不知，他又照顾起了内弟。</p><p>这样用心待人的白发老爷爷，直到生命接近最后一刻，还是要穿好衣服才给作者回电，是个从内心到外表都体面了一生的人。</p><p>&nbsp;</p><blockquote><p>筑底鱼市场的咖啡店</p></blockquote><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/21/article/e9c97e88a50c1bb6fa441079bc809132.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>女店主快九十岁了，但穿着很精神，手脚也很麻利，这样的独居老太太，也有着传奇的一生：她十九岁就嫁人了，但因为小姑们动不动就欺负她，她毅然决然地在婚礼后半年就回了娘家。</p><p>她骗夫家“最多十天就回来”，结果一年两年三年，丈夫终于接受了她不会再回来的事实，俩人协议离婚。她一刻都没有后悔过放弃体贴疼爱她的丈夫，她说，</p><p>“<strong>结婚对女性来说可能是一种资格或执照，获取过一回就满意了。</strong>”</p><p>最打动我的是，一个八九十岁的老太太，很自然地到百货公司柜台买化妆品，光这一点就让很多女性减少了独居到老的恐惧。她算是在这个世界上留下了痕迹的女性。</p><p>&nbsp;</p><blockquote><p>肉荞麦面店的老板娘和客人</p></blockquote><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/21/article/a69bcafd10981be484e811b8ab0fdf46.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>老板娘是个五十多岁的女性，内心更柔软一些，会因为捐了两个月的薪水而自己拼命工作来还上，会因为客人说她的天妇罗酸掉而委屈到掉眼泪。所以她的店里，客人也都很善良：</p><p>一位中年男性为了安慰作者，提及自己有一次来不及阻止色狼，但下一次就非常勇敢地站出来，他让作者再忍一忍，</p><p>“<strong>你跌倒的时候，周围的人肯定想帮你的，但可能跟那天的我一样不知所措。也有可能，他们以后哪天会鼓起勇气帮助别人。</strong>”</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/21/article/299f3eb1552876b31ac5f2325a6c424d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>作者在思考为什么会在这些店里得到温暖和慰藉：</p><p>“友情是一种亲密、因此又难免陷入封闭的关系，而在职场或餐馆等场所的偶然相遇和擦肩而过是一种开放性的关系。</p><p><strong>这些不经意的场合中你都能找到气味相投的人，这种经验自然让你和眼前的世界建立信赖感。</strong></p><p>因为外面世界的风浪颠簸，你确实会受到伤害，而在荞麦面店里的对话带来的欣慰，就像是一束阳光，鼓励你往前再多走几步。”</p><p>当然，《东京八平米》里还有很多很多的故事，比如刚出头的年轻落语家在台上怎么扬声都无法引起一声笑声，甚至观众席还有人打瞌睡，但不管怎么样，落语家必须把一个小品坚持讲下去，讲完才向观众鞠躬退场，然后明天在同一个时间再次登场表演。</p><p>作者籍此领悟到，写不出像样的稿子又如何呢，别人不喜欢，那就再努力钻研，然后再写一稿。</p><p>与其说这是一场八平米外的故事会，不如说是一部勇气集。吉井忍在路过一个个真实的日本人的生活，也路过自己人生的迷茫。</p><p>或者说，也是我们人生的迷茫。</p><p>因为我们也可能会在别人举着offer庆祝的时候，怀疑自己的选择是不是错误的，害怕自己是不是错过了珍贵的机会，也会想到父辈在自己的年龄，是如此兢兢业业支撑起了家人的人生，大家都是普通人，为什么我不可以走一条寻常路？</p><p>看不完的展览和电影（以及各种优惠）、大大小小的图书馆以及其完善的查询系统（一般都是免费的）、各有特色的钱汤（虽然正在减少中）、适合进行人类观察的喫茶店（很可能你也正被别人观察）、允许你逃避现实的铁路和航空路线（小心影响工作），以及相当多的临时工的职位——感谢东京之“大”，抵御了八平米的“小”，也缓解了她内心的“小”世界。</p><p>东京给了吉井忍无数的答案，也缓解了那些令人生焦虑的谜题：</p><p><strong>谁不是那么脆弱呢，我们就是靠着这些细节，甚至是幻觉，顽强地找出快乐并继续往前走。</strong></p><p>你的“小”不成问题，因为外面的世界足够大。</p><p>&nbsp;</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/87415</id>
            <title>APP被「借鉴」到推文「剽窃」，这几天我所经历的暗黑「无底限」</title>
            <link>https://sspai.com/post/87415</link>
            <guid isPermaLink="false">https://sspai.com/post/87415</guid>
            <pubDate></pubDate>
            <updated>Thu, 21 Mar 2024 09:52:47 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 剽窃, 原创, APP, 抄袭者
<br>
<br>
总结: 本文讲述了作者开发的APP遭遇剽窃事件，抄袭者抄袭了作者的原创内容，包括文字、标题、版式等，作者通过贴图对比形式揭露了抄袭行为。 </div>
                        <hr>
                    
                    <figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/aa65f5c0ba044e6e4c141451ffc30f6e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>（题图via：自家狗子）</figcaption></figure><p>对不起各位观众老爷了，我不得不硬着头皮🤮，给大家讲一个原创江湖上<strong>的又又又一个祥林嫂的故事。</strong></p><p style="margin-left: 0px; text-align: justify;">考虑到周一上班如上坟的状态，各位职场朋友就当是吃个<strong>喜闻乐见的小瓜</strong>吧。🍉</p><p><strong>利益相关声明：</strong></p><blockquote><p style="margin-left: 0px;">① 在揭露剽窃者时，不可避免地会涉及到我的原创App介绍，无法接受的朋友请离席。</p><p style="margin-left: 0px;">② 这篇原创文章，任何人（除了剽窃者）均可读可转载，无需申请。</p><p style="margin-left: 0px;">③ 基于第②条，不欢迎剽窃者阅读本文，我知道你们有在我们产品的各种宣传渠道（包括但不限于小红书，公众号，少数派等……）踩点的习惯，因此，当你已意识到本文锤的就是你时，请主动老脸一红，关闭本文。</p></blockquote><h3 style="margin-left: 0px; text-align: justify;">故事，是这样的。</h3><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/f34d9c13aa1a0e8e5b921db46460c23f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">我开发的一款APP，叫<strong>发票盒子</strong>，是一个帮职场人解决收集发票和整理发票难题的工具。好用，非常好用！抄袭者则是成名已久的两位自称<strong>「大师」和「大侠」</strong>的APP企业。</p><p style="margin-left: 0px; text-align: justify;">东窗事发<strong>没有任何意外</strong>，一位来自朝阳区的用户给我私了几张截屏……</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/aa139a60de4f1fcfe69fb9bcef53ffca.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">为了方便阅读，我以贴图对比形式，<strong>蓝色标注我的APP「发票盒子」原创推文，剽窃者抄袭拷贝推文我就标为……屎色吧！</strong></p><p style="margin-left: 0px; text-align: justify;">话不多说，直接上图，先撕<strong>「大师」</strong>，再锤<strong>「大侠」</strong>。</p><h2 style="margin-left: 0px; text-align: justify;"><strong>证据01：「大师」连我家锅都端了</strong></h2><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/ce2ff26c7a6a7d87bc2e0e8a937e2911.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">上图是「发票盒子」去年3月4号发的推文，对比「某票大师」3月14日的官方推文。</p><p style="margin-left: 0px; text-align: justify;">拜托，我使用的蓝色标题，是因为发票盒子APP品牌主色就是<strong>蓝色#224CB8</strong>，另外这个标题排版也是我用了一年多的标志性版式。</p><p style="margin-left: 0px; text-align: justify;">嗯，<strong>抄功能和文字</strong>就算了，怎么<strong>标题</strong>、<strong>版式</strong>、<strong>品牌</strong>全都……偷吃几口差不多了，连我锅都端了不太好吧。</p><p style="margin-left: 0px; text-align: justify;">另外，还是挺钦佩「大师」的大手笔投入的：</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/890018c4cc6d4942522b65c0b809e71a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">如果说，「大师」的文字还有「用心」洗稿的痕迹，比如：</p><p style="margin-left: 0px; text-align: justify;">将<strong> “不少小伙伴” </strong>洗成 <strong>“好多小伙伴”</strong>，</p><p style="margin-left: 0px; text-align: justify;">将 <strong>“但是，这还不够!”</strong> 洗成<strong>“但是还不够!”</strong>，</p><p style="margin-left: 0px; text-align: justify;">那接下来出场的“大侠”绝对刷新了我的认知。</p><h2 style="margin-left: 0px; text-align: justify;"><strong>证据02：「大侠」的换头术</strong></h2><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/5268cbd01e8266a9a8a0302aeda47565.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 1em; text-align: center;">左图：发票盒子22年推文，右图：某票侠24年推文</p><p style="margin-left: 0px; text-align: justify;">一般来说锤剽窃的方法，是将 <strong>「相同句子」</strong>标注出来呀！</p><p style="margin-left: 0px; text-align: justify;">但这位「大侠」的剽窃方法是，除了把我的APP&nbsp;「发票盒子」换成自己的名字「某票侠」，然后就</p><p style="margin-left: 0px; text-align: justify;"><strong>一！字！不！改！</strong></p><p style="margin-left: 0px; text-align: justify;"><strong>这使我一时间不知应该如何是好😳</strong><br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">因此，我只能默默反向标注了这段原创文字中<strong>唯二不同之处</strong>——即产品名称。</p><p style="margin-left: 0px; text-align: justify;">好，后面打盹的同学提高注意力，我们继续往下看个搞笑的～</p><h2 style="margin-left: 0px; text-align: justify;"><strong>证据03：偷吃嘴都没擦干净哦</strong></h2><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/d232e789345a2752c69533c773b2f107.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">上方是发票盒子App的推文，某票侠小程序在剽窃的时候，<strong>只顾着把域名更换</strong>掉了，<strong>却没把我APP名称换掉呀？</strong>😵</p><p style="margin-left: 0px; text-align: justify;">看着某票侠在自己的官方推文里煞有介事地说“当首次登录<strong>发票盒子</strong>”时，有一种……被绿的感觉？</p><h2 style="margin-left: 0px; text-align: justify;"><strong>证据04：像素级抄袭</strong></h2><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/0659afcae277105a80ddb6a58e5a79c6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/6f25e763b1052136b09132765e2b4056.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">我的这些推文，肯定是没啥文学造谐的，其实都是自己与用户交流以及做产品设计过程中<strong>一点一滴的体验与感悟</strong>。</p><p style="margin-left: 0px; text-align: justify;">像上图中所说的<strong>「三个功能点」</strong>，下图中所说的<strong>「抄作业」</strong>，都是对我产品功能的总结和比喻。</p><p style="margin-left: 0px; text-align: justify;"><strong>可你都没有这个功能，怎么也照搬出 “三个闪亮点”？🤔</strong></p><p style="margin-left: 0px; text-align: justify;">如果没有用心在自己的产品上，没有用心在自己用户身上，怎么可能设计出真正好用的产品。</p><p style="margin-left: 0px; text-align: justify;">但是，接下来这个操作，我就有点憋不住了！</p><p style="margin-left: 0px; text-align: justify;"><strong>逐渐离谱啊～</strong><br />&nbsp;</p><h2 style="margin-left: 0px; text-align: justify;"><strong>证据05：把我的发票和手都偷走了！？</strong></h2><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/65db80fda5ef20c5e62a904aa25e0045.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">这是某票侠3.15这天发的官方推文！</p><h2 style="margin-left: 0px; text-align: justify;"><strong>3.15!?</strong></h2><p style="margin-left: 0px; text-align: justify;">看起来没啥异常是吧？让我给你打打假！</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/a812e315b3caeef804214b4cc941cef4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">在<strong>杭州某票侠</strong>的宣传文章图片中的示例发票，注意看是<strong>湖南</strong>的。</p><p style="margin-left: 0px; text-align: justify;">为啥是湖南的？因为我就住长沙，这些发票都是我<strong>本人吃饭加油开具的!!!!</strong></p><p style="margin-left: 0px; text-align: justify;">而那拿举着发票的手，<strong>是同事老公的手!!!!</strong></p><p style="margin-left: 0px; text-align: justify;">就这样一张<strong>从素材到排版100%原创</strong>的图，被离谱地<strong>盗取</strong>了……😓</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/c271041f690edb253de393556cc69b77.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><h2 style="margin-left: 0px; text-align: justify;"><strong>证据06：更多证据……</strong></h2><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/649f7cb13912359d161650c268331c3d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">我想了很多办法，来解释产品的功能。</p><p style="margin-left: 0px; text-align: justify;">比如，我的APP最强大的功能是能轻松收齐散落在各种App，邮箱、短信、微信和支付宝里的发票，并自动识别是否为重复发票。为了解释这个功能，我们设计了这张图。</p><p style="margin-left: 0px; text-align: justify;">图片左下角，是我自己的短信内容，和被苹果应用商店推荐的标记。</p><p style="margin-left: 0px; text-align: justify;"><strong>某票侠的做法是：界面换成他的，抹掉苹果推荐标记，还记得把颜色换成他们的品牌色（我很高兴看到友商有一点品牌意识）。😮</strong></p><p style="margin-left: 0px; text-align: justify;">这两位在APP名称中自称是「大师」和「大侠」（即：某票大师APP，某票侠小程序），我想应该是有<strong>某种自我期许的初心</strong>吧。同为产品创造者，希望在你们身上看到更多宗师和大侠的风范，而不是<strong>鬼鬼祟祟</strong>做夜半上梁之举。</p><h2 style="margin-left: 0px; text-align: justify;"><strong>谈谈他们正在抄的【发票盒子】APP</strong></h2><p style="margin-left: 0px; text-align: justify;">作为职场老人，我常有一种感觉，许多工作的<strong>疲惫</strong>和<strong>内耗</strong>，并非工作本身，而是来自于那些对成长<strong>没啥太大价值</strong>和意义，但又<strong>不得不做</strong>的事情——比如周末下班前匆忙憋着尿只想快搞定的周报，差旅后翻找票据令人厌烦的报账。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/7639cb7673f257d058fe5bfd22eb67cc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">职场人一定都记得<strong>被报销支配的恐惧</strong>——每次做项目、采购或差旅后，收集各种发票，分类整理核算，以及填写报销单，签字流程所经受的痛苦和厌倦，不知道有多少次因为不规范或者缺少证明，又被财务打回来。</p><p style="margin-left: 0px; text-align: justify;">我自己也曾搜索各种APP小程序，想来解决这个问题，结果能找到的很多APP的<strong>使用体验真是……</strong>（如下图）</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/7fa1c4fc2a80a27bf02822a4449d2b85.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>作者此刻情绪示意图（via：自家狗子）<br />&nbsp;</p><p style="margin-left: 0px; text-align: justify;">许多所谓票据收集的App，只不过是单位采购的那些巨型报销系统的子功能，这些系统以财务的专业视角提供了全面而精细，也苛刻无情的功能。</p><p style="margin-left: 0px; text-align: justify;">与其说是功能，不如说是<strong>「要求和命令」</strong>，而且复杂程度超越了普通人的理解，每个个体使用者都成了无情系统的数据供应者，从不被关心。</p><p>因此，用户抱怨说<strong>“上了XX系统后，比过去累多了！”</strong> <strong>“面对复杂的系统，感觉自己像个笨蛋…”😭</strong></p><p style="margin-left: 0px; text-align: justify;">我想，我要做一款给<strong>「笨蛋小白」</strong>也能用的报销助力工具。</p><p style="margin-left: 0px; text-align: justify;">我想，我要做一款<strong>「把人当人」</strong>的发票整理工具。</p><p>我想，我要做一款<strong>「让用户真的减负」</strong>的工具。</p><p style="margin-left: 0px; text-align: justify;">去年初，我立项了一个新的APP，名字叫<strong>【发票盒子APP】</strong>——因为在纸票时代，我就是这样整理发票的，办公桌上放几个盒子，分别写着「项目A」 「项目B」 「项目C」，每次拿到票，就丢进不同的盒子里。</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/a0dbd236dec8e85a6d3688db4598f127.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">为了这个APP，我和小伙伴在长沙各个咖啡馆里<strong>深度访谈</strong>了几十位报销困难户：</p><p style="margin-left: 0px; text-align: justify;">他们是差旅繁忙的<strong>管理者</strong>、买醋钱不能打酱油的<strong>高校研究人员</strong>、履薄临深的<strong>公务人员</strong>、以及千万辛劳的<strong>报账员</strong>、<strong>财务助理</strong>、以及帮课题组奔波于财务与实验室之间的<strong>研究生新人</strong>……</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/cbd17f4b3c1f9862abd565188c13f08b.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>via：用户需求调研</figcaption></figure><p style="margin-left: 1em; text-align: center;">&nbsp;</p><p>我明白，发票收集和整理这个痛点的用户，不是那种懂得高深会计术语的专业人士，他们就是那种<strong>「不太明白，糊里糊涂，就想把自己垫付的差旅费报销出来的普通人。」</strong>为此，我克制住了请教专业财会人士的冲动。（事实上，我只请教过一次，真的听不懂她在说什么）</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/c847435c5283f527e80826395a1cfc1a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>▲我的调研工作</figcaption></figure><p style="margin-left: 1em; text-align: center;">&nbsp;</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/3afb8d808c61d1c354ada9918c11098f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>▲低保真原型设计图</figcaption></figure><p style="margin-left: 1em; text-align: center;">&nbsp;</p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/f066055832305112cfb646cd25bbfd02.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>▲主线工作流高保真设计稿</figcaption></figure><p style="margin-left: 0px; text-align: justify;">经过两个月的调研使我有了<strong>底气</strong>，一个月的<strong>设计</strong>，一个月的<strong>开发</strong>，当0.01版本（MVP）推出后，大家的反馈<strong>出奇的好</strong>，因为真的好用！！（此处略过产品介绍1000字）</p><p style="margin-left: 0px; text-align: justify;">经过几个版本的迭代，我们吸引了许多用户，聚合了几个用户反馈群，【发票盒子APP】由于良好的用户体验获得了<strong>苹果AppStore「本周编辑最爱」</strong>，获得了<strong>OPPO应用市场「今日APP」</strong>等推荐。</p><p style="margin-left: 0px; text-align: justify;">详见<strong>：</strong><a href="https://sspai.com/post/78640" target="_blank"><strong>少数派首发：发票盒子的故事&gt;</strong></a></p><figure class="image ss-img-wrapper"><img alt="图片" src="https://cdn.sspai.com/2024/03/20/article/21ff5d6f82506d9c10d1365830680354.gif" /><figcaption>▲过去一年的我们</figcaption></figure><p>&nbsp;</p><p>过去一年，我和团队经历了创业以来<strong>最难的一年</strong>——早年用爱发电的几个历史包袱将资金消耗殆尽，人数减少到只有4个合伙人，之前产品的赛道被政策打到骨折，一直陪伴我们的投资人无奈撤资……</p><p style="margin-left: 0px; text-align: justify;"><strong>但是！靠着发票盒子数万用户的鼓励和上千名付费用户的支持，原本已经在死亡边缘团队依然还活着。虽然艰难，但我反而更开心了，因为用户给我光明和信心。</strong></p><p style="margin-left: 0px; text-align: justify;">在<a href="http://mp.weixin.qq.com/s?__biz=Mzg4ODg1NzUzMg==&amp;mid=2247484742&amp;idx=4&amp;sn=bf798d132f3e465606dfcd45bdc16094&amp;chksm=cff5f395f8827a839659ebaaafcd1b0db9ead96e738c59564d8433707de2a366fa74e11bba42&amp;scene=21#wechat_redirect" target="_blank">发票盒子的故事</a>这篇文章里，团队写道：</p><blockquote><p style="margin-left: 0px;">「大部分人游荡在黑暗里，他们只知道抱怨，却从不想办法寻找电灯开关」，愿我们的产品，是大家都能看到的开关。</p><p style="margin-left: 0px;">愿所有职场人都得到公正的待遇。</p><p style="margin-left: 0px;">愿我们都能远离无意义的工作。</p><p style="margin-left: 0px;">愿世界更美好。</p></blockquote><p style="margin-left: 0px; text-align: justify;">&nbsp;</p><p style="margin-left: 0px; text-align: justify;">对于「大师」和「侠客」的<strong>「辛苦劳作」</strong>，我也想说，<strong>抄袭是无意义的工作。</strong></p><p style="margin-left: 0px; text-align: justify;">费尽心机地将对手的名称替换成自己的，不如用心洞察场景，用产品的价值换取用户的信任，这是无价的。</p><p style="margin-left: 0px; text-align: justify;">正是因为无数用户的建议，质疑，交流，碰撞，使我们知道<strong>好的产品在于敬畏需求，在于关心用户</strong>，我们不在产品中加入广告，不在界面中加入多余的干扰，研究如何让用户的点击路径短一点，再短一点。无它，因为我知道，<strong>淬炼出的这款职场利器，不仅是在帮助用户，更是在养活自己</strong>。</p><p style="margin-left: 0px; text-align: justify;">也感谢抄袭者，让我再次清醒地意识到原创的价值。</p><p style="margin-left: 0px; text-align: justify;">我不知道如何也不打算应对抄袭者们，虽然有不少律师用户朋友都建议可以走一点法律程序。</p><p style="margin-left: 0px; text-align: justify;">因为，我很忙。<strong>未来，还有许多挑战和机遇等待我和用户们一起创造。</strong></p><p style="margin-left: 0px; text-align: justify;"><strong>&nbsp;</strong></p><span class="ss-linkCard">&nbsp;</span><p>&nbsp;</p><p style="margin-left: 0px; text-align: justify;">欢迎<strong>转发</strong>，让更多正在忍受折磨的职场人看到好工具的价值。❤️</p>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>