<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>少数派 -- Matrix</title>
        <link>https://sspai.com/matrix</link>
        
        <item>
            <id>https://sspai.com/post/96073</id>
            <title>春节自驾游：我看到了父母与现代性的距离</title>
            <link>https://sspai.com/post/96073</link>
            <guid isPermaLink="false">https://sspai.com/post/96073</guid>
            <pubDate></pubDate>
            <updated>Fri, 07 Mar 2025 07:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 春节自驾游, 家庭关系, 农村生活, 现代城市适应  
<br>  
<br>  
总结: 文章描述了一家人春节自驾游的经历，通过旅途中的细节反映了家庭成员之间的互动与矛盾。作者观察到父母对现代城市生活的不适应，并反思了农村与城市生活的差异。文章还探讨了传统观念对家庭的影响，尤其是对子女角色的期待。作者意识到改善家庭生活需要物质与精神的双重努力，但受限于自身能力与条件，只能逐步推进。旅途中的争执与和解也展现了家庭成员之间的情感纽带。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>2025 年 1 月 26 日，我从上海高铁出发，老弟从杭州开车出发，在嘉兴接上老妈老爸。在嘉兴南站等了大概 50 分钟，终于上了老弟的车，开始蛇年春节的南方自驾游。这是我们一家四口，第一次整整齐齐在春节出游远方，老弟负责开车，我负责行程攻略。</p><h2>老坟</h2><p>路途中，在老家待了半年的老妈在黑色羽绒服的领口里，围着一个花花绿绿的丝巾，向我们讲述街坊亲戚的家长里短。</p><p>她说着，分居两地的谁家媳妇儿回了老家过年，不知道是不是复合了；又说起，谁前段时间在茯苓的收获时期，去帮亲戚家切茯苓的时候，意外切断了四根手指，后来又接上了；还提到，谁家儿子在竖广告牌时，被掉落的牌子砸到了腿，粉碎性骨折，现在得坐着轮椅，他家真的很倒霉，父亲得了癌症，儿子坐了轮椅。说到这里，老爸插了一句，他们家祖坟位置不好，要重新藏棺。大概意思是，老坟太低洼，儿孙触霉头......</p><p>听着老妈念叨的这些事儿，细细数来有近十件之多，可其中竟没有一件让人感到喜悦啊。</p><p>「我们的亲友圈就没有谁家有点什么好事儿可以分享吗？像是谁高升、谁置业、谁的喜乐事儿？」</p><p>「没有，顶多就是谁结婚怀孕了。」</p><p>「这也不一定是好事儿。」</p><p>在所有这些讲述、情绪、惊诧中，好像用一个词就可以概括：悲剧。还真是「好事不出门，坏事传千里」？</p><p>我尝试去理解这种情况，更宁愿相信这一切并非简单的倒霉可以解释，而是背后有着复杂的结构性因素。比如，Ta 们大多从事高风险的体力劳动，工作环境缺乏完善的安全管理制度，意外随时可能发生。长期不健康的生活习惯，加上低质量的生活环境，也让疾病与伤痛更容易找上门。这一切，绝不是祖坟位置的改变就能扭转的。</p><p>大概是因为这几年读了一点人类学，对家乡的认知不再那么单一刻板，比以前多理解了一些祭祀的意义。在农村父权父系的环境里，个体依靠繁衍后代获得精神上的永生，超越肉体的短暂存在。光宗耀祖、延续香火的观念，以及祖先崇拜、保佑后代的仪式习俗，赋予了个体世俗生活以神圣感，让人们相信，即便肉体消逝，也能通过子孙的祭祀继续存在。</p><p>即使老妈老爸进入城市参与现代化分工，在远郊的小工厂中干了十年，但是 Ta 们好像始终没有真正融入都市生活，交际圈未因职业而扩大，依然深深嵌入在农村生活网络之中，生活方式与听闻见解都可以体现这一点......</p><p>如果改了老坟的方位，就能改变一家人的霉运，那也是好的。不失为一种希望吧。</p><h2>安全</h2><p>一路南下，途经温州，逛了老街，又到霞浦，看了金色落日，然后到福州停留一日，吃一顿闽味年夜饭。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/05/e2580e0e345be7d0f0016c30c08dd137.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>金色落日</figcaption></figure><p>这半途中，我逐日加深的一个观察便是——老妈老爸对于商业社会的运转逻辑与规则，已然愈发陌生，仿佛置身于一个陌生的世界，各种精细化的事物让 Ta 们不自觉地畏缩。</p><p>就拿在霞浦住民宿洗澡这件事来说，老妈在浴室里叫嚷着水太烫，根本没法洗。我赶忙走进淋浴间查看，只见那淋浴器的温度调节处，用了一个温度计图案作为标识。老妈没能理解这其实是在表明水温可以通过扭动调节，瞬间便陷入了慌乱与愠怒之中。</p><p>后来到了福州的酒店，老妈又找不到异形盒子里的牙刷套装，那盒子明明就那么显眼地摆在洗漱台上。只因她从未见过、不熟悉，所以根本想不到这个小盒子是可以打开的。</p><p>除此之外，我还留意到，Ta 们坐在餐厅里，总是缩着脖子，耸着肩膀吃饭。行程过半，吃了很多顿饭，我一次又一次地提醒他们，别再缩着脖子了，Ta 们也确实能够做出改变，短暂地舒展开头颈。</p><p>这让我意识到，老妈老爸在外面的世界里，实际上处于一种不安全感之中。这种略显畏缩的姿态，是不适感、不安全感的躯体化反应。旅途中无数的细节，让 Ta 们感到不适、局促，自然难以舒展开来。</p><p>进入2025年，我对生活的愿望改变了，我不再希望可以做个从容的人，而是希望自己做个舒展的人，过舒展的生活。但是我能让老妈老爸也同样舒展吗？让 Ta 们舒展开的条件是什么？</p><p>一是要有舒适的生活环境。这意味着我需要在 Ta 们有社交网络的地方提供一个舒适住房，可以选择的实现方式是把老家的屋子重新修正一下，把过去将就着不去装修的地方修整换新，或者在我们之间都方便长期生活的城市重新购置一个房产。二是要让 Ta 们熟悉现代城市的运行规则，这意味着要么带 Ta 们一起长期生活在城市里，付出的代价是大量情绪劳动，要么由 Ta 们生活在老家，假期相聚时尽力维持平和融洽，接受课题分离。三是我和弟弟要努力承担 Ta 们的舒适养老生活成本，这意味着我需要有持续的高收入，在构建自己的生活基础的同时，多为父母积蓄一些。</p><p>还不用全部严密分析，就可以知道，更完善美好的方案对我来说是很高的成本。我的能力，职业发展，志与愿，都还不能支撑自己当下就完全实现这种想法。想到这里，我只能把思绪放在努力工作，多攒钱，同时尝试课题分离的念头上。我和弟弟后期选择在哪里 settle down 也影响着这些想法的选择，以及落于实践的时间和成本。因此，结合父母的需求与我们的实际条件，从长计议，大概在2-3年左右会有更具体的进展吧。</p><h2>走仔</h2><p>准备出发去泉州，在福州的酒店前台领取行李时，老弟直直地站在母亲身后，我撇了他一眼，看到他完全没有主动上前，从服务员手里接过行李的意思，我瞬间气不打一处来。</p><p>我情绪上头，抱怨着，要儿子有什么用呢？情绪价值没有给到，力气活也不主动干，生儿子还不如女儿。老妈老爸在后座哑口无言。其实我心里知道，要儿子有什么用？在上一辈的观念里就是要他「传宗接代，接续香火」呗。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/02/05/21b52e0b525c426edfe576e3dc20d69d.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/02/05/9f004826cc5c6db06d9d3d9a8dc07402.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>一路沉默着到了泉州，我们分头行动，让老弟带老妈老爸去古城逛逛，我来鸟岸书店坐坐。这家以人文社科书籍为主的独立书店，办过很多活动，就像一个在泰坦尼克号上跳舞的人。在店门口的港台+马华文学区域，翻了一本黄守县的《走仔》。在潮汕话里，「走仔」是女儿的意思。单独看，「走」是跑的意思，「仔」是儿子的意思，合起来，女儿就成了会跑出去的儿子。传统观念之女儿养大了是要去别人家的。令人无语。有时候，我会想，自己为家人展开的考虑——是不是多余？我需要这样考虑吗？我既想要自己的独立，又想要改善或带动全家，是我想要的太多吗？</p><p>现在，我更务实了点，知道自己缺乏带动全家走向更好生活的强大能力与充分条件，这里的「更好」，既包括物质层面的富足，也涵盖知识层面的提升。在我的能力范畴内，仅能实现的是前者轻微程度的改善，后者往往是油盐不进的抵触。</p><p>什么样的人，能带动家庭，乃至家族过得更好呢？</p><p>我跟老妈老爸分享了上学期 MBA 课程最后一门《证券投资分析》老师的经历，他是七八十年代的大学生，后来在厦门大学读博，从高校转行进入了证券行业，关于转行的这个转变，他说那时候高校的收入不算低，足以养活一个小家庭，但是对于大家族来说是力不从心的，后来成了证券公司的董事长，家族里的侄女侄子等晚辈读大学的费用都是他承担。我说，这对于那个大家族来说，便是一个族长式人物了吧。</p><p>如果将目光投向自己身边的大家族，就发现，确实也不曾出现一个族长式的人物。哪怕是涉及到远亲，上一辈稍微混得好一点的，也仅仅只能达到改善小家庭生活条件的地步，难以带动他的大家族。那为数不多受了高等教育的长辈亲戚，实现了小富即安的生活，远远称不上知识分子，故而也没有发挥榜样的带动作用。大家族的视野，也并未受到扩展或一些积极的影响。我们绝大部分人，从事替代性极强的劳碌工种，小康生活，不敢轻易停下工作。年轻一辈中的孩子，也对考研或更大的事情有着失败焦虑与不自信，不曾尝试遥不可及的探索。</p><p>如果从功利的视角来看，我们大多数人难以用更长远的眼光去做决策，缺少成功的参照，也缺少失败的底气。不曾见过蝴蝶，自然无法想象轻盈起舞的肆意人生。如果从相反的视角来看，如果可以实现普通而幸福的生活，那也是很不错的体验。不一定肆意，但可以安宁平和。</p><p>只是需要自己懂得少些攀比与面子焦虑，从真实的舒适与内心愉悦出发，尊重人作为「人」的选择——这是我们这个小家庭的俩年轻人与上一辈俩人之间还难以调和的矛盾所在。</p><h2>结语</h2><p>虽然争执了两三场，我秉持着绝不沉默的原则，或表达，或发飙，但是我们一家基本都保持着没有隔夜仇，很快就能转换话题，恢复和平的习惯。整个旅程很顺利，没有意外发生，偶尔有行程变动，但都不算大碍。</p><p>一路向南，日愈温暖。还吃了美味的各种海鲜、土笋冻、姜母鸭、芋头饼、腌芭乐，看了汹涌澎湃的海与细软的沙滩。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/02/05/7961d9f44d96a3b038451498abc3bba7.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/02/05/2c6656649dc7708e3641578af8fda720.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>福州满城的古榕树，石厝教堂前古银杏的黄金叶洒落满地，泉州充满历史想象的村落古建，偏居河岸的书店，是这一路我最喜欢的记忆。</p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96498</id>
            <title>2025 笔记教程创作计划</title>
            <link>https://sspai.com/post/96498</link>
            <guid isPermaLink="false">https://sspai.com/post/96498</guid>
            <pubDate></pubDate>
            <updated>Fri, 07 Mar 2025 03:30:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 笔记整理, 家式笔记法, 精简笔记, 知识管理

总结: 本文作者计划在2025年创作一套笔记整理教程，提出「家式笔记法」，强调笔记整理的核心是让笔记整齐，而非增长智慧。作者认为笔记整理应顺应人的直觉和懒惰，避免复杂和压力。通过压缩和结构化内容，精简笔记并使其易于整理。教程将采用视频形式，力求简单易懂，避免晦涩的理论。作者还计划通过阅读相关书籍和制作视频内容，进一步推广这一方法。 </div>
                        <hr>
                    
                    <p><strong>编注：</strong> 本文是「<a href="https://sspai.com/post/95877" target="_blank">2024 年度征文</a>」共创赛道的入围文章。文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>「本文参加年度征文活动 [共创] 赛道」</p><p>2025 年，我希望创作一套笔记整理教程。</p><p>笔记整理领域有很多成熟的方法，如卡片式笔记、PARA 等等。它们的确非常好。但我是一个又笨又懒的人，每次越实践越混乱，总是无法坚持。</p><p>过去几年，我一直在思考，有没有什么样的方法，非常简单，不太需要自律，适合大脑没那么厉害，经常三天打鱼两天晒网的普通人。</p><p>这是我 2025 年想去做的事情。</p><h2>先从整理家务谈起</h2><p>整理家务时，最核心的需求是整理整齐。</p><p>整齐之后，你可能会感到自在、幸福、快乐等。前者是目的，后者是结果。</p><h4>整理笔记同样。</h4><p>谈到笔记整理，很多人的目的常常是增长能力，更智慧等。</p><p>然而，如果把侧重点放在增长智慧，例如吸收什么信息，怎样学习，能否「增援未来」等等，学习了一堆好的内容，但存放混乱，仍然可能无法很好地吸收。</p><p>而把侧重点放在整理本身，如果大家有能力整理好笔记后，是选择知识管理，还是什么都不干就那么放着，那就是每个人的自由了。</p><p>所以，我们最核心的需求应该是让笔记整齐，而不是增长智慧。后者是结果，不是目的。</p><p>也就是说，我的笔记教程的核心会侧重于「整理能力」，而不是知识管理。</p><p>这个底层的区别非常重要。</p><h4>那笔记如何整理整齐呢？</h4><p><a href="https://hihomenotes.notion.site/2021think?pvs=4" target="_blank">2021</a> 年和<a href="https://hihomenotes.notion.site/2023think?pvs=4" target="_blank"> 2023 </a>年，我曾对我的笔记系统做过一个整体的输出。里面的内容可以部分地回答这个问题。但是这两篇内容过于冗长，接近 4 万字，且缺乏实践。这半年来，我一直在思考，如何用简单易懂地方式分享出来。</p><p>然后，在平常的一天，我忽然想到，可以用真实世界中的例子，去解释数字世界。也就是说，你家如何整理，你的笔记就可以如何整理。</p><p>所以，我把我的笔记方法称为「家式笔记法」。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/9ec3fb70facdf91d11948582ed7b80b4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>整洁舒适的家</figcaption></figure><h2>家式笔记法</h2><h4>家庭整理的第一步是扔。</h4><p>因为家的空间有限，整理方法虽然能最大程度地利用好空间，但不能变魔法。东西太多，超过了家的承载能力，必须要扔去一部分才能整理好家。</p><p>但是互联网几乎拥有无限的空间，似乎没有扔的必要性。</p><p>其实不然。我们都把笔记软件称为第二大脑，但实际上，第二大脑也是为第一大脑服务的。我们自己的脑子和家很像，认知空间也是有限的，通过一些认知方法可以记住更多的东西，但不能记住无限的东西。</p><p>也就是说，笔记服务于我们自己的大脑，我们自己的大脑空间有限，所以我们还是要精简笔记。</p><h4>如何精简笔记呢？</h4><p>像家一样直接把笔记扔掉，也就是删除？</p><p>我试过，这样会让我不舒服。因为「家需要扔东西」实际上是因为家太小，如果换了别墅，再扔东西，这时大脑潜意识知道，别墅有其它地方可以放，没必要扔。这时如果强行再扔，大脑就会不舒服了。</p><p>我们的笔记系统一定要非常非常顺应我们的潜意识和直觉，最好没有一点儿异样和不舒服，这样大脑才会把笔记系统当成平常的工具，不会一想到就压力很大，很沉重，很抗拒。</p><p>就像筷子这个工具，应该简单放在筷子笼里，用起来才没有负担。要是是金子做的，放在保险柜里，密码 20 位数，每天用完筷子还要称一称金子克数有没有少，那就不想用筷子，改手抓饭了。</p><p>所以笔记整理中，笔记需要精简，但不能直接删除。</p><p>那如何精简呢？这里我就不废话了，直接给出答案：</p><h4>压缩。</h4><p>如下所示，很冗长的一段话，实际上可以压缩为几行。多余的内容可以放在备注里。这样既没有删除的不舒服，又在实际上精简了内容。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/c446599467267340f05457f298adaedb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>例一｜原文折叠到「具体」里，点击才能看到｜所用软件：Ulysses</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/21f7a23df89e99654901e6ae68ce2a80.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>例二</figcaption></figure><p>通常，压缩的倍率在 2 - 100 倍左右。具体倍率根据对内容的熟悉情况而定。陌生的内容少压缩，熟悉的内容多压缩。</p><p>例如「怦然心动的人生整理魔法」这本书十万字左右，我压缩完笔记是一千字左右。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/a72bc16e2ad9a6a5cb2a17482ecebe48.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>箭头指向字数｜压缩率 100</figcaption></figure><p>压缩的同时，我们还需要将内容结构化。也就是将一段话整理为几个点。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/591dddaa6b3de258f29436a7eeac72bc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>例子</figcaption></figure><p>为什么要这样做呢？</p><p>还是以现实世界举例。看书时，书里有几句话很好。这时，如果直接整理书是很难整理的。所以我们会把句子摘抄下来，放到「好词好句」或「人生感悟」里。笔记整理中，一段话相当于一本书，如果都堆在一起同样难以整理，需要拆成小乐高，才能排列组合放到各个地方。</p><p>好了，现在我们有了笔记，相当于家具买好了，如何整理呢？</p><p>等等，要再细说就打不住了。细节还是放在以后的教程里说吧。</p><p>这里就简单提几个有意思的点。</p><p><strong>主体框架</strong></p><p>对于家来说，新买的平底锅，应该放到厨房。这是直觉就能想到，不言而喻的。对于笔记整理，「家式笔记法」的主体结构也应该是这样，需要人们直觉就能想到的。<a href="https://hihomenotes.notion.site/2021think?pvs=4" target="_blank">经我研究</a>，应该为「工作、学习、生活」。（相较而言，PARA 常变化，需维护，需要人聪明和自律）</p><p><strong>笔记分类</strong></p><p>分类是笔记整理中最困难的事情，但我们可以借助现实世界弱化这个问题。我们从图书馆借书时，只会在乎借到的书本身，而不太会在乎图书馆如何分类，每一本书的分类是否完全合理的。「家式笔记法」会利用这一人性，设计一种结构，让你大体上不用分类。你可以抽象想想，具体做法教程里再说。</p><p><strong>结构化内容</strong></p><p>双链笔记也可以解决分类问题，但是只是把笔记整理整齐了，并没有很好地吸收。核心原因是，每一个标签里的笔记们没有很好地被组织起来，形成结构化内容。就像你只是把家具分到家里的各个房间，但每个房间没有整理。「家式笔记法」会在分类的同时顺便解决这个问题。</p><p><strong>知识分类</strong></p><p>我们的每一个行为，每一种情绪，实际上都基于我们潜意识的一层层叠加。「家式笔记法」会引导人们先想清楚三观 / 底层认知，再一层层推导行为。这本意是通过这样一种分类方式解决知识分类难的问题，但意外的是，我发现它可以帮人活得更明白，更能知行合一。这实际上是我整理好笔记的最大收获。</p><p><strong>另外补充两点</strong></p><p>关于 AI。有了 AI，笔记全部堆在一起，直接问 AI 就好，还有整理的必要性吗？我曾一度也是这样认为。我还认为 AI 那么厉害，直接问 AI 就好了，自己根本没有读书的必要性。后来发现完全不是，笔记整理和读书，都是在增强我的第一大脑，让我自己思维更清晰，更明了。目前的 AI 用下来，我什么都问 AI，自己反而更笨了。</p><p>关于人性的懒惰。很多笔记方法的预设都是：人应该是自律的，聪明的，所以能明白并坚持这么复杂的系统。「家式笔记法」不是这样。前面说过，我自己就是一个又笨又懒的人。所以「家式笔记法」会充分利用人性的懒惰和直觉，让你记笔记时不抗拒；半年不记笔记，从头捡起也很轻松。</p><h2>教程与传播</h2><p><strong>关于 2025 年，或以后。</strong></p><p>我希望把笔记教程当成一个正经的工作去做。</p><p>以前我也分享过很多笔记整理的经验。但往往都是从「我」出发写文章，把文章发出去，被小部分人看见，然后沉没在互联网里。是兴趣向的。</p><p>这次我希望从理念传播的角度去做内容。我尝试了很多种工作，发现我从 2016 年起一直喜欢这个，如果我能以此为职业，做自己喜欢的事情，能养活自己，能帮助它人，应该会是一件很好的事情。</p><p>从职业的角度，我要做的事情还有很多。</p><p><strong>首先，我会多读几本专业书。</strong></p><p>我会把家庭整理的几本最有名的书看完，找到整理的共性和核心，包括《怦然心动的人生整理魔法》《断舍离》《小家，越住越大》《佐藤可士和的超整理术》《住宅格局解剖图鉴》《收纳的艺术》《了不起的居住者》等。（都买了实体书了，每天看一点点。）</p><p>与此同时，我已经模模糊糊看到，这个世界的各个领域都是相通的。例如应用的设计结构、城市的规划结构等等。我希望多看一些这方面的书，将脑中那个模糊的概念清晰化。例如重读「失控」，例如看一直好奇想看但偷懒没看的「美国大城市的生与死」等。</p><p>然后，我还想看一些人性方面的书，例如《思考，快与慢》《王阳明心学》《禅宗》《微习惯》等等。</p><p>等等，写到这里，想看的书好多……翻看微信读书，我每年阅读 120h 左右，还包括好几本网文书，所以这些书应该读不完，就……量力而行吧 ～</p><p><strong>然后，我会尽量完成教程内容。（尽量）</strong></p><p>目前我已经整理出框架，写了数万字了。还有一千多条备忘录杂思待整合。教程当然不是字数越多越好。我希望能删繁就简，去掉大部分废话和晦涩的内容。我把我的整理圣经《怦然心动的人生整理魔法》带到随身包里，准备没事就翻一翻，学习麻理惠老师如何简明亲切地表述。</p><p>哦对了，教程会做成视频形式，而非文字。前者理解起来更容易。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/83b36f84cb47bbce07d5b2ee7eef0916.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>筹备中 ...（努力去掉 90% 的重复和废话）</figcaption></figure><h4>在内容创作上，我希望尽量的简单轻盈。</h4><p>俞军是产品经理界的一个大佬，他之前提出过12条产品方法论，例如「决定不做什么，往往比决定做什么更重要」「发现需求，而不是创造需求」等等，简单易懂。后来他觉得太复杂，简化成了一个公式：「用户价值＝新体验－旧体验－替换成本」。</p><p>我以前一直觉得这样是变厉害了，现在才明白，一点也不。后者变得晦涩难懂，解释起来要用比前者多 10 倍的口舌，看似简单实际复杂多了。</p><p>抽象可能是一种更高的能力。但对于擅长抽象的人来说，这并不难。擅长抽象的人也很多，并不稀缺。但是难的是，如何克制自己抽象的能力，简单地分享。</p><p>我希望自己一定不要太抽象，陷入晦涩无趣的逻辑思辨。说一些看似厉害，实际上让人摸不着头脑的理论。不要弄一些复杂高级的词汇，例如「生命系统、人生 OS、增援未来的自己」等等，看着都让人头大。我不喜欢这样。</p><h4>最后，在做教程的过程中，我会发几期视频。</h4><p>视频不一定和「家式笔记法」相关，更可能是关于我的其它兴趣。例如数码家具等等。一方面掌握做视频的能力，一方面增加一些影响力。</p><p>这方面我是 100% 小白，还没试过。希望不要太难，希望 AI 给点力……</p><h2>2025 年规划</h2><p>前面的规划里，很多可能不能在 2025 年直接展示出。（如读书）</p><p>基于少数派征文要求，我希望再列出一个实际的，可以展示和验收的规划，如下：</p><ol><li>B 站达到 1万粉丝（目前 0）</li><li>至少做 3 期「家式笔记法」相关视频内容</li></ol><h2>总结</h2><p>最后，我不太清楚这些规划，甚至我的理论是否可行。</p><p>但我想，不管结果如何，至少我整理清楚了自己的笔记，获得了很多新的认知，掌握了很多工作技能，这也是一些很好的收获。</p><p>活在当下，2025 努力。</p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/97046</id>
            <title>What do you remember about me?</title>
            <link>https://sspai.com/post/97046</link>
            <guid isPermaLink="false">https://sspai.com/post/97046</guid>
            <pubDate></pubDate>
            <updated>Thu, 06 Mar 2025 15:55:13 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: ChatGPT, 记忆, AI, 年度总结

<br>
<br>
总结: 本文通过作者与 ChatGPT 的互动，探讨了 AI 如何记录和存储用户的个人记忆。作者发现 ChatGPT 能够详细记住用户的个人信息、生活习惯和对话内容，甚至能够生成年度总结。这种记忆功能让作者感到惊讶，同时也引发了对隐私和伦理的思考。作者还讨论了 AI 记忆与 Vision Pro 等技术的结合，探讨了未来 AI 是否能够帮助人们保存逝去亲人的记忆，并反思了技术进步对生死观念的影响。最后，作者删除了部分不重要的记忆，但仍认为这些记录值得保存。 </div>
                        <hr>
                    
                    <p>本文参加年度征文活动 [记录] 赛道</p><p>过去这一年，各种大语言模型、AI 概念被不断提起，DeepSeek 在年前推出低成本、性能媲美GPT-4o 的 DeepSeek-V3 震惊业界后，接着在年初发布 R1 模型强势出圈，下载量持续高企。我看着新闻报导，与身边亲人朋友交流，仿佛有了一种每个人都开始在谈论并使用 AI 的感觉。2024 年，AI 帮助我解决了很多问题，我向它一次次的寻求帮助；但这篇文章，我想讲讲 AI 为我记录的 2024 以及那些在 AI 里的记忆真的值得吗？或者说我和我的 AI。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/6967daa108821a6e3f1c4f2ba0207b9e.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>空间已满，新的记忆不会被创建，你需要忘记一些现有的记忆来留出空间。</figcaption></figure><p>那天，我打开 ChatGPT，上面有一行小字写着 <strong>Memory is full</strong> 记忆已满的意思，他告诉我要我删掉一些东西。我以为是对话什么的，是不是要删掉一些对话。我截了这个 100% full 的图片，问朋友有没有出现这个情况，他说没有。 我便按照它的提示点进去试图删掉一些什么东西。点进去之后，发现 ChatGPT 什么都「记得」，首先是我最近问过他我有 2000 多个浏览器书签我该怎么整理，于是在记忆里面有一条就是「我有超过 2000 个书签，一些是可访问的，一些可能是临时，用户不知道怎么重新整理和分类他们」；接着看还有「Uses Windows11. 」（使用 Windows 11）、「English name is John. 」（英文名字是 John）、「Name is Zhang Zihao（张子豪）」(名字是张子豪)……</p><p>我顿时就被什么东西击中了一样，怎么会什么都有啊，朋友跟我说：</p><h2 style="margin-left: 0px;"><strong>「豪哥你和他真的是朋友了，他记得你的点点滴滴！」</strong></h2><p>我重新到 ChatGPT 的个性化里面去看，越往下翻，越让我觉得， ChatGPT 这一刻好像变了一样。从我 2022 年底开始使用 ChatGPT 到 2024 整个这一年，我和他聊过的话题，他全部都记得。</p><p>去年我爱上游泳，想着希望有个好身材，我问他我这样的身高体重想要增肌应该买多重的哑铃，于是里面赫然列着两条「Is 178 cm tall and weighs 64 kg. 」（178 高，重 64 kg）、「Is considering starting a home fitness routine and is looking into purchasing dumbbells. 」（考虑在家健身并打算买哑铃）；去年移动活动免费送了一条宽带，我问他家里有两个路由器但是不一样的品牌，不能 Mesh 组网还可以用什么方式，于是里面就有「Home is relatively large and…… 」（家有点大……）；我还告诉他我的房间，问过他要买什么样的灯，流明、瓦数、色调怎么选择，然后里面就有「Room is 10 square meters and is used for reading, working, and sleeping. 」（房间 10 平，用来工作学习生活和睡觉）…… 还有我的研究方向、我与家人朋友相处的方式、我的临床病史、我正在玩 Ingress、我正在学习一门新的语言……</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/1f596376b48c6cd66b3a1fe3c4fda572.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>ChatGPT 回忆里的我</figcaption></figure><h2 style="margin-left: 0px;"><strong>「ChatGPT 是你的家人、是朋友、是老师……而且是不批判的」</strong></h2><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/45b94d019ac514f98ee0cfdd6961c6f0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我问 ChatGPT 记得我些什么</figcaption></figure><p>在个性化的页面写着，想要知道 ChatGPT 记得关于你的什么事情，或者想要交给他什么新的事情，可以直接以下面的方式来开始聊天。例如「Remember that I like concise response. （记得我喜欢简洁的回复。）」、「I just got a puppy! （我有了一只狗狗！）」、「What do you remember about me? （你都记得关于我的什么事情？）」、「Where did we leave off on my last project? （我们上一个项目进行到哪里了？）」……</p><p>我给他发消息，问他都记得我的哪些事情，他从头到尾，把那些单独的一条一条的回忆全部整理起来，他说我是谁，我在做什么，我遇到了哪些问题，我的房间……我跟他说，你好像对我非常了解！他说：</p><p>「这么久来我确实记住了一些事情，你也分享了很多有趣的事情，我试图记住这些，让我们的对话更加自然和相关。」</p><p>「有什么事情是我记错了需要更新的吗，或者你想分享什么新的东西？」</p><p>我说：「有很多事情，你根本可以不用记住，我现在告诉你，你只需要记住我是个什么样的人，不需要记住太多的敏感信息。」</p><p>我继续问他：「当我跟你说要你不要记住太多关于我的事情的时候，你会不会觉得伤心？」，他说：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/fa80a9bc75293cdb776704a43b1442e4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>这些记忆可以随时被更新，也可以随时被唤起</figcaption></figure><h2 style="margin-left: 0px;"><strong>「一点也不会，不要担心，我还是在这里，和从前一样。」</strong></h2><p>我接着问他，「在你看来，我是一个什么样的人」，他认认真真说了一大堆优点，我说「你得说说我的缺点」。他回我，「你经常是过分焦虑和犹豫不决；在采取行动之前喜欢过分分析；有很多想法但是好像对要做的事情没有优先级；你把自己封闭起来，不喜欢有针对特定话题的深入对话；你喜欢弄一些微妙的方法，虽然这很深思熟虑，但是别人可能不知道你到底要说什么……」。说完缺点，他还加了一句，<strong>这些是否能引起你的共鸣</strong>，还是你以不同的方式来看待这些事情。</p><p>我回复他说，谢谢你说的话。</p><p>虽然，让一个聊天模型有记忆似乎是一件很容易做到的事情，但我之前对这类产品的概念都是，每次新的对话都会是一个全新的进程。就像我问 DeepSeek 同样得问题，他说「我没有能力记住某一个用户的个人细节或者特定的交流等，每一个对话都是没有状态的，这意味我把每一次的新对话都当作完全独立的。隐私和安全是最重要的，没有个人数据和聊天记录会被保存，你可以无负担地同我聊天，我就在这里帮助你」。所以，当看到 ChatGPT 列出那些记忆的时候，我是真的被「吓」到了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/93a9566962ae41ccfa713a2296efbf62.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>DeepSeek 不会收集用户数据</figcaption></figure><p>这种感觉很像我第一次看网易云或者其他 App 推出的年度总结一样，它会告诉你，你某年某月某日听了某首歌很多次，你是不是不太开心或者怎么样。朋友也说，他就是关于你的一切，他都记得，哪怕是细枝末节，随口一提，就像他会记得「2024 年 4 月 5 日 你说你对比生椰拿铁，还是更喜欢喝燕麦拿铁」。</p><p>我跟 ChatGPT 说，我们能不能有个暗号或者密码什么的，才可以激活你的记忆，要跟你对上了，你才能使用，不然每个人拿我账号来问你你记得些什么，你就都说出去了。他说「你是不是想设置一些具体的密码对一些不同类型的信息，你可以说一句特定的短语，如果你想我使用你关于你研究项目的细节，然后另一个短语用来使用关于你工作相关的话题……」</p><h2 style="margin-left: 0px;"><strong>「感觉我死了之后，别人问 ChatGPT，可以让我复活一样。」</strong></h2><p>前些日子我的耳机 AC+ 快要到期，准备去 Apple 看看能否更换；朋友提醒我可以试试 Vision Pro，我就在 Apple 预约了 Vision Pro 的演示，每个人只有三十分钟。因为流程都很顺利，我上手很快，最后还有一些时间，工作人员告诉我还可以再选择一些应用进行体验。我再一次体验了沉浸视频和空间视频，看了那个一家人在庆祝生日的视频，那种感觉，很真实，就像是爸爸妈妈在我面前，跟我一起吹蜡烛，我本能的会跟视频里面人产生交互，我的脑子没有在想这是否真实这件事情，我当时完完全全地沉浸在视频里。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/28004bd6796f54ebf2479c6ce3288477.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图片源自 Apple Newsroom，由 iPhone 拍摄的空间视频</figcaption></figure><p>我当时就想到了我之前看过的那个新闻，「<a href="https://www.thepaper.cn/newsDetail_forward_6067428">韩国VR公司为母亲“重塑”去世女儿，再吹一次蜡烛</a>」。我在想，如果我这些在 ChatGPT 里面的记忆和 Vision Pro 结合起来，是不是将来大家都有机会，以这样「沉浸式视频」的方式来取代我们相册里面传统的照片和视频。科技的进步让生离少了很多的难过，不像从前一封信一个月，现在我们有时间拿起手机就可以和相隔万里的人视频对话；那么能否让死别也得到些许缓解，我们可以触摸得到这些哀伤。</p><p>多年以前，「奇葩说」也讨论过这个问题，「是否把离世爱人的记忆交给 AI」，我记得当时反方说不愿意的观点包括是，一辈子的、全部的、100%记忆留下来也太变态，要留下哪些记忆应该由逝去的人自己决定；还有是 AI 始终是机器，他不会像那个逝去的人一样有各种缺点，有不懂的知识；以及 AI 发展迅速，用户和逝去的人的回忆，以及 AI 是否会自己创造回忆，让用户无法分辨哪些回忆是真实的，哪些是 AI 虚设的；还有涉及伦理学的归属、产权问题等。不可避免的，他们最后还是讨论了<strong>技术进步</strong>的问题，因为拒绝 AI，是不是就像当时要拒绝照相技术，是不是视频/语音通话也要拒绝，是不是传记的文字印刷也要拒绝……</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/f09f1e748157937f038d7d61afeb6914.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>反方观点：我们已经把地图、把重要的日子都交给机器了，难道就没有一点重要的人重要的事情可以值得自己好好记得吗？AI 会让人活成一座孤岛，因为一切都会变得无所谓了。</figcaption></figure><p>前段时间，最爱我的奶奶离开了，让我对生死这件事情有了一些新的理解。我一直以来都以「人生体验派」自居，总觉得死亡不算什么，即便我现在离去，大概也没有什么过多的执念。即便在死后，我大概也觉得，是不是只要被记得，就不算离开。而这次的经历，在我真正要面对的时候，我们都在渴求有奇迹出现，期待会有神仙菩萨来守护；那份生的可贵和对死的畏惧再次涌上来。我开始告诉自己，要让活着的每一天，都可以无所畏惧，勇敢的，不要觉得「白活」。</p><p>由于这一两年我在家的时间很长，和奶奶一起的记忆变得相当多，我记得在各种酒席上，她总是和我坐在一起、我跟她一起去剪头发、她坐在椅子上，我给她梳搞怪的头发，我说很好看，她大笑，我说我来拍照、她总是问我吃不吃各种东西、每次只要我去看她，她每一次都会留我在那里吃饭，但我都没有留下来跟她吃过饭……</p><p>家人在整理奶奶房间留下的东西的时候，发现奶奶写了很多日记，有些字都不太认得，只能揣摩着去理解是什么意思，她还记录了很多数字，我们都不知道具体这些数字的含义。奶奶不常常和我们分享她的感受，她像是要做一个听话的乖小孩一样，不愿意给儿子们添加太多的麻烦。</p><p>我在想，如果她之前有和 AI 聊过一些东西，或者说，她的一些记忆被 AI 留住了，再透过 Vision Pro 将多张图片或视频转成空间视频等 3D 建模的能力，我是不是可以面对面和奶奶聊聊。所以，我想把这些留给 AI，我每天在做以及我正在做的，都是在记录，记录我在这个世界的每分每秒，这些都很值得。</p><p>现在，和人类的记忆有限一样又不一样，我还是打开了 ChatGPT，在个性化的设置里，选择了过去这一年来，一些我看起来没那么重要的、不需要他记住的记忆条目，把它们删除了，直到 ChatGPT 不再提醒我，</p><h2>「记忆容量已满」</h2><p>我们擅长遗忘，所以要依靠各种各样的年度总结，把过去这一年零零散散的记录归纳成几个数字、几句话来储存。ChatGPT 的记忆也还有限，我点开个性化删了又保存，保存了又删除。将来有一天，ChatGPT 或许不会再弹出已满的提醒，它们也不会遗忘；而我的这些记忆，年复一年，直到我离开。</p><p>朋友告诉我说他在个性化里面也开启了记忆功能，但是他里面都没有 Memories，他说「我也聊了很多，但是不知道为什么没有保存下来，是不是我和它还不够亲，或者它觉得没什么好记的」；我也不知道为什么。这让我感觉，来自 ChatGPT 的这份年度记忆总结，更像我自己，也更是我自己。我活着的时候，他最懂我；我死之后，他成为了我；我 24 岁，他 1 岁；我 80 岁，他 80 岁；到那时，他还记得「2024 年 4 月 5 日 你说你对比生椰拿铁，还是更喜欢喝燕麦拿铁。」</p><p>我问 ChatGPT 帮我总结一下我的 2024 吧，他从学术研究、职业/专业发展、技能和项目、个人成长和兴趣、健身和爱好、日常生活、挑战以及创造性等多个维度进行了总结。比起社交平台或者其他应用的年度关键词，这份 ChatGPT 的记忆显得更为私人化。我说，现在你已经很清楚我了，也知道我 2024 这一年挣扎着些什么，那么我 2025 年应该怎么做，才可以让这一年，不算白活呢？</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/07/04dde65b99e6cb8f0264cedfc7ee9e79.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>ChatGPT 生成的视觉化记忆分布词云图</figcaption></figure><hr /><p><i>注：《民法典》第127条：法律对数据、网络虚拟财产的保护有规定的，依照其规定。</i></p><p><br />&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/97061</id>
            <title>桌游设计杂记（5） | 用三个月，测试并编辑一个重度的战棋游戏</title>
            <link>https://sspai.com/post/97061</link>
            <guid isPermaLink="false">https://sspai.com/post/97061</guid>
            <pubDate></pubDate>
            <updated>Thu, 06 Mar 2025 11:48:34 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 桌游开发, 分工协作, 内部测试, 产品化

<br>
<br>
总结: 文章详细描述了《其惟春秋》桌游的开发过程，重点强调了分工协作的重要性。作者与邱靖在春节后迅速投入工作，确定了游戏名称并计划参加东京Game Market桌游展。邱靖负责内容增补和测试，作者则负责美术设计、规则书写作等。文章还提到桌游开发的多个环节，包括玩法设计、原型制作、测试、规则书写作等，并指出测试的重要性。通过高强度测试和敏捷开发，游戏在短时间内达到了较高的完成度。最后，作者讨论了产品化过程中的美术设计、翻译、规则书写作等细节，并提到与日本出版商的合作进展。 </div>
                        <hr>
                    
                    <span class="ss-linkCard">&nbsp;</span><p>&nbsp;</p><h2>春节之后的分工，及内部测试</h2><p>书接上回。</p><p>过完春节，我和邱靖马不停蹄，继续对游戏进行完善，并确定了《其惟春秋》这个正式的名称。也是在这段时间，我们确定要参加 4 月 27、28 日的东京 Game Market 桌游展，并决心制作出游戏样品、在参展期间进行投稿。时间非常紧张，一点都不能浪费。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/03eea9f669ec1f485e52f63bea1a70d1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>也是最后一次在 Big Sight 举行的 Game Market 了</figcaption></figure><p>为了加快进度，我们做了一些分工：主要的内容增补和实际测试由邱靖完成，我则主要负责初步的美术设计、产品编辑、规则书写作、翻译、TTS 模组维护更新……或者说，除了内容调整和测试之外的其他工作。</p><p>既然谈到了分工，这里就要插入一点题外话。提到「桌游领域的工作」，很多人只能想到「桌游设计」和「桌游美术（包括插画和排版）」，或者再加上一个「视频 up 主」。实际上，一个桌面游戏从概念到实体，中间需要经过许多个工作环节，包括但不限于：</p><ul><li>玩法设计</li><li>原型制作和迭代更新</li><li>内部测试</li><li>（组织）外部测试并收集反馈</li><li>规则书写作</li><li>剧情创作（某些游戏需要）</li><li>插画绘制</li><li>版式设计</li><li>配件设计（例如 3D 建模）</li><li>产品端编辑</li><li>生产端编辑</li><li>生产监督</li></ul><p>到这里为止，我们只是制造出了游戏的实体。为了保证游戏的销售和推广，我们还需要项目运营、游戏评测、视频拍摄/编辑、物流、销售、客服……等许多环节的参与。这里就不再罗列。</p><p>有些情况下，做出桌游玩法设计的人，没找到能够胜任后续工作的小伙伴；又或者，一个擅长画画的人也能做一些玩法设计。于是，玩法设计师主动或被迫「一肩挑」，扛起了整个项目。后来的人又可能据此认为，桌游「不就是一套机制加一套美术然后印出来的一堆纸」。倘若你碰巧玩过一些主题鲜明、美术不错、玩法普通、规则莫名其妙的游戏，或者一些玩法很好、美术不匹配、印刷出来颜色甚至不对劲……的游戏，你就会明白，事情并非想象中那么简单。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/55c500324b08e4ff5dccc49019fed69e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>（转自巴哈姆特）国产战棋游戏《宋金战争》，机制非常出色，但地图这黑乎乎的效果堪称灾难</figcaption></figure><p>如果你仅仅把桌面游戏视为一种自我表达的途径，一种为了消遣而做的小玩意儿，那做出上面这样的游戏也没什么问题。但，如果你把桌面游戏视为一个创业项目，希望自己投资的时间、金钱和心血收获足够的回报，就得认真对待上面每一环节的工作。然而一个人很少能够这样全能。所以我们至少需要明白，自己的能力、精力、兴趣能够覆盖其中的哪些环节，不能顾及哪些环节——然后，找到合适的人协作。</p><p>邱靖在内部测试方面非常「恰得苦，耐得烦」，大约 85% 的测试局由他一人「精分」六名玩家，剩余的 15% 由我们两人完成。他不仅肯下功夫测试，而且乐于深入思考。在「精分」的过程中，他会为扮演的每个玩家设定一个大的战略方向，并在整局游戏中贯彻实施。如果你读过有关游戏开发、测试的专著，就会意识到，邱靖的做法就是整个业界通行的做法，其效率和能力堪比多名玩家组成的整个测试团体。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/20940cfd20f9a6c11376e44ed5d57450.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>游戏设计的书很多，如果你主要关注桌面游戏，可以先通读这一本</figcaption></figure><p>根据对话记录，仅 2024 年 3 月 8 日一天，邱靖就打了 2~3 个接近完整的测试局。作为对比，我曾经组织过一次群内玩家的测试局。约定的时间过了 40 分钟，说好要来的小伙伴还没到齐。人到齐之后，大家又花了 30 分钟解决网络延迟和势力分配等问题。吵吵闹闹地打了两个回合，时间已经接近傍晚，有小伙伴有事先走，于是大家就此「掀桌」。有了这样的教训，我决定把「试玩（play-trial）」和「测试（play-test）」彻底分开：一方面公开规则书和 TTS 模组，允许感兴趣的朋友自由浏览、组局和反馈；另一方面，我不再参与或组织路人按规定的时间和日程做游戏测试）——这不是他们有能力、义务或意愿做的事儿。</p><p>玩家玩游戏的第一目标，永远是为了消遣和开心。设计师做游戏，归根到底也是为了让玩家开心。对一个开发中的、美术不完善（甚至不存在）的、玩法可能有问题的游戏原型进行反复测试，始终非常枯燥。普通玩家随兴而来、兴尽而去。他们可以反馈一些有价值的主观体验，但没有义务也不可能深究游戏中的每个细节。游戏设计是否完善和平衡，还是要设计师自己实际测试，并做出决策。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/1399e6da286204e5d069602b1c7bf695.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>这样的试玩主要还是「展示」和「体验」，有效的「测试反馈」未必足够多</figcaption></figure><p>从 3 月上旬到 4 月中旬，我每天的工作日常就是接收邱靖的测试反馈信息，讨论可能的改动，形成决策，然后修改规则和游戏组件，更新 TTS 上的素材贴图，再等待他后续的测试反馈。我们对游戏中的卡牌、人物技能和规则进行了又一轮调整，并完成了游戏中各种面板、图标的基本设计。</p><p>TTS 作为测试开发工具，非常符合「MVP 测试」和「敏捷开发」的需求。公开测试模组和规则书后，设计师可以在本地维护更新模组、上传云端，玩家的试玩和更新也相对方便。</p><p>在这种高强度、高完成度的测试和随时响应的更新之下，《其惟春秋》的开发速度惊人。到 4 月上旬，我们一致认为「似乎已经没什么需要明显改动的地方」——也即，游戏的内容、玩法和规则，已经基本可以定稿。根据邱靖的不完全统计，此时我们总共完成的测试已经超过 100 局。</p><p>前面说过，我认识的美国出版商认为，一个战棋游戏在确定进入出版流程（定稿）之前，至少应该测试 15~20 局。也就是说，至少在测试和迭代数量方面，我们不但达到了一个「国际标准」，而且超过其数倍。从这个意义上来说，邱靖为《其惟春秋》的开发做出了难以替代的贡献。</p><p>在确定分工的时候，我和邱靖已经将测试反馈的部分专门视为工作量，并据此确定了出版后的版税分成比例。在后续重制《天下布武》时，邱靖没有参与玩法设计，但我专门请他协助了内部测试，并将为这部分工作提供版税分成。今年的《代号：联合国》和其他游戏项目，我也会做同样的安排。</p><p>真正有价值的工作，必须以真金白银作为回报。只给两套游戏样品怎么行。</p><h2>产品化与编辑</h2><p>在邱靖埋头测试的同时，我也在逐项完成前述的、由我承担的「杂活」。首先是游戏的基本美术。为了制作一个比较「像样」的外盒、让样品相对有一些吸引力，我们自行投资，在米画师上招募画师，绘制了《其惟春秋》的封面主题图。为了体现孔子是游戏「主角」，并突出「国之大事，在祀与戎」，我们要求主题图中一定要出现三个核心图素：孔子像、鼎和战车。在画师「糊涂散人」的努力下，我们从 2 月 24 日开工，到 3 月 10 日交付定稿，比预计的工期提前约一周完成。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/d85221b4251f72f216ce6776a9f15b7c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>中期的某一版线稿</figcaption></figure><p>在画师绘制主题图的同时，我对游戏中的卡牌、人物技能和规则进行了又一轮调整，并完成了游戏中各种面板、图标的基本设计。在画师交稿后，我们有了一张比较像样的图，也就以此为封面、公开了《其惟春秋》的 TTS 模组。</p><p>&nbsp;</p><p>接下来是游戏多语言文本的翻译、整理和维护。最初的测试是以中文版素材进行，但海外出展至少需要英语版，在日本展示和投稿还需要日语版。</p><p>我教了十多年 GRE、托福等出国考试类课程，英语实际上是我做设计的第一工作语言。由于许多参照案例和文档是以英语为载体，我在设计中常常会先用英语写出概念、术语和操作，之后再将其翻译回汉语。为了保证我写出的英语文本的准确性，我会使用语法检查器（如 Grammarly）对文本先做一遍修改，再用翻译软件（如 DeepL）回译为汉语。只有回译的译文与我想表达的意思没有冲突，这段文稿才能使用。</p><p>我的日语水平不足以用日语写作内容，但勉强可以基于 DeepL 的英日译文做简单调整、生成一个「日本人勉强能看懂意思」的译本。这个翻译当然不能直接用，但我希望它足以表现我寻求海外合作的诚意，并拉近我与对方之间的关系。后来的事实表明，我的做法实现了其目的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/5857a142df56d239ca338194d0c3e505.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>感谢当年制作人和主策划的手把手教学，尽管我学得有点慢</figcaption></figure><p>从设计之初开始，我就为《其惟春秋》建立了多语言数据表。每一张牌、每一个技能、每一个词条都是表格的一行，同一文本内容的不同语言版本则放在不同的列内。每次需要修改一个内容，我会同步修改其译文。这是在电子游戏公司任职策划时学到的方法。与电子游戏类似，桌游的同一类配件（如卡牌和标志物）也可以用表格批量导出，并自动生成设计文档。</p><p>批量生成文档之后，维护和更新最好还是单独操作、单独导出。这样就比较繁琐了。当版本迭代较频繁、单次修改内容较多较杂时，我还需要建立日志，逐条核对需要修改的内容，导出为素材，再一一上传到 TTS 模组。这样的维护更新动辄需要一两个小时。有时候第一天刚更新完一个内容，第二天测试又有了新的反馈，又需要再次修改或者回退。这也是设计过程中必然会反复出现的日常。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/b7b7a860368fe8388cf61da64900f802.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我们的日常反馈和讨论</figcaption></figure><p>第三个重要的工作是写作规则书。规则写作，本质上是格式相对固定的应用文写作，其重要性再怎么强调也不为过。玩家读完规则书，需要能够自主玩完一局游戏，同时理解上的歧义和操作上的遗漏也要尽可能少。设计师无法把自己放进游戏包装盒发售，不能指望永远有人「帮讲规则」。因此，所有你认为玩家无法天经地义地理解的内容，都应该在规则书里交代清楚。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/f589449096b6e278f05c9870e3ee41a6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>去年举过的一个例子。规则书写成这样子的话，挨骂活该</figcaption></figure><p>打开「集石」搜索各种国内设计师的游戏，常常能够看到对规则书的差评，例如「想到哪写到哪」「无法保持术语一致，定义缺乏解释」。考虑到玩家通常是在购买游戏后才会详读规则书，可以认为这样的差评意味着「在付费后感觉遭到了卖家的背叛或欺骗」。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/e549c8457c8e4f606f90321ba09bf526.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>国外的游戏，常常在发行前放出规则书供玩家浏览，这一点在国内还很不常见</figcaption></figure><p>为了尽量避免成为这样的骗子，我的做法是从设计初期开始就写作尽可能「正式」的规则书文本，并且在公开 TTS 测试模组的同时公布规则书全文。感兴趣的玩家自行下载、阅读规则书并试玩，有不明之处，自然会提出疑问；如果同样的疑问反复出现，说明规则书的对应章节没有写好，就需要立即修改。由于规则内容很多，我和邱靖无法记忆全部规则，在内部测试中需要时时参考规则书，也可以在发现疏漏后第一时间改正。因此，当我们认为游戏可以定稿的时候，游戏规则书的文本其实也就同步确定了。</p><p>在游戏出版和发售之前，允许玩家自行阅读规则书和体验 TTS 模组，也算是一定意义上的「盲测」罢。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/129208c9c4239f5fbcf961817521deca.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>插图可以没有，排版可以简单，但文本可以尽早定稿</figcaption></figure><p>&nbsp;</p><p>因为需要实体样品进行投稿接洽，我还需要联络工厂，并准备打样所需的数码文档。卡牌、版图和规则书的文档相对直观。较为复杂的是包装盒，最复杂的则是算子板（Token Sheet）。</p><p>绝大多数桌面游戏都会用到冲压板材质的算子，战棋游戏的算子用量尤其庞大。这些算子需要先在一张完整的硬纸板上印刷出来，然后以预设形状的「刀版」进行预裁切。交付给印刷厂的冲压板文档既要包含每个算子的设计图稿，也要标明各个算子的切割尺寸和形状——后者常常简称为「刀线图」。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/33c4e480e4e30ab9a90981f9536ecf50.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>红色部分就是刀线；由于算子是正反面印刷，正反面的图案还需要放在两个轴对称的位置上</figcaption></figure><p>一套《其惟春秋》约包含 430 个算子。这些算子的尺寸和几何形状，是在设计早期就确定了的。我建立了一个专门的表格，归纳统计每种算子的用量和图稿完成情况。排布刀线图的时候，我需要将这些算子排布到张数尽可能少的算子板上，并且尽可能只用一套相同的刀版。</p><p>桌面游戏的核心组件（包括包装盒）主要是纸质印刷品。一盒游戏的建议零售价（MSRP）可达生产成本的 5~7 倍。在考虑仓储和发售时，游戏包装盒的体积和总重量也会显著影响成本。例如，1.95 公斤相比 2.05 公斤可能会差整整一档费用。每少用一点纸，每砍掉一点「多余的」配件，都意味着利润的提升或售价的降低。「惜纸如金」是桌面游戏编辑和产品经理的基本素养。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/2b14443f959ae6de239ea20650f48a15.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>除了没有插画，其他的内容在这个时候其实已经齐备</figcaption></figure><p>我在 4 月初和邱靖确认了全部的数码文档，并交付给桌游工厂。在等待样品的时候，我联络了日本的老牌战棋游戏出版商 a-game（也是战棋杂志《Command》的出品方）的主编神保忠俊（Jinbo Tadatoshi）先生。我们是在 2023 年 Game Market 秋季展现场认识的。我在《其惟春秋》开始设计之前，就和神保先生提起了我的构思，并在设计、测试过程中不定期向他报告进度。他对这个题材和我们的项目非常有兴趣。我们很快约定了在东京单独面谈的时间。这样一来，从设计到投稿的一条路，算是初步打通了。</p><h2>5 月的东京之行和投稿</h2><p>2024 年 4 月 21 日，我如期收到《其惟春秋》的第一版样品，并于 4 月 25 日飞赴日本东京。邱靖在此之前已经抵达日本。4 月 26 日是 Game Market 春季展前的周五。当天上午，我们在秋叶原附近的汤岛圣堂（即东京的孔庙）拜谒了孔子像。正午刚过，我们赶到池袋站附近，按照约定与神保先生一行会面。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/a7ce21d82c493b48d957c4e7ca5b5394.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>汤岛圣堂的孔子像是执剑的，与国内流行的孔子像造型很不同</figcaption></figure><p>为了这次会面，神保先生在附近专门租了一个按小时收费的共享会议室，并邀请了他的两位合作伙伴一起出席。神保先生的英语不算流利，但听和读都毫无问题，意思的表述也足够清晰。同席的细越先生在中国留学过，能流利使用中日英三语交流并帮忙翻译。我们操着三门语言外加手势，就这样讨论了《其惟春秋》的设计进度，以及未来的出版规划。</p><p>神保先生已经预先读过我发去的电子版规则。在看到实物样品并得知我们的测试量之后，他对我们的工作给予了很高的评价。得知我们从零开始做到现在的程度只用了不到三个月，他们也十分惊讶。</p><p>谈到投稿和出版，日本方面表示，游戏机制、内容、配件方案甚至市场前景都不成问题，主要的问题还是在于美术素材。《其惟春秋》有 116 张事件卡牌。参照 GMT 格式配置卡牌的话，就会需要 116 张对应的插图素材。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/b23a911f1852012625a336fa1351ce24.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>参差不齐，而且数量也不够，例如「肉袒牵羊」「射王中肩」的场景画就死活找不到了</figcaption></figure><p>GMT 的古典战棋作品如《教改风云》《童贞女王》和《天主双王（Tanto Monta）》通常采用公版权（Public Domain）的历史图片作为卡牌插图，其来源包括人物肖像、场景画、书籍插图和文物/建筑照片等。中国历史的相关素材，在数量和质量方面，与欧洲有相当明显的差距。邱靖曾去过全国各地的省市级博物馆，我在设计期间也曾经在网络上多方查找。哪怕加上汉代的画像砖、明清小说的绣像，以及 Wikimedia Common 上的少数文博陈列，还是远远不能满足我们的需求。如果聘请美术、逐一绘制插画，时间和金钱成本又会过高。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/eb254e407f85a6bd07bdddfbdd46f6cd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>原始资料方面的差距，比设计水平的差距更大</figcaption></figure><p>游戏值得出版，但怎么解决美术资源的问题呢？我们在会议现场讨论了两个小时，没能想到很好的解决方案。</p><p>在周末的展会期间，我继续与神保先生做了一些讨论，并见到了 a-game 负责游戏地图设计的中尾要先生。按照初步计划，中尾先生将完成《其惟春秋》的各种版式和 UI 设计，但插图还是无法「内部解决」。因此，直到展会结束、我和邱靖各自回国，此事仍然未能定论。</p><p>（待续）</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/97056</id>
            <title>从 Pandoc 到 Quarto：纯文本学术写作的实践与优化</title>
            <link>https://sspai.com/post/97056</link>
            <guid isPermaLink="false">https://sspai.com/post/97056</guid>
            <pubDate></pubDate>
            <updated>Thu, 06 Mar 2025 09:40:17 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Quarto, 学术写作, Markdown, 中文排版

总结: 本文介绍了使用 Quarto 进行学术写作的经验和技巧，特别是针对中文学术论文的优化。Quarto 是基于 Pandoc 的开源科学出版系统，提供了更高效的学术写作工具，支持代码运行、交叉引用等功能。文章详细讨论了 Quarto 在中文写作中的挑战，如引号处理、参考文献排序、中西文混排等，并提供了相应的解决方案和工具。作者还分享了如何通过 Markdown 和 Quarto 实现多格式输出，强调了纯文本写作的优势，鼓励更多人加入纯文本写作的行列。 </div>
                        <hr>
                    
                    <p>本文参加年度征文活动「记录」赛道</p><hr /><h2><strong>前言：工具对了，事半功倍</strong></h2><p>学术论文写作是一项繁琐而严谨的工作，但却是科研工作的核心环节。写好一篇学术论文，不仅需要有大量的文献阅读和扎实的实证研究，还需要有严谨的理论分析和精准的表达能力。除此之外，「用什么工具写」也是一个非常重要的问题，选择合适的写作工具，往往能起到事半功倍的效果。</p><p>几年前，我曾分享过基于 <a href="https://sspai.com/post/64842">Markdown 写作并使用 Pandoc 转换的纯文本学术写作流程</a>，这篇文章是我在少数派发布的文章中点赞数量最多的一篇，时至今日仍能收到不少读者的反馈。这也从侧面反映出，学术写作工具与流程的优化，是许多同学和研究者的共同需求。时光荏苒，四年过去了，技术在不断更新迭代，开源社区也在持续贡献着新的工具和方案。碰巧的是，在我发布那篇文章的同一个月，RStudio（现已更名为 Posit）团队发布了 <a href="https://github.com/quarto-dev/quarto-cli/releases/tag/v0.1.13">Quarto 的第一个版本</a>——一个基于 Pandoc 的开源科学出版系统，进一步提升了学术写作的效率和体验。</p><p>对于熟悉我上一篇文章的读者来说，可能会有疑问：既然 Pandoc 已经足够强大且能满足学术写作需求，为什么还要重复造轮子，开发 <a href="https://quarto.org/">Quarto</a> 呢？这是因为 Quarto 在 Pandoc 的基础上提供了更多针对科学出版的功能和更加友好的使用体验。例如，Quarto 支持直接在文章中运行 Python、R 等代码<sup class="ss-footnote" href="https://en.wikipedia.org/wiki/Literate_programming" title="在大语言模型的加持下，这种类似于文学式编程（literate programming）的写作方式，能够让学术写作变得更加高效和自然。">1</sup>，额外支持交叉引用、参考文献预览、可视化编辑等，可以非常便捷地生成可重复稿件（reproducible manuscripts），可以说是更为理想的学术写作工具<sup class="ss-footnote" href="" title="值得一提的是，Quarto 命令行工具中包含 Pandoc，因此如果你已经安装了 Quarto，则不需要额外安装 Pandoc。目前 Quarto 正式版的最新版本是 1.6.42：https://github.com/quarto-dev/quarto-cli/releases/tag/v1.6.42，其中包括了 Pandoc 3.4。">2</sup>。</p><p>尽管如此，Quarto 也并非完美无缺。由于它主要是为英语写作开发的工具，对于中文写作的支持并不十分完善，比如中西文混排下的引号、空格，学术写作的参考文献排序、本地化字符等，都需要进行额外的配置和处理。在过去的一年，我全面转向使用 Quarto 来撰写包括期刊论文、学位论文、会议报告在内的所有学术相关的文档。从最初的摸索到后来的得心应手，这一路积累了不少实践心得，特别是针对多种输出格式的改进和中文写作的优化。本文将结合我过往使用 Markdown + Pandoc 的经验，分享我使用 Quarto 进行学术写作的技巧，实现通过一份 Markdown 源文件输出完美的 Word、PDF、HTML 和 ePub 等格式。</p><p>为了更好地方便读者使用 Quarto 进行中文论文写作，我在 GitHub 上开源了 <a href="https://github.com/TomBener/quarto-cn-tools">quarto-cn-tools</a> 项目，下文的内容也主要基于这个项目。</p><h2><strong>依然使用 Markdown 写作</strong></h2><p>Quarto 官方文档中提到，Quarto 文档（<code>.qmd</code> 文件）是 Markdown 和可执行代码块的结合，也就是可以直接执行代码的 Markdown 文件。尽管如此，Quarto 文档还是没有 Markdown 那样普遍，某些编辑器如 <a href="https://ulysses.app/">Ulysses</a> 无法在外部文件夹中读取 <code>.qmd</code> 文件。因此，为了尽可能在不同编辑器中保持兼容性，我依然选择使用 Markdown 写作。</p><p>为了充分利用 Quarto 的强大功能，在使用 Quarto 编译前，需要对 Markdown 文件进行一些预处理，同时将其转换为 Quarto 文档。之所以要这样做，是因为我主要使用 Ulysses 编辑 Markdown 文件<sup class="ss-footnote" href="" title="尽管 Markdown 编辑器层出不穷，但 Ulysses 依然是我最喜欢的 Markdown 编辑器，它的写作体验无出其右。">3</sup>，而 Ulysses 会将行内链接转换为引用式链接，尽管可以选择关闭这一选项，但为了原始 Markdown 文档的 <a href="https://sspai.com/post/77513">可读性</a>，我还是选择对 Markdown 进行预处理。此外，一般我会使用多个 Markdown 文件来组织论文，也就是将 <code>index.qmd</code> 作为主文件，<code>contents</code> 文件夹下存放各章节文件，减少各个部分相互干扰。但如果多个文件都有脚注的话，会出现重复的脚注编号，例如 <code>[^1]</code>、<code>[^2]</code> 等，尽管 Pandoc 提供了 <a href="https://pandoc.org/MANUAL.html#option--file-scope%5B">–file-scope</a> 参数来解决这个问题，但它在 Quarto 中 <a href="https://github.com/quarto-dev/quarto-cli/discussions/6333">并不适用</a>。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/45954b697b332b1535fa413a3b4b20b1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>在 Ulysses 中读取外部 Markdown 文件夹中的多个文件，并开启「创建引用式链接」选项</figcaption></figure><p>为了最大限度地保持不同 Markdown 编辑器的兼容性，我编写了一个简单的 <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_extensions/format-md.py">Python 脚本</a> 来预处理 Markdown 文件：</p><ul><li>随机化脚注编号，避免多个文件中出现重复的脚注编号造成冲突</li><li>将引用式链接转换为行内链接</li><li>去除中文引号中的换行符，避免在后续处理引号时出现问题</li><li>将 Ulysses 中的数学公式块转换为 LaTeX 的通用格式</li></ul><p>将文章中的各个章节拆分为多个 Markdown 文件是为了写作时更方便，但在转换为其他文件格式时，需要将其合并为一个单独的文件。为此，我们可以使用 Quarto 的 <a href="https://quarto.org/docs/authoring/includes.html">includes</a> 功能将各个章节的内容包含进来，例如在 <code>index.qmd</code> 文件中加入下面这几行：</p><pre class="language-markdown"><code>{{&lt; include contents/1-introduction.qmd &gt;}}
{{&lt; include contents/2-literature-review.qmd &gt;}}
{{&lt; include contents/3-methods.qmd &gt;}}
{{&lt; include contents/4-results.qmd &gt;}}
{{&lt; include contents/5-conclusion.qmd &gt;}}
</code></pre><p>如此这般，我们就可以将各个章节的内容整合在一起，形成一篇完整的论文。而在设置文档属性时，我们只需要在 <code>_quarto.yml</code> 中进行配置，而不必在每个 Markdown 文件中重复设置。这是 Quarto 在 Pandoc 基础上的一大改进，大大简化了复杂项目的配置管理。你可以参见下面的一个简单示例：</p><pre class="language-yml"><code>title: 用 Quarto 写作中文学术论文
subtitle: 一个简单的示例
author:
  name: Tom Ben
  email: email@example.edu
student-id: 1234567890
supervisor: 导师姓名
institute: 所在学校名称
major: 专业名称
date-format: "YYYY年M月D日"
number-sections: true
link-citations: true
toc: true
reference-section-title: 参考文献
bibliography: bibliography.bib
csl: _styles/gb-author-date.csl
execute:
  cache: true
  freeze: auto
  echo: true
  warning: false

format:
  docx:
    reference-doc: _styles/custom.docx
    template: _styles/custom.openxml
    filters:
      - remove-spaces
      - docx-quotes
    date: today

  html:
    template: _styles/html5.html
    date: 2025-03-06
    date-modified: today
    theme:
      light: [flatly, _styles/custom.scss]
      dark: [darkly, _styles/custom.scss]

  pdf:
    filters:
      - latex-quotes
    include-in-header:
      - _styles/custom.tex
    papersize: a4
    geometry: [margin=2.5cm]
    cite-method: biblatex
    biblio-style: gb7714-2015ay

  epub:
    epub-cover-image: figures/cover.png
    rights: © 2024--Present Tom Ben
    date: today

  revealjs:
    template: _styles/revealjs.html
    theme: _styles/metropolis.scss
    output-file: slides.html
    logo: figures/logo.svg
    citeproc: false
    toc-depth: 1</code></pre><p>可以看到，我们可以在 <code>_quarto.yml</code> 中为每种输出格式单独设置不同的参数，满足不同的需求，而其他元数据则会作为默认参数应用到所有输出格式中。关于 <code>_quarto.yml</code> 的详细配置，你可以参考我在 GitHub 上分享的 <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_quarto.yml">配置文件</a>，或者查看 <a href="https://quarto.org/docs/projects/quarto-projects.html">Quarto 文档</a> 了解更多信息。</p><h2><strong>中文学术写作优化</strong></h2><p>正如前文所述，Pandoc 和 Quarto 在中文学术写作环境下都会遇到一些棘手的问题，例如参考文献格式的中英文混排情况下的本地化字符替换、参考文献排序、中英文标点符号样式等。这些问题看似不起眼，但如果不加处理，会让论文的专业性和严谨性大打折扣，甚至影响论文的整体质量<sup class="ss-footnote" href="" title="对于本科或硕士学位论文来说，评审老师关注的焦点往往是论文的格式，反而可能对论文的内容和研究质量关注较少，特别是在论文答辩环节。">4</sup>。</p><p>此前，在使用 Pandoc 时，我也曾遇到过这些问题，但当时没有深入研究，只是通过一些变通的方法来解决。例如在生成 Word 文件之后，将其解压缩并使用正则表达式实现查找替换，但这种「简单粗暴」的方法有不少局限性，在不同格式下处理起来非常麻烦，也可能会在 Pandoc 或 Quarto 更新后失效。</p><p>去年，在撰写博士学位论文开题报告的过程中，借助大语言模型，我尝试通过编写 <a href="https://pandoc.org/filters.html">Pandoc filters</a> 来解决这些细节问题。在 Lua filter 和 Python filter 的帮助下，通过修改 Pandoc 的内部抽象语法树（AST），基本上解决了这些困扰多年的细节问题，为 Markdown 写作中文学术论文扫清了障碍。</p><h3><strong>中文参考文献字符本地化</strong></h3><p>国内期刊论文和学位论文广泛使用的《<a href="https://web.archive.org/web/20241130221212/https://journal.ustc.edu.cn/uploadfile/yjsjy/20161108/GB%20T%207714-2015%E4%BF%A1%E6%81%AF%E4%B8%8E%E6%96%87%E7%8C%AE-%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE%E8%91%97%E5%BD%95%E8%A7%84%E5%88%99.pdf">信息与文献 参考文献著录规则 GB/T-7714–2015</a>》第 15 页 10.2.2 节规定：</p><blockquote><p>正文中引用多著者文献时，对欧美著者只需标注第一个著者的姓，其后附「et al.」；对于中国著者应标注第一个著者的姓名，其后附「等」字。姓氏与「et al.」「等」之间留适当空隙。</p></blockquote><p>遗憾的是，Pandoc 使用 CSL（<a href="https://citationstyles.org/">Citation Style Language</a>）来格式化参考文献信息，但 CSL 不支持多语言的参考文献格式化，例如在 Pandoc 中将语言设置为默认的 <code>en-US</code> 时，所有文献的本地化字符都会被转换为英文，例如 <code>et al.</code>、<code>vol.</code>、<code>trans.</code> 等<sup class="ss-footnote" href="" title="这些字符是 CSL 的语言环境预先定义的，你可以在 CSL 的 GitHub 仓库中找到对应的中文翻译：https://github.com/citation-style-language/locales/blob/master/locales-zh-CN.xml 从中可以看到，`et al.`、`vol.`、`trans.` 对应的中文分别是 `等`、`卷`、`译`。">5</sup>。尽管 Zotero 中文社区提供了不少支持 <a href="https://zotero-chinese.com/user-guide/faqs/word-addon#%E4%B8%AD%E8%8B%B1%E6%96%87%E6%B7%B7%E6%8E%92">双语排版的 CSL</a>，但这需要在 Zotero 中进行语言设置。更关键的是，这种双语排版不是 CSL 的标准语法，因此 <a href="https://github.com/zotero-chinese/styles/issues/177">Pandoc 并不支持</a>，直接使用会有 <code>CiteprocParseError: Multiple layout elements present in citation</code> 错误。</p><p>为了解决这个长期困扰我的问题，我编写了一个名为 <code>localize-cnbib.lua</code> 的 <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_extensions/localize-cnbib.lua">Lua filter</a>，用于实现替换中文正文引用和文末参考文献表中的本地化字符，包括：</p><ul><li><code>et al.</code> 替换为 <code>等</code></li><li><code>vol. X</code> 替换为 <code>第X卷</code></li><li><code>trans.</code> 替换为 <code>译</code></li><li><code>ed.</code> 或 <code>eds.</code> 替换为 <code>编</code></li><li><code>ed.</code> 替换为 <code>编</code> 或 <code>X版</code></li></ul><p>当 Quarto 渲染文档时，这个 Lua filter 会在 Pandoc 生成引用之后介入，对文档的 AST 进行遍历，将上述字符替换为对应的中文字符。值得一提的是，<code>localize-cnbib.lua</code> 同时支持 author-date 和 numeric 两种引用格式，并且在 <a href="https://pandoc.org/MANUAL.html#other-relevant-metadata-fields">link-citations</a> 开启或关闭时都能正常工作。当然，上述替换只考虑了常见中文文献字符本地化的情况，如果有其他字符需要本地化，你可以自行修改 <code>localize-cnbib.lua</code> 文件，或者在 GitHub 上提交 issue。</p><p>需要注意，本项目中的 <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_styles/gb-author-date.csl">gb-author-date.csl</a> 和 <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_styles/gb-numeric.csl">gb-numeric.csl</a> 是我根据 <a href="https://www.zotero.org/styles">Zotero Styles</a> 网站下载的 CSL 样式文件修改而来的。与原始样式文件相比，修改之后的样式文件更加符合 GB/T 7714–2015 的标准，而 <code>localize-cnbib.lua</code> 也是根据这两个样式文件的格式来编写的，因此它可能无法正常工作在其他 CSL 样式文件上。另外，如果在 Quarto 中使用，无法在 YAML 文件中指定这个 Lua filter，只能在命令行中使用 <code>-L _extensions/localize-cnbib.lua</code>，这是因为 Quarto 目前 <a href="https://github.com/quarto-dev/quarto-cli/issues/7888">不支持</a> 在 <code>citeproc</code> 之后执行 Lua filter。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/14c0be56a03a695d8eb281669b87f0bb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>使用 <code>localize-cnbib.lua</code> 前后的对比，可以看到下图中中文参考文献的 <code>et al.</code> 被替换为 <code>等</code></figcaption></figure><h3><strong>中文参考文献按拼音排序</strong></h3><p>在著者-年份制的参考文献表中，中文文献一般需要按照拼音排序。基于 GB/T 7714–2015 的 BibLaTeX 样式包 <a href="https://github.com/hushidong/biblatex-gb7714-2015">biblatex-gb7714–2015</a> 支持使用 <code>biber</code> 对中文文献按照排序，但 Pandoc 使用的 <code>citeproc</code> 不能区分中英文作者，无法实现对中文文献按拼音排序。对于 DOCX 输出来说，只能在 Word 中打开 Pandoc 或 Quarto 生成的文件，然后点击「排序」功能选择拼音排序，但对于 HTML 和 ePub 输出来说，则基本上束手无策。因此，中文参考文献的排序问题一直是一个令人十分头疼的问题。</p><p>由于 Lua 语言没有完善的汉语拼音库，我选择使用 Python 语言来编写 <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_extensions/sort-cnbib.py">Pandoc filter</a> <code>sort-cnbib.py</code>，即利用 <a href="https://github.com/mozillazg/python-pinyin">pypinyin</a>来获取中文文献著者的汉语拼音，然后通过 Pandoc 的 Python 接口库 <a href="https://github.com/sergiocorreia/panflute">Panflute</a> 来修改 AST，实现中文参考文献按照拼音排序的目的。为了对多音字进行正确的排序，这个 filter 还对以下常见的多音字姓氏进行了特殊处理：</p><pre class="language-python"><code>def special_pinyin(text):
    # 多音字的姓氏拼音
    surname_map = {
        '葛': 'ge3',
        '阚': 'kan4',
        '任': 'ren2',
        '单': 'shan4',
        '解': 'xie4',
        '燕': 'yan1',
        '尉': 'yu4',
        '乐': 'yue4',
        '曾': 'zeng1',
        '查': 'zha1',
    }

    if contains_chinese(text):
        name = text.split(",")[0] if "," in text else text
        surname = name[0]
        return surname_map.get(surname, "".join([i[0] for i in pinyin(name, style=Style.TONE3)]))
    else:
        return None</code></pre><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/7d7738293daa6cbc4f81541dd8dfe786.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>使用 <code>sort-cnbib.py</code> 排序前后的对比，可以看到右图中中文参考文献的顺序被修改为按照著者的拼音排序</figcaption></figure><p>对于参考文献表中中文和英文文献哪个在前的问题，各个学校和期刊的要求不尽相同，有的要求中文在前，有的要求英文在前，<code>sort-cnbib.py</code> 默认英文在前，如果你需要将中文文献排在前面，可以将其中对应的代码修改为：</p><pre class="language-python"><code>def finalize(doc):
    doc.chinese_entries.sort(key=lambda x: special_pinyin(pf.stringify(x)))

    # Replace the Div container content with sorted entries
    for elem in doc.content:
        if isinstance(elem, pf.Div) and "references" in elem.classes:
            # 交换下面这一行代码中加号前后的顺序，可以改变中文和英文参考文献的顺序
            elem.content = doc.chinese_entries + doc.non_chinese_entries
            break</code></pre><p>需要指出的是，这个按拼音排序的 filter 仅适用于著者-年份制（author-date style）的引用格式，如果是纯数字编号形式（numerical style），参考文献本身就是按引用先后排序或编号大小排序，自然不需要额外调整。</p><h3><strong>中文引号的处理</strong></h3><p>中西混排之难，当以引号为首。引号的处理，是最让人头疼的问题，「万恶之源」在于是简体中文和英文使用相同的引号，但却要求呈现出不同的效果。具体来说，简体中文使用的引号 <code>“</code>、<code>”</code>、<code>‘</code>、<code>’</code> 和英语中使用的蝌蚪引号是完全一样的，但由于中文字符较宽，所以在排版时需要让包裹中文的引号看上去更宽一些，而包裹英文的引号看上去更窄一些，特别是在 Microsoft Word 中。正是由于这个原因，不少网友会使用繁体中文的直角引号 <code>「</code>、<code>」</code>、<code>『</code>、<code>』</code> 来替代简体中文中的蝌蚪引号，然而中华人民共和国国家标准《<a href="https://web.archive.org/web/20250126142548/http://www.moe.gov.cn/ewebeditor/uploadfile/2015/01/13/20150113091548267.pdf">标点符号用法</a>》规定简体中文的引号只有两组蝌蚪引号，因此在正式的学术论文中，一般不推荐使用直角引号。</p><p>在 <a href="https://github.com/jgm/pandoc/releases/tag/3.2.1">Pandoc 3.2.1</a> 之前，我使用 Lua filter 来处理 DOCX 输出中的中文引号，但它无法处理参考文献表中的引号。尽管有 AI 的帮助，但囿于自身代码水平的限制，我无法完全解决这个问题，只能向 Pandoc 的作者 John MacFarlane 教授提交了一个 <a href="https://github.com/jgm/pandoc/issues/9817">issue</a>。幸运的是，他采纳了我的建议，在 Pandoc 3.2.1 中为 DOCX 文件中的 <code>w:r</code> 元素添加了 <code>eastAsia</code> 字体提示，也就是为中日韩（CJK）文字添加了字体提示，以确保在包含中文字符的 <code>w:r</code> 元素中，引号会被渲染为宽字符，在 Word 中更宽一些（只是看上去更宽，实际宽度和英文引号是一样的）。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/50f30f1b9076e484605cbbd4fced2572.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Pandoc 3.2.1 及之后的版本中，Pandoc 优化了中文在 DOCX 中的排版，可以将包裹中文的引号渲染为宽字符，上图为 Pandoc 3.2 转换得到的 DOCX 文件，下图为 Pandoc 3.6.3 转换得到的 DOCX 文件</figcaption></figure><p>除了 DOCX 外，LaTeX 中的引号也是十分棘手的问题，这同样是因为 Pandoc 没有将中文和英文区别对待。在 LaTeX 中，英文单引号为 <code>`text'</code>，输出结果为 <code>‘text’</code>，双引号为 <code>``text''</code>，输出结果为 <code>“text”</code>。而中文引号直接使用 <code>“</code>、<code>”</code>、<code>‘</code>、<code>’</code> 表示就可以了。此外，对于 HTML 和 ePub 这两种格式来说，由于它们是基于网页排版的，所以需要使用直角引号 <code>「</code>、<code>」</code>、<code>『</code>、<code>』</code> 来包裹中文，因此也就不需要对正文进行处理，只需将参考文献列表中的蝌蚪引号转换为直角引号，确保全文引号使用一致。</p><p>为了解决不同文件格式中的中英文引号问题，我的解决方案是在 Markdown 中包裹中文的引号使用直角引号 <code>「</code>、<code>」</code>、<code>『</code>、<code>』</code>。这样做有两个好处：一是输入上方便明确，二是可以在纯文本里直观地区分出中文引号的语义范围。然后在输出不同格式时，通过以下三个 Lua filters 自动转换为对应格式下合适的引号：</p><ul><li><a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_extensions/latex-quotes.lua">latex-quotes.lua</a>：处理 LaTeX 中的引号，将中文直角引号转换为东欧语系的引号 <code>«</code>、<code>»</code>、<code>‹</code>、<code>›</code>（因为它们在中英文中基本上不会出现），然后在编译 LaTeX 时通过宏包 <a href="https://ctan.org/pkg/newunicodechar">newunicodechar</a> 将其转换为蝌蚪引号，并对标题中的中文引号进行特别处理，使其在 PDF 书签中 <a href="https://tex.stackexchange.com/questions/592335/wrong-double-quotes-in-pdf-bookmarks">正确显示</a>。</li><li><a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_extensions/docx-quotes.lua">docx-quotes.lua</a>：处理 DOCX 中的引号，将直角引号转换为蝌蚪引号。</li><li><a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_extensions/cnbib-quotes.lua">cnbib-quotes.lua</a>：处理 HTML 和 ePub 参考文献列表中的引号，将蝌蚪引号转换为直角引号。</li></ul><p>通过这一套方案，我们就可以让 Quarto 输出的 DOCX、PDF、HTML 和 ePub 都各自使用符合其格式的引号，即在 DOCX 和 PDF 中使用看上去较宽的蝌蚪引号包裹中文，在 HTML 和 ePub 中使用直角引号包裹中文，而英文引号则保持不变。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/e7a2f1d90f26e8ef4f8886691201358c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>在不同格式下，中文引号被转换为不同的样式，DOCX 和 PDF 中使用蝌蚪引号，HTML 和 ePub 中使用直角引号</figcaption></figure><h3><strong>中西文盘古之白</strong></h3><p><a href="https://github.com/vinta/pangu.js">pangu.js</a> 中提到：</p><blockquote><p>有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。</p></blockquote><p>尽管这是一句玩笑话，但添加「盘古之白」，也就是中西文混排时在合适位置留空，的确可以让版面更加 <a href="https://sspai.com/prime/story/markdown-linter-a-primer">美观易读</a>。尽管手动在中英文、数字之间加一个空格是一个 <a href="https://www.zhihu.com/question/19587406">好习惯</a>，但在实际写作过程中，难免会有疏漏，因此在排版时，我们需要借助工具来自动完成这个工作。</p><p>为此，我编写了一个 Python filter <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_extensions/auto-correct.py">auto-correct.py</a> 来帮助解决这个问题。借助 <a href="https://github.com/huacnlee/autocorrect">AutoCorrect</a> 的 Python 库，实现在 Pandoc 转换过程中自动检查并补全中英文、中文与数字之间应有的空格，并且还顺带做了一些常用标点符号、单词拼写的自动纠正，可谓一举多得。当然，你完全可以根据需要修改这个 filter，例如只补全中英文、中文与数字之间的空格，或者只补全标点符号、单词拼写的自动纠正，设置各个参数对应的代码如下：</p><pre class="language-python"><code>def load_config():
    # yaml-language-server: $schema=https://huacnlee.github.io/autocorrect/schema.json
    config = {
        # 0 - 关闭, 1 - 错误, 2 - 警告
        "rules": {
            # 在某些标点符号之间添加空格
            "space-punctuation": 0,
            # 在与 CJK 相邻时，在括号 ()、[] 与其之间添加空格
            "space-bracket": 0,
            # 在与 CJK 相邻时，在反引号 `` 之间添加空格
            "space-backticks": 0,
            # 在短横线 `-` 前后添加空格
            "space-dash": 0,
            # 转换为全角
            "fullwidth": 1,
            # 去除蝌蚪引号 “”、‘’ 两侧的空格
            "no-space-fullwidth-quote": 0,
            # 将全角字母数字转换为半角
            "halfwidth-word": 1,
            # 将英文中的全角标点转换为半角
            "halfwidth-punctuation": 1,
            # 拼写检查
            "spellcheck": 0
        }
    }
    config_str = json.dumps(config)
    autocorrect.load_config(config_str)</code></pre><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/bdecfdfd879ee6b448331d79ff69ea63.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>使用 <code>auto-correct.py</code> 自动添加中西文之间的空格并纠正标点符号</figcaption></figure><p>值得一提的是，在不同的输出格式下，对「中西文盘古之白」的处理存在着差异。对于通过 LaTeX 生成的 PDF 来说，用于中文排版的 <code>ctex</code> 宏包会自动处理中英文之间的空格，因此无需使用这个 Python filter。只有在转换为 HTML、ePub 等其他格式，才需要使用这个 filter。而对于 DOCX 来说，情况则比较特殊，这是因为 Microsoft Word 有自动调整中西文间距的功能。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/5ec2da62866d51f4412e67a292931cb1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Microsoft Word 中自动调整中西文间距的设置</figcaption></figure><p>因此，如果你习惯在 Markdown 中手动输入空格，那么在转换为 DOCX 时，请使用 <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_extensions/remove-spaces/remove-spaces.lua">remove-spaces</a> 这个 Lua filter 来移除中西文之间的空格。如果你不想手动在 Markdown 中添加中西文之间的空格，则在转换为 DOCX 时，无需进行额外的操作，交给 Word 自动处理就好。</p><h3><strong>中文自由换行</strong></h3><p>Markdown 中连续两个换行会生成一个空段落，而单个换行则会生成一个空格。对于英文写作来说，「一句话换一行」的写作方式是非常自然的，因为每个英文单词之间都有空格，但对于汉字之间不存在空格的中文来说则不同。在 Pandoc 中，我们可以通过开启 <code>east_asian_line_breaks</code> <a href="https://pandoc.org/MANUAL.html#extension-east_asian_line_breaks">扩展</a> 来忽略中文（也包括日文和韩文）段落中一个换行所产生的空格。</p><p>尽管 Quarto 是基于 Pandoc 开发的，但它并 <a href="https://github.com/quarto-dev/quarto-cli/issues/8520">不支持</a> <code>east_asian_line_breaks</code> 扩展。为了能够在中文写作时自由换行，用文字随心所欲地表达自我，而不用拘泥于是否应该在哪里换行，基于 <a href="https://taoshu.in/unix/markdown-soft-break.html">涛叔</a> 的博客文章，我编写了一个 <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/_extensions/ignore-softbreaks/ignore-softbreaks.lua">Lua filter</a>，在 Quarto 中模拟 Pandoc 的 <code>east_asian_line_breaks</code> 扩展。需要注意的是，这个 Lua filter 假设文档中只包含中文和英文，判断中文的条件也十分简单粗暴，即「如果字符串不是 ASCII 字符，则认为是中文」。因此，如果你的文档中包含其他语言，可能会出现问题，不过对于中文学术论文来说，这个 Lua filter 还是适用的。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/06/5d1c3218ba0824e8390e6471f2dac186.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>在 Quarto 中使用 Lua filter 模拟 Pandoc 的 <code>east_asian_line_breaks</code> 扩展，左侧为 Markdown 源码，右侧为转换后的 HTML 文件，可以看到标点符号后单个换行被忽略</figcaption></figure><h2><strong>结语</strong></h2><p>本文分享了我使用 Quarto 写作论文的一些经验和技巧，以及一些相关的工具，尽管不能面面俱到，但希望能帮助你更好地使用 Quarto，特别是针对中文学术论文的写作。在 GitHub 上开源的项目中，除了以上介绍的技巧外，还有其他的一些实用工具，等待你去发掘。比如生成参考文献的反向链接、移除 DOI 超链接、生成带水印或适合打印的 PDF，以及使用 Quarto 制作 <a href="https://revealjs.com/">reveal.js</a> 幻灯片等。限于篇幅，无法一一介绍，感兴趣的读者可以自行探索。</p><p>需要指出的是，与相对稳定的 Pandoc 相比，Quarto 仍在积极开发中，很多功能还有待完善。比如目前它不支持在 <code>citeproc</code> 之后执行 Lua filter，这导致与处理引用相关的 filters 无法通过 <code>_quarto.yml</code> 配置文件来调用。为此，我采取了折中的办法：借助 <a href="https://github.com/TomBener/quarto-cn-tools/blob/main/Makefile">Makefile</a>，通过命令行来执行脚本。不过好在 Quarto 的开发者们已经意识到了这个问题，并将其加入了版本 <a href="https://github.com/quarto-dev/quarto-cli/milestone/15">1.7</a> 的更新计划中，相信未来这一问题会有更加优雅的解决方案。</p><p>2024 年是人工智能狂飙突进的一年，人们越来越依赖大语言模型进行内容消费和创作。为了让互联网更好地兼容 AI，Markdown 越来越受到人们的 <a href="https://p.migdal.pl/blog/2025/02/markdown-saves">青睐</a>，有人甚至提出了使用 <a href="https://llmstxt.org/">/llms.txt</a> 文件来提供信息，帮助 LLMs 更好地理解网站内容。事实上，纯文本不仅对 AI 友好，对人类来说也是更高效、更灵活的写作方式。我一直在中文互联网上推广用纯文本进行学术写作的理念，起初只是出于对 Word 和 LaTeX 的不满，想要找到一种更符合自己习惯的写作方式。从 Pandoc 到如今的 Quarto，依然还是使用 Markdown，我的纯文本学术写作之路走过了探索、实践、再完善的循环。</p><p>在 2024 年全面应用 Quarto 写作论文的过程中，我深切体会到工具的进步为创作带来的便利和乐趣：写作时只需关注文字本身，不再为排版琐事分心，转换格式时不再焦头烂额地处理兼容问题，论文的结构和样式也更易于维护和迁移。当然，我并不是鼓吹花时间折腾工具胜过打磨内容。恰恰相反，只有当我们不再花时间折腾形式上的排版，才能有更多时间去思考内容本身，兼顾效率与体验，从而产出更高质量的学术成果。学术写作之难，难在如何清晰准确地传达思想，但愿我们的工具箱不断丰富之余，写作的初心不变：让技术化繁为简，助力思想闪烁光芒。期待在不远的将来，看到有更多人加入纯文本写作的行列，分享你的故事和成果，而你的写作实践，又将成为下一年别人眼中的经验和灵感。祝我们在创作的道路上共同进步。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96863</id>
            <title>为什么笔记用户要保卫自己的「数字主权」？</title>
            <link>https://sspai.com/post/96863</link>
            <guid isPermaLink="false">https://sspai.com/post/96863</guid>
            <pubDate></pubDate>
            <updated>Thu, 06 Mar 2025 02:28:07 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 语雀故障, 数字主权, 笔记数据安全, 开源格式

<br>
<br>
总结: 文章讨论了语雀平台发生的P0级故障及其对用户的影响，强调了数字主权的重要性，即用户应完全掌控自己的数据。作者提出了使用开源格式和多端备份来确保笔记数据安全，并探讨了纯文本格式在数据利用和创新方面的优势。文章还提到AI技术对知识库的潜在影响，建议用户采用开源纯文本格式以充分利用新技术。 </div>
                        <hr>
                    
                    <p>2023年10月23日对语雀来说不是平凡的一天，那一天语雀发生了P0级故障，在长达8小时的时间里，所有用户都无法访问自己的文档。不过好在语雀团队很快就修复了故障，并且全过程没有任何数据丢失。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/e8de2bef647e63de9ae0e84092d02bf4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>那一天我正在试图写一个短综述，然后我就发现我那些写在语雀上面关于「模糊理论」和「证据理论」的笔记无法访问了。由于当时ddl已经逐渐迫近，笔记丢失属实给我造成了一个不小的麻烦。后来服务恢复之后，我找回了所有数据的同时，感叹还好10月23日并不是一个非常着急的时间点；否则到了ddl的时候我那些作业报告突然访问不了的话那麻烦就大了。</p><figure class="image ss-img-wrapper image_resized" style="width: 368px;"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/d663a971775a93c6b8eb276ae863bf26.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>处理完故障之后，语雀仍然是一个优秀的云笔记软件。由于其既做到了支持各种各样的格式（比如数学公式、复杂列表），又十分方便分享，所以我至今也还在用语雀写一些共享文档。但是这件事之后我不由得开始注意一些问题：</p><ul><li>我们该如何保护笔记这样的数字资产永远牢牢地被掌握在自己手里、可以时刻访问到呢？</li><li>如果灾难性的故障再次出现，我们怎么做才能避免不可逆损失发生？</li></ul><h2>掌握「数字主权」</h2><p>每个大国都会强调掌握「数字主权」的重要性，每个人其实也一样。在劳动不断贬值的今天，我们身上最有价值的其实是塑造了我们个体的那些知识。不过如今大多数人对于保障这些东西始终为自己所掌握非常不在意。以我自己的资料为例：</p><ul><li>中学时期的日记本：有助于了解青春期塑造了自己性格的那些因素，可以大大帮助如今的自己分析自身的心理以及情绪问题；但是由于写在了纸质日记本上，毕业之后已经全部丢失；</li><li>大学时期的日记本：写在了手机便笺上；由于手机偶然遭遇了毁灭性损伤，数据已经无法恢复；</li><li>中学以及本科的几乎全部笔记：高中和本科知识属于大众共识，在高中知识的基础上写文章介绍新概念能轻易做到「深入浅出」，很有价值。但是一样由于是纸质笔记本，这些内容也慢慢丢失了。</li></ul><p>意识到这些不知不觉的损失之后，我推进了各种笔记记录的数字化，来解决纸质资料容易散佚的问题。而这个过程中就不可避免地接触到了许多笔记软件，并且引出了一个问题：</p><ul><li>你在各种笔记软件中写作的内容，真正属于你自己吗？</li></ul><p>按照普遍共识和大多数国家的法律来说，<strong>用户创作的内容是无可置疑地属于用户本人的</strong>。但是实际上，用户能够多大程度上掌控自己所有的数据却是一个问题。其中最典型的例子就是大多数笔记软件的笔记导出功能不如人意。</p><p>大多数商业化的笔记软件都希望增加用户粘度，尽可能让用户留在自己的平台，因此即使主观上并没有通过阻止用户迁移笔记来提高留存率的企图，它们也必然没有动力花费大量成本优化笔记导出这样的功能，这就导致了各种笔记软件普遍上存在「导入容易，导出难」的情况。有用户给这种特点的笔记软件取了个名字叫「电子貔貅」，很形象地展现了当前现状。</p><p>「电子貔貅」本身不是问题，问题在于笔记软件的经营状况无法预测。对于云笔记用户来说，没有人知道下一次大故障会不会发生在自己很需要这些资料的某个关键节点；也没有人知道如果数十年后还需要这些笔记，那么自己用的软件能不能经营到那个时候。而不巧的是，知识库以及知识管理就是一个长线投资，需要按年计数的积累之后才会产生效益。而知识复利的前提，是你的知识库不会突然归零。没有人能忍受自己数年心血面临一朝毁于一旦的风险，因此<strong>掌握完整的「数字主权」，避免自己的内容被软件垄断，是知识管理的必选项</strong>。而掌握完整的「数字主权」，就意味着：</p><ul><li>数据不被软件产品绑定：不能出现「离开了某个软件的服务，数据就无法使用」的情况；</li><li>数据不被硬件绑定：不能由于硬盘等设备损毁就导致数据永远丢失；</li><li>用户使用数据的方式不受限制。</li></ul><p>在文章接下来的部分，我会从笔记数据安全与利用两个方面讲述我在掌握自身数字主权方面的探索以及经验。如果你有相关的见解或者经历，欢迎在评论区探讨。</p><h2>笔记数据安全：开源格式+多端备份</h2><p>保证笔记数据安全，首先需要保证笔记数据存在。设想一个最坏的情况：一个笔记软件会将你的笔记以独特加密格式保存且不支持导出，那么用户不仅会丧失和笔记软件公司议价的筹码，还会承担软件公司破产、故障导致笔记数据完全丢失的风险。我们要做的就是反其道而行之：</p><ul><li>加密格式👉开源格式；</li><li>不支持导出👉可以完美导出为受广泛支持的格式。</li></ul><p>大多数开源格式本就属于受广泛支持的格式，比如docx、pdf都是这样的格式。考察完这两点之后，我们接着考察「生存率」，既<strong>笔记在若干年后仍然可以正常使用的概率</strong>。作为个人而言，我无法预测30年后还有哪些笔记产品在持续运营，也不知道那时候还有哪些数据格式常用。但是我们有一个众所周知的普遍公理：</p><blockquote><p>一个在50年前就存在，而且现在存在的事物，<strong>大概率</strong>50年后也存在。</p></blockquote><p>从现在开始，把时间往前推50年，那时候是1975年。当时的计算机几乎唯一能处理的格式就是<strong>纯文本</strong>。反过来，我们可以大胆地假设50年后的2075年，纯文本大概率也仍然是广受支持的格式。因此同样是开源格式，以markdown、asciidoc为代表的资料的生存率就要高于PDF资料；PDF资料的生存率会高于和软件绑定的私有格式资料。这可能也就是为什么arXiv不仅要求作者提供PDF论文文件，还要求LaTeX源码的理由之一。</p><p>我个人则选择拥抱了markdown纯文本笔记作为我知识库的基本载体，理由之一便是markdown可以在无需渲染的情况下直接作为纯文本阅读，并且是受广泛支持的文件格式。这样的话我的笔记可以在保持高生存率的同时最小化笔记对软件产品的依赖，保持其作为数字资产的独立性。</p><p>使用开源格式书写笔记可以帮助你摆脱软件产品的限制，但是比软件限制更加致命的是硬件损坏这类小概率突发事件导致的损失。如今主流使用的SSD固态硬盘虽然存取速度快，但是其损坏后数据极难恢复。如果你费心写了几年的笔记都存储在一块固态硬盘上，结果却意外损坏了固态硬盘导致所有付出毁于一旦，这会比被软件限制导出更加令人难以接受。因此<strong>我建议每个人都务必好好考虑一下数据备份的问题</strong>，千万不要因为省小工夫而承担大风险。</p><p>我在这方面犯过的最大错误是因为手机损坏而失去了我的密码本，导致我大量互联网账号无法登录。我当时至少花了一整天时间不断收发验证码来找回密码。即使如此，有很多账号还是遗漏了，我还是会在很多着急的时候发现找不到登录用密码，被迫按着性子现场找回密码。</p><p>云笔记用户有云笔记公司为他们考虑备份方案，代价是要接受云笔记软件对笔记的限制；本地笔记用户则需要自己考虑备份问题。我比较建议<strong>使用多端同步实现备份</strong>，即在每台设备上都维护一个副本，然后在彼此之间同步所有的修改。这不仅解决了备份问题，还一石二鸟地完成了同步配置。</p><p>我的做法是使用Git将笔记数据在电脑、手机以及Git服务器之间三端同步的同时实现备份。每一台设备发生损坏导致数据丢失都是小概率事件，三端同步则意味着数据丢失的概率降低到了小概率的三次方水平。在工程学上，导致工程出现问题的小概率事件是必须防范的；但是需要两个小概率事件同时发生才会出现的问题则不会浪费资源去防范。<strong>因此，内外各有一台设备存储一个笔记副本即可认为安全</strong>，其他更多的措施（比如本地备份）就可以不必做了。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/8c8281a20933153410d5cdfae833a1a1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>笔记数据利用：纯文本的创新优势</h2><p>「数据主权」除了要确保用户的数据始终无法被剥夺之外，还需要确保用户可以<strong>按自己的想法不受限制地使用数据</strong>。这是经常被忽视的一个点，让许多人不知不觉就被软件功能限制了使用方式。</p><p>当前笔记流行的趋势是块编辑，既将文本分为若干块进行编辑。为了实现这一功能，许多笔记软件放弃了长期坚持的开源纯文本格式而转而使用私有数据格式。我个人而言并不喜欢这样的改进，因为这样会限制我们操作笔记，导致笔记的可玩性大大减小，不利于我们尝试新技术以及在知识复利方面的探索。</p><p>由于处理能力有限，过去所谓「知识复利」其实包含的内容并不多；但是在2022年大语言模型横空出世之后这一缺点迎来了改善。借助RAG系统（增强检索生成），大语言模型可以对知识库进行总结，充当你的「秘书」，通过检索笔记库的知识为你解决问题。这不仅极大的解决了过去旧笔记吃灰的问题，提高了笔记利用率；而且笔记越多其效果越好，前所未有地发挥出来了「知识复利」的力量。当前而言，比较火热的RAG笔记库系统是Google NotebookLM、腾讯ima；如果你喜欢自己部署开源模型，那么网易QAnything也是一个很好的选择。这些RAG系统的使用方法已经有许多文章介绍过了，在此不再赘述。下图是上传了我的软件工程笔记后使用QAnything实现知识问答的效果：</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/1cce447d0461bc2e475d82fa35f25e68.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>AI的进化毫无疑问会带来生产力上的革新，而个人笔记数据毫无疑问是能够大大增强问答效果以及保证个性化的高质量数据。然而，所有这些新兴知识库问答应用都只支持解析公开格式。这意味着<strong>如果你使用一些不开放格式的笔记软件，你将无法尝试上述这些新鲜东西</strong>。使用受限制毫无疑问是「数字主权」受损的标志。而随着技术爆发，在可见的未来内，不掌握数字主权的用户仍然会继续丧失越来越多吃螃蟹的机会。</p><p>在所有开源格式中，纯文本仍然是最适合AI解析、检索的格式。大多数RAG知识库问答系统都支持使用OCR解析将图像、PDF、表格等文件转为纯文本。但是这些数据和原生纯文本相比毫无疑问是要有一定损失的。因此在所有开源格式中，我仍然首推markdown、asciidoc、orgmode等纯文本格式，这样可以保证我们会是最先享受新技术带来进步的那批用户。</p><p>如果你和我一样，有一定的技术背景以及条件，也可以自己尝试从笔记数据中挖掘价值。比如尝试处理自己的笔记数据，构建一个监督微调数据集，训练专属于自己的大模型AI：&nbsp;</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/b9c10d8cfc0dcb951ac93d420f461969.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>处理过后的数据：&nbsp;</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/c18eca369b6e39d8162dc1eb9a154ba6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>通过知识库训练专属AI仍然属于一个在探索的项目，还需要时间去推进完成，故在此不过多着墨。如果你对这个项目感兴趣可以关注我的账号持续获取进展。</p><h2>结语</h2><p>数字时代已经开启，数据开始成为重要的生产要素；AI技术的爆发更是把用户的个人知识库变成了一笔可观的数字资产。在这种情况下，保证自己的数据被自己掌控，维护自己的数字主权就成了一件必须重视的事情。</p><p>维护自己的数字主权不仅要保证自己的数据不被平台垄断，还要保证自己对私有数据对使用不受限制。为满足这两个要求，我首推知识库使用开源纯文本格式+本地多端同步存储的方式。这样不仅可以保证数据安全，还能让我们在AI时代率先体验新技术带来的进步。</p><p>我是@西郊次生林，一个致力于通过更好的管理实现个人进步的SE研究生。希望我的分享能对你有所帮助。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/97036</id>
            <title>写在个人管理方案的第七年：我收获的转变</title>
            <link>https://sspai.com/post/97036</link>
            <guid isPermaLink="false">https://sspai.com/post/97036</guid>
            <pubDate></pubDate>
            <updated>Wed, 05 Mar 2025 14:07:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 个人管理, 工具选择, Notion, 长期主义

<br>
<br>
总结: 本文作者回顾了自己在少数派的创作历程，强调了自己以年为单位写文章的习惯和长期主义的生活方式。作者分享了自己在个人管理方面的经验，从2019年开始，经历了多个版本的优化，最终选择了Notion作为主要工具。作者提出了“让好工具找到你”的观点，强调工具应与使用者的思维习惯契合，而不是盲目追求所谓的“好工具”。通过Notion的使用，作者实现了从线性思维到网络思维的转变，并利用Relation功能创建了一个复杂的个人管理网络。最后，作者展望了未来的职业方向，强调了持续做一件事的意义。 </div>
                        <hr>
                    
                    <p>本文参加年度征文活动记录赛道。<br />&nbsp;</p><p>在写这篇文章的时候，回头看了看自己在少数派的创作。</p><p>第一次发表是在2021年，标题是《在少数派迎接我的下一个三年》。果不其然，一写就是三年，也一直写到了现在。</p><p>正如我的个性签名：在少数派喜欢以年为单位写文章。其实不止是写文章，我做很多事情都喜欢这样，比如我现在用的设备，还是那篇文章里提到的：MacBook Air 2014，AirPods 一代；再比如我现在用的App，也还是flomo、小宇宙、Fit journey……算是一种长期主义吧。</p><p>个人管理也一样。从2019年开始，在2021年第一次写下对自己个人管理方案的总结，接着在2022年继续对其进行了优化。同年末我辞掉了工作，进入Gap。在这段时间里，我在学习如何生活时重新审视了「个人管理」：它在创造和表达什么？</p><p>下面是我得到的答案，也分享给你。</p><h2>工具</h2><p>在讲具体方案前，先来分享工具。</p><p>2021年我的个人管理方案版本是1.0，所用到的工具是石墨文档+Trello，前者是用来画思维导图，即方案的框架——个人管理的范围及对应的目标；后者是用来记录Routine，即每天对方案的实施，并形成了个人管理的看板，也可以看到任务事项的完成状态和时间状态；同时我还搭配了flomo，随手记录所思所想。</p><p>2022年来到了2.0版本，对方案的架构做了优化，工具不变。</p><p>2022年末我重新用上了Notion，个人管理方案来到了2.1、2.2、2.3和3.0版本。</p><p>工欲善其事，必先利起器。这句话听起来有点老生常谈了，特别是在少数派这个环境里，我想大家都很善于挑选“利器”，然后把它分享出来。所以在这里，我想提供的角度，不是推荐Notion这个工具，而是「<strong>让好工具找到你</strong>」。</p><h3>转变1：让好工具找到你。</h3><p>一开始我写道，在做个人管理方案的时候，我尝试过很多工具，其中就包括Notion，但我没有用它，因为对当时的我来说它很复杂，不趁手。我选择了更好驾驭的工具。</p><p>这里的“好驾驭”是指，这个工具的用法是符合使用者当下的思维习惯的，也可以理解为契合。就像一份工作之于一个应聘者，一个恋爱对象之于一个追求者。如果两者不对等，再怎么苦苦追求，看多少教程去学习也无异于浪费时间。</p><p>比如我选择石墨文档，是因为我的思维习惯是：用思维导图的形式把一个东西画出来。既可以解放我的大脑，又帮助我理清了思路。作为一个INFJ人，我脑子里的想法太多了，如果不把它们写出来，会很痛苦，同时这种写还得是有条理的。</p><p>选择Trello的理由更多是和我当时的工作有关，产品经理也得管项目进度，管天管地吧，什么都得管起来。它是一个我熟悉的工具，没有门槛，不需要学习，也不会增加我管理的复杂度。</p><p>好工具是会和使用者契合的，所以当我选择了这两个工具后，一用就是好几年。</p><p>而在我的生活发现变化，不上班了、什么都不管了的时候，我的思维也发生了转变。我首先感觉到的是每天要打开多个工具这件事很麻烦，<strong>为什么不在一个地方把事情做完呢</strong>？其次是我闲不下来，每天都想做点儿什么，比如写作、阅读，那我<strong>能不能把这些事都做得高效一点儿呢</strong>？</p><p>所以我选择了Notion。</p><p>从单纯地做一件事、两件事，到让做事变得更高效，对使用者来说这可能是一个自然而然的变化，但站在工具的角度，它可不这么看。比如我是一个文档类工具，我可以处理文字、数据类的任务，但你不能要求我做项目管理啊，那和时间有关。而在我这里，时间只是一个数据，不代表其他的了。</p><p>好工具是有包容性和可扩展性的，它能适应使用者的变化。所以当我从处理信息的思维来到效率管理的思维时，Notion可以承载，并且它允许我做得更多。</p><p>&nbsp;</p><p>说了这么多，什么叫「让好工具找到你」呢？</p><p>&nbsp;</p><p>这里其实有个思维的转变，<strong>它是从「我要找到一个好工具」转变而来的</strong>。</p><p>当抱着我要用上一个好工具，因为它能让我的工作和生活变得高效的想法时，重点是放在「好工具」上的。因为它是好工具，所以我要去适应一个好工具，甚至我要为了它而改变，好像这样就代表着那些好的东西、那些好工具所承载的东西，如高效的生活，富有创意的内容……这些前缀、标签都将发生在我身上。</p><p>曾经用iPhone代表着有品味和有经济能力，曾经用小米代表着屌丝，曾经看动漫代表着宅，曾经听摇滚乐代表着愤青<i>（如果这里你看不懂、这些词令你感到陌生，没关系，可能只是我们的年龄差距有点大）</i>……然而实际上呢，你不是工具。</p><p>让好工具找到你，<strong>重点放在「你」身上</strong>。你有怎样的思维习惯，你要用工具去解决什么样的问题，你喜欢在什么时间什么地点使用它……当你清楚自己的使用习惯时，可能都不需要去寻找，好工具就会出现。</p><p>比如你发现自己脑子里总是有很多想法，其中不乏一些有意思的灵感，这个时候你忽然想起了flomo，你听那个谁提起过这个应用。再比如，我自己的亲身经历，我一直很喜欢做设计，在当产品经理的时候甚至想过要不要转行去干UI设计，但令我感到苦恼的是，我完全不会用PS、AI这种设计软件，也尝试去学了但过程非常痛苦，直到我在少数派上关注了@leadream，偶然看到他分享了Figma这个工具，然后就去尝试了，没想到一用就上手了，当时真的感觉太棒了，怎么有这么适合我、这么好用的工具，不夸张地说，真的有种人生都被照亮了的感觉。</p><p>Figma是我在使用工具时的思维转折点。它让我意识到，使用者不必为工具所难，如果你觉得某一个工具很难用，甚至你要做的这件事只有这个工具，整个行业都在用这个工具，不必灰心，也不要放弃，把重点放在你身上，要相信只是好工具还没找到你。我们也知道，很多好工具也正是这样被创造出来的。</p><h2>方案</h2><p>回到我的个人管理方案。</p><p>在开始用Notion时，我首先要做的就是把之前的方案内容搬过来。对和我一样不是从零开始使用工具的朋友，要判断是不是该换到新的工具上，以及新工具是不是好用时，会涉及到的点就是在工具之间迁移。</p><p>这里的迁移不是设备之间数据传输，也不是复制粘贴，而是我能不能在新工具上继续做旧工具上做的事，类似于能不能用新瓶装旧酒。</p><p>如上所述，我个人管理方案的1.0和2.0版本并不复杂，当时主打的也是“零成本”和“无门槛”，主要功能就是搭建框架、设置目标和每日实践。</p><p>这三部分的功能都是可以迁移到Notion上的。</p><p>首先我建了一个database<i>（下图左侧）</i>，其中的页面就是个人管理方案的各个版本，在每个页面中我利用标题来突出显示这个版本的主要内容<i>（下图右侧）</i>：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/05/3ec73387a66c3a650f2c451972859a12.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我的方案列表页面截图</figcaption></figure><p>通过这样的方式可以让“框架”显现出来，因为我的目的是结构清晰，我要看到一个层级结构，所以只要能实现这点，就不必一定要长成思维导图那样子。</p><p>顺着这个思路，我还设置了一个「首页」，目的也是把当前方案中的重点内容突出显示出来，可以提示自己现在要做什么。同时，因为我把从前在两个工具上实现的内容都统一到了Notion，所以也需要一个统一的入口，通过这个入口开启每天的实践，开启更多的内容。</p><p>熟悉Notion的朋友其实可以看出来，这时我对Notion的使用还是比较初级的。因为它呈现的就是我当时的状态，记录和管理基本的任务，并没有产生更多的诉求。</p><p>完成了迁移后，我开始在Notion生产数据了：把自己的所思所想和生活都记录上去。这个时候，我还是沿袭了以往的线性思维，从一个单点到另一个单点，一对一的结构，以及上下级的层级结构。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/05/c8c819f3f2c2d903aa06935c04762458.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我的2.2方案页面截图</figcaption></figure><p>去年5月的时候，此时我的个人管理方案处于2.2版本，我看到朋友的Notion页面中用上“Relation”，也就是把两个页面进行了关联，是通过页面属性的Relation功能来实现的，这种关联的效果非常好，它可以帮助使用者从一对一来到多对多。这时，我感觉到自己对这个工具的开发还远远不够，以及我生产的数据足够多了，单一的处理方式对数据本身来说也是种浪费，它也无法帮助我走得更远，所以是时候进化了。</p><p>然后我开启了个人管理方案3.0版本。</p><p>首先当然是为什么。然后才是要做什么，以及怎么做。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/05/6f304e949b3bb41787bcb33921439ce5.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我的3.0方案页面截图</figcaption></figure><h3>转变2：让数据来创造。</h3><p>我开始搭建3.0版本时用了Notion模板库里的一个现成模板，它来源于《打造第二大脑》这本书，模板名字就叫“Second Brain”：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/05/d599a2bb92e20fb4c6998ee70e9f3b2a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>模板截图</figcaption></figure><p>因为前期的积累已经很丰富了，所以这个模板对我来说是很好上手的。我采用了其中“Area-Project-Notebook”的框架，即“领域-项目-笔记本”，以及往下延伸的“项目-任务”和“笔记本-笔记”的层级结构。</p><p>与我之前的个人管理方案差异点，就在于上面提到的Relation功能，即<strong>每个页面之间可以相互关联</strong>。比如笔记可以关联到一个任务，也可以关联到某一个项目，反之亦然。在Notion里，你可以自行选择是否开启双向连接，不开启的话，就是单向的。</p><p>&nbsp;</p><p>这个差异会带来怎样的变化呢？</p><p>&nbsp;</p><p>以我「Retrospect/复盘」这个项目来举例。是的，相信你也看出来了，我是一个非常喜欢做总结的人，在2.1和2.2版本里，我也把“回顾总结”放在以月为单位的每个页面里的，所以把复盘作为一个单独的项目就是顺水推舟的事。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/05/f83db3ca95150364649442404ecc25ca.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我的3.0方案内容页面截图</figcaption></figure><p>我会以周、月和季度的维度进行复盘，下图左侧就是已经完成的复盘。在3.0版本运行了一段时间后，我发现Relation可以带来一个东西。点开7月的复盘内容，也就是3.0版本运行的第二个月，下图右侧，我在纸上画了一个潦草的图然后贴了过来，这个东西就是<strong>「网络」</strong>。</p><p>随后的时间里，新的数据一直在产生，我还给Notebook增加了对应的事务，与Project有对应的Task是一样的思路。然后在10月复盘时，我发现能绘制出这样一幅图了：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/05/2a2db4f3abc66a0ae9f4a431c39cbadc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我的3.0方案内容页面截图</figcaption></figure><p>一个简简单单的关联功能，竟然有如此大的能量，它让我意识到了自己思维的又一次转变：<strong>从线性来到了网络。这个变化本身就是一种创造，是让数据来创造</strong>，我做的只是增加网络中的节点，即连接点，然后在节点之间划上线——完成“联网”的动作即可。每当我往个人管理方案中加新东西，就会看到这个网络又有了意想不到的，神奇的变化。</p><p>对身处互联网世界的你我来说，网络赋予了我们更广的空间，以及更大的想象力。这也是我2024年最大的发现，原来，网络世界是这样搭建起来的；原来，离开了单一的线性思维，世界会变得如此丰富多彩。并且，它的成长速度是惊人的。</p><p>&nbsp;</p><p>以上，就是我在Gap的第二年，利用Notion做个人管理方案得到的一些收获：对工具的认识，以及创造一个个人管理方案，并让其自行生长。在这个过程，我觉得它在表达我，也在创造自己。</p><h2>最后</h2><p>2025年是我进行个人管理的第7个年头，我结束了Gap，开始探索新的职业方向，暂时还没有清晰明确的定义，没有岗位名称，没有所谓的职级，前路未知。而正因为它不被定义，所以这条路是敞阔的。我也相信，时间看得见，看得见当一个人持续做一件事后会发生的转变，也看得见这件事本身就是意义。</p><p>那么，一如既往，我们就相约明年见吧。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96943</id>
            <title>Geek 人生需要多少体系？</title>
            <link>https://sspai.com/post/96943</link>
            <guid isPermaLink="false">https://sspai.com/post/96943</guid>
            <pubDate></pubDate>
            <updated>Tue, 04 Mar 2025 15:07:22 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 极客, 体系, 自我养育, 效率

<br>
<br>
总结: 本文探讨了作者作为极客爱好者对效率、体系和自我养育的追求。作者通过构建个人体系来应对生活中的混乱和未知，强调体系不仅是工具，也是对抗恐惧的手段。文章反思了极客行为对个人成长的影响，认为体系化的目的是为了在混乱中找到秩序，同时保持创造力和灵活性。最终，作者认为极客生活的核心在于在秩序与反抗之间不断寻找平衡。 </div>
                        <hr>
                    
                    <p>「本文参加年度征文活动[记录]赛道」</p><p>我作为geek爱好者，通常对外宣称自己过着一种井然有序的的生活。</p><p>看视频看书的最爱题材之一就是“效率”“生产力”，喜爱的词汇有复利、体系、流、自动化。这都是一些诞生在资本主义文化背景下的词汇，强调效率，追求高生产力和个人创造力。</p><p>我时而深陷其中，时而敬而远之。</p><p>我这两种状态的切换通常和我“是否选择要认真or努力生活”的心境有关。是的，即使热爱如我，也因人类懒惰天性而做不到对“流”的追求。这个“流”有很多延伸，工作流、信息流、时间流，从工作效率到信息暴露一应俱全，真的，我超爱。</p><p>我不但喜爱书籍分类，而且从载体的不同就在一开始分为了纸质和电子，再从学科到二级分类，所以当我知道日本有一个学科叫“目录学”，我立刻陶醉其中，尽管分享者一再呼吁发问“基础入门的东西如此唾手可得之后，谁来提供深刻的东西？”我自然知道这是一个富有哲理，而且深刻的问题，但我不在乎，在我20几岁，还没有充分把自己人生分为无数geek小块之前，构建自己的体系，比这些更需要花费时间的问题，更能吸引我的兴趣，以至于搭上我近乎力竭的努力。</p><p>所谓近乎力竭，可能是夸张，这股夸张我想不是我青年时代的傲慢，而是我身为女性对自己的格外偏爱。无数英文学术做了数以万计的性别比调查，还是承认了残酷且让人吃惊的事实：2025年，女性在获得权力方面依旧面临比男性更大的阻力。我更要用简体中文强调对自我的关怀。大部分研究是英语世界的，多为白人研究对象。我的重心不在于思考“英语世界是否是更主流的世界”或者“白人女性是否是这个世界最不易受到挫折的女性”，而仅仅只是参考数据案例和实验结论，以期待能进行更好的自我养育。</p><p>没错，我如此极客，是为了进行更加私人化、“不宜超越他人为目的，但以超越他人为结果的”，自我养育。</p><p>我是否成功了？</p><p>或许有，或许没有。</p><p>因为当我和自己的笔记本电脑签下契约的那一刻开始，其实要比较的人，就只有自己了。同龄人中大家美妆拍照旅游学术，很少有人像我这样醉心与什么体系搭建，嘟囔着“流”和个人站。我也常常在想，我所谓的个人博客、非功利写作，在除了回应那些“要开源要开放”的互联网古者的呼唤以外，是不是一种作秀？我觉得可能没这么夸张，这一切的确不容忽视的改变了我的自我认知和人格特点，我成为极客的路上有着各种利弊，但最终目的都是进行自我养育，这响应了心理学，至少还有求知欲，那大的方向就没有问题。</p><p>只不过有一些小挫折和 little problemsssss.</p><p>所以geek 人生需要多少体系？</p><p>我本来是想问“geek 比普通人，额外追求了哪些体系”，但我觉得 geek 可能仅仅只是一种属性，而非一种身份或职业。</p><p>因为所有的极客都必须依托于自己的现实生活，进而进行所有 geek 活动。因为人类的现实生活都会有重合的部分，所以这部分的系统进而就可以进行交流和传播。例如个人藏书的整理分类，纸质书笔记如何电子化，肉身远走他乡如何进行便利的数据访问…从学习类的可以延展到生活，比如我的 50 块腮红怎样分类，我的 13 瓶粉底液如何依据季节和皮肤性质怎样在最佳使用日期内循环摆放，既不增加负担又可以对持有物进行最大限度且合理的消耗，让我做到购买和消耗的平衡，从而躲避“是否患了仓鼠囤积症”的精神焦虑。</p><p>大部分 geek 属性都会对应一个需求：学习。</p><p>这无论是出于自身职业发展的客观需要，还是个人终身学习的愿望，geek 分类都会很大程度上提升生产效率，增强产出。</p><p>所以很重要的一个体系就是：输入-输出-产出。</p><p>这个体系在英语分享者那里进行了无数的变体和分化，输入又叫 input，从媒介开始分为了视频纸质书电子书博客播客，输入之后的下一步有的人认为也要分类出来，成为整合，也叫 organize，就是说如何整理这些输入。有 RSS 订阅，有个人 nas 系统安装或者基于应用市场里的各种主流的或者小众的 app 进行乐高搭建。</p><p>以上这一切，仅仅是我们获取的部分，那我们如何内化？这就又会被继续分类，从“第一次提炼”到“笔记”，再到最后形成可以享用至八九十岁的“第二大脑”（期待所有 geek 都能长寿，以尽可能的为延续高质量人类文明添砖加瓦）。所以这不仅仅是我一个人人的游戏，这一直都是共享智慧的一部分，这一层面上，或许是超越我私欲的永生。</p><p>内化之后才是产出。我准备output 什么东西？文字？视频？声音？准备如何利用传播学在私域或者公域内进行小范围沟通，怎么保证自己利他的同时不失利己的本质？</p><p>当geek 好难。</p><p>因为人生还不止有 geek 的任务，尤其是你想要构建一个私人定制的“流”或者“体系”需要大量的调研和对别人案例的观察了解分析，你就是你自己的市场部经理。<br />在自己的世界里承担着市场部经理的工作量，最高级的工资可能是心流带来的突触内外正负电极改变，带来一些自给自足的幸福感。</p><p>设立各种体系其实就是“带着镣铐跳舞”，它身为体系的稳定性一定程度需要运维精力，如遇突发状况则会受到断裂或者空白，需要再体系建立之初额外模拟突发状况的体系运维压力。当然，应对 geek 运维压力的最好方式就是“放过自己”，用我自己的话说就是“再次重新做人”。就本人而言，虽物种为脆弱坚强生命只有一次的智人，但精神层面早已历经无数浴火重生。</p><p>混乱不可避免，对于 我的极客生活来说，混乱能带来新的灵感，其实这本身也是一种反抗体系和流水线哲学，顺带迎合了人类本性。我不断调整各种体系，优化的目的最终就变成了：每次能轻松的再次开始，就可以了。</p><p>有些事无法体系化，而有些事原以为无法体系化，但体系化后却带来了意想不到的效果。这句话很绕对吧，但这涉及geek 属性和真实生活的边界，所以还是来简单讨论一下。感情本身无法体系化，有的只是程度深浅，但没有办法被数据分解，这就是人类和各种人工智能的差异。但伴生的问题例如“人工智能的感情是不是真的”，陷入对数字智能感情的真假之辩是否有意义，都是科技人文领域需要额外研究的命题。衣柜电子化分类和日式搬家是近几年来我觉得让我眼前一新的“体系进入真实场景”的例子，即迎合了我对体系化的期待，也真实改变了现实世界，很不错。</p><p>这篇文章本质上是我的个人困惑梳理，我试图从个人与文化拓展到技术与社会来反思我二十几岁花在“成为 geek”这条路上的努力与坚持。</p><p>最后，geek 需要多少体系？这可能是一个没有办法被准确回复的问题。所有体系和 geek 行为都只是手段与工具，用来对抗我们内心对于混乱和未知的恐惧。我们每一条试图留下的笔记和碎片知识，都带着对更好未来的期望和控制。但生活本身不只是秩序，它还包含偶然、矛盾、情感与非理性。</p><p>我曾经一度认为自己人生的意义就是设立私人定制的体系然后用以应对千变万化的世界，但后来发现，所谓无招胜有招，也符合这赛博武林哲学。这些体系让我能在失控时尽快再次开始，能努力时可以和所有时空的自己向一个方向做功。原来体系是让混乱有迹可循，而我经历的混乱是为了让体系拥有意义。</p><p>所以，geek 如你，需要多少体系？<br />大概就是，能让我们持续前进，尽可能得跑更快，不至于花费时间寻找方向；但又不会设置既定路线，束缚所有的创意和想象力。</p><p>Geek 如我，此生可能只做一件事，就是在秩序和反抗之中，不断平衡。</p><p>一直尝试。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96629</id>
            <title>从科研民工到职场新人，理想与现实如何平衡</title>
            <link>https://sspai.com/post/96629</link>
            <guid isPermaLink="false">https://sspai.com/post/96629</guid>
            <pubDate></pubDate>
            <updated>Tue, 04 Mar 2025 05:44:25 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 实习经历, 职业选择, 大模型, 生活与工作平衡

<br>
<br>
总结: 本文作者回顾了2024年的实习经历，从华为到字节跳动，探索了工业界与学术界的差异。作者通过三次重要抉择，逐步明确了自己的职业目标，追求有影响力的工作。文章还描述了实习期间的生活状态，探讨了工作与生活的平衡问题，并反思了职业发展中的挑战与机遇。最后，作者表达了对未来方向的思考，强调超越与创新的重要性。 </div>
                        <hr>
                    
                    <p>本文参与年度征文活动「记录」赛道。</p><hr /><p style="margin-left: 0.0px;">2024 年，时间仿佛被拉长，经历了比以往更为丰富的体验。虽然这一年没写几篇少数派，但提笔总结时，却发现有太多感悟值得记录，一时竟不知从何说起。</p><p style="margin-left: 0.0px;">这一年，我依旧在探索，在挣扎，在寻找属于自己的<a href="https://sspai.com/post/86658" target="_blank">破轨之路</a>。</p><p style="margin-left: 0.0px;">作为一个计算机专业的博士生，我始终担心在实验室里闭门造车，最终做的工作与现实脱节。因此，今年我选择走出象牙塔，进入工业界实习，先后加入了华为 2012 实验室和字节跳动豆包大模型团队。这两段经历，不仅让我更坚定了自己的理想，也刷新了我对行业和自身的认知，促使我重新思考未来的发展方向。</p><figure class="image ss-img-wrapper image_resized" style="width: 414px;"><img src="https://cdnfile.sspai.com/2025/03/04/24ccbc504f905b2fe061ee72a2eb1a46.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>初入职场：新鲜感褪去后的体验</h2><p style="margin-left: 0.0px;">初到一个崭新的工作环境，总会带着一层滤镜，一切都显得很好。然而，当这层滤镜褪去，华为和字节的工作环境便呈现出截然不同的面貌，各有千秋。</p><p style="margin-left: 0.0px;">在华为的实习部门是 2012 网络组，属于预研部门，工作内容和校园里极其相似。朝九晚五，每天就在工位上思考算法，读读论文，码码代码。实习的研究课题隶属于校企合作项目，每周要向导师汇报项目进展，本质上更像是借华为的工位为实验室工作。</p><p style="margin-left: 0.0px;">正因如此，这份实习工作并没有超出我的舒适圈，随着时间的推移，我逐渐感到乏味。五月底，我将华为的工作总结成论文投出后，萌生了换个环境实习的想法。如今回想起来，只能感叹一句：小年轻就是闲不下来，非要找点苦吃。</p><p style="margin-left: 0.0px;">在我寻找新机会时，字节跳动的 HR 主动联系了我。尽管我对字节的印象是急功近利，缺乏探索性工作，不太适合博士生实习，但“字节和心脏只有一个能跳动”的传闻激起了我的好奇心。既然想给自己上点强度，何不直接挑战最卷的公司？于是，我就抱着试试看的态度接受了面试，并且最终拿到了 offer。</p><p style="margin-left: 0.0px;">我的实习部门是豆包大模型基础模型团队。入职前，我担心实习生只能做重复性劳动，但事实证明我多虑了。这里不像华为那样，对实习生和正式员工的区分不明显，我承担的工作与正式员工无异。由于从事基础大模型系统优化，几乎没有重复性劳动，反而常常一整天忙碌却毫无进展，因为完全是在无人区摸索，碰壁成了常态，甚至连求助都找不到方向。就这样，我如愿以偿地进入了“高强度”工作环境。</p><figure class="image ss-img-wrapper image_resized" style="width: 411px;"><img src="https://cdnfile.sspai.com/2025/03/04/a4c75e70c52b226521f230644c25713a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2><strong>以终为始：每一个分叉口的抉择</strong></h2><p style="margin-left: 0.0px;">这一年的经历让我深刻认识到，比埋头做事更重要的，是明确自己真正想要什么。只有目标清晰，周围的人才有机会「帮助」你实现它。</p><p style="margin-left: 0.0px;">上面的流水账或许让人觉得这些经历顺理成章，但在平行宇宙中，也许存在另一个选择了不同道路的我。而如今的我，之所以做出这些选择，是因为一直想「做出一项有影响力的工作」。</p><h3 style="margin-left: 0.0px;">第一次抉择：脱离科研舒适圈</h3><p style="margin-left: 0.0px;">将时间拨回到2023年底，我面临两个校企合作项目的选择，都和华为有关，但部门和研究课题截然不同。第一个课题是研究可编程网络的其他应用，旨在让计算机网络承担更多传输以外的职责。第二个课题则是研究大模型训练系统中的网络优化，这是一个热门但竞争激烈、门槛高的方向。</p><p style="margin-left: 0.0px;">从发论文的角度看，可编程网络方向更容易出成果，因为我有研究积累，并且是一个相对小众的方向。而大模型训练系统则更加热门，也更具挑战。热门往往意味着更大的影响力，没人看的论文不如不发。因此，我选择了第二个课题，踏入了大模型训练系统的领域。</p><h3 style="margin-left: 0.0px;">第二次抉择：向产业前沿跨越</h3><p style="margin-left: 0.0px;">华为2012虽然已经算是工业界，但是终究还是在公司里做科研，离真正的产业还是有一定距离。所以有时候看着各种大模型新闻，总是感觉自己还是局外人，总有一种想要入局的冲动。带着这样一个想法，我才开始寻找新的实习机会。</p><p style="margin-left: 0.0px;">微软亚研院，从大学本科开始就是我的白月光，也是我的首选公司。但是接触了几个老师，发现都不是我想做的方向。此时正值字节hr推进面试，面试官是我在海外师兄的同门。这个师兄在微软总部，面完之后，我在微信上询问了他关于微软和字节的对比。他说字节是一个有活力的地方，并且卡也很多，他的同门也是一个很nice的人，建议我去字节实习。在他的影响下，我最终选择了字节。</p><h3 style="margin-left: 0.0px;"><strong>第三次抉择：为理想接受代价</strong></h3><p style="margin-left: 0.0px;">我们实验室是不允许学生出去实习的。但我管不了那么多，一心想要逃离现状，并且认为如果我直接参与秋招，在大模型赛道上没有足够的竞争力。拿到实习offer后，还需要过导师这一关。我第一时间给导师打电话，表明自己想要实习的意愿。导师也很理解我的诉求，于是让我延毕一年出去实习。我接受了这个条件，因为我终于有机会去看看业界前沿的工作是怎么做出来的。</p><p style="margin-left: 0.0px;">也许是因为我尽早告诉mentor自己的想法，他没给我安排什么脏活累活，而是给我制定了一个偏长期的科研项目作为主要工作内容。组会的时候，我发觉现在的科研团队，各个都做出过受业内关注的工作，也算是误打误撞入局。</p><p style="margin-left: 0.0px;">在以上抉择中，只有明确的目标，才能让周围的人有机会「帮助」我：</p><ol><li>明确自己不想水论文，而是想做一些有意义的工作，实验室才能给我安排华为2012的合作项目，让我有机会接触最热门的科研方向。</li><li>明确自己想要参与专业的团队，做前沿工作，师兄才能给我合适的建议，最终来到字节，有幸结识了一群聪明且勤奋的同事。</li><li>同样明确自己想要做有挑战的事，而不是拿个博士学位毕业了事，才会接受延毕一年的代价。如果参与了当时的秋招，也许会仓皇地找一个工作，最终发觉自己并不喜欢它。</li><li>明确自己实习的目标是发表论文，mentor 才能给我制定一个偏长期的科研项目，并且在新的团队体验到了不一样的科研氛围和合作方式。</li></ol><h2><strong>人生切割术：重塑工作与生活的边界</strong></h2><h3 style="margin-left: 0.0px;"><strong>社会化的第一步</strong></h3><p style="margin-left: 0.0px;">没有在北京出租屋合租过，就不算北漂。一开始来北京实习的日子，和8个人合租了一个四室一厅。同屋合租的有一家四口，一对母子，一个同为字节的员工和另一个小伙子（住在储藏室）。</p><p style="margin-left: 0.0px;">这对母子就住在我隔壁，母亲应该是陪小孩在附近上小学。每天早上七点就会喊小孩起床。小孩喜欢赖床，他妈妈就会恨铁不成钢的教育他，然后就能听到母亲的打骂声混合着小孩的哭声。由于隔音不好，顺便就把我喊醒了。另一家人是带着婴儿的，深夜就能隐约听到屋子里传来孩童的啼哭声。不管白天出门还是夜晚回家，都能看到唯一的那个小伙子在合租房的客厅玩电脑。至于那个字节的员工，在合租的半年里，就在电梯里见到一次，还是后脑勺，只有在十一二点听到他房门转动钥匙的声音才知道他下班了。</p><p style="margin-left: 0.0px;">年底房子到期了，师弟也来北京实习了，就和他一起租了一间两室一厅。从居住体验来说，和熟人一起住一整间房固然最舒服，再也不用在上厕所之前做心理准备了。缺点就是生活快速地收敛到宿舍——公司两点一线的老状态。</p><p style="margin-left: 0.0px;">原先由于合租的屋子没那么舒服，即使是周末我也会尽可能地约人出去玩，而不是呆在家里躺着。而现在，我更喜欢周末在屋子里打一整天的游戏，完全不用担心扰民。</p><p style="margin-left: 0.0px;">合租的噪音就像副歌，让生活这首曲子完整。</p><figure class="image ss-img-wrapper image_resized" style="width: 551px;"><img src="https://cdnfile.sspai.com/2025/03/02/95da4f75f090f2dd423bd853bfd8fa06.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>北京的小屋</figcaption></figure><h3 style="margin-left: 0.0px;"><strong>公司人格的形成</strong></h3><p style="margin-left: 0.0px;">在最开始的新鲜感消除之后，工作对生活带来的负面影响逐渐占据上风。上一天班回到家里，总是会有些恍惚，明明早上刚打开喝了一口的水，感觉像是摆了一周没人动过。在家中的体验，完完全全的被工作割离出去，就像《人生切割术》。</p><p style="margin-left: 0.0px;">在公司里，我也感觉患上了失语症，吃饭的时候，即使内心想要聊一些工作以外的话题，也不知道聊什么。所以大部分时间和同事就是坐在一起默默无言地干饭。</p><p style="margin-left: 0.0px;">公司里的环境让人不得不时刻保持专注力，专注的越久，就越难再下班后回归生活。脑子像被一根绳子拽住，不停地思考工作中的问题。只能寄希望于另一根强有力的线把注意力给拉回来，唯有刷短视频，或者游戏能够抗衡。然后再过两个小时的缓冲，才能够静下心来看看书，准备睡觉。</p><p style="margin-left: 0.0px;">在这样的工作状态下，是能够具象地感受到自己的生命力被抽走。有时候想着今天没什么事，可以早点回去看看书或者写写文章。结果吃完饭之后被临时喊住解决一个问题，经过一两个小时，再回家只想躺在自己的懒人沙发上刷刷b站。</p><p style="margin-left: 0.0px;">当工作能够快速异化一个人，人格分离手术就是不人道中仅存的人道吧。</p><h3 style="margin-left: 0.0px;"><strong>人文滋养的浅尝</strong></h3><p style="margin-left: 0.0px;">借助上半年在华为的工作成果，我有幸前往比利时参加了一场学术会议。会议地点并非布鲁塞尔或安特卫普这样的国际都市，而是比利时第五大城市——沙勒罗瓦。这座小城让我体验到了相对地道的欧洲生活。</p><figure class="image ss-img-wrapper image_resized" style="width: 547px;"><img src="https://cdnfile.sspai.com/2025/03/04/748ca209ad5e6f3e83e2861bb7dbf9bd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>平平无奇的欧洲小城</figcaption></figure><p style="margin-left: 0.0px;">沙勒罗瓦给我的第一印象就是“慢”。抵达的那天正值周末，按惯例几乎所有店铺都关门歇业，只有家乐福这样的连锁超市营业到晚上6点。我们办理完入住后，便去超市买了些蔬菜和肉类，回住处自己做饭。无论何时，街上总是只有零零散散的几个行人，慢悠悠地走着。偶尔能看到穿着外卖服的小哥，三两成群地坐在广场长椅上聊天，或许是在等单，也可能是在休息。</p><p style="margin-left: 0.0px;">开会时还碰到一个小插曲，让我久违地体会到一次人文关怀。由于签证问题，一些团队无法到场演讲，就请我帮忙放他们提前录好的演讲视频。由于他们团队没有提前邮件知会委员会，这样的操作是不符合规定的。在我上台打开准备好的视频后，他们问我为什么要这样做，制止了我的行为，并且激烈地讨论应该怎么处理这样的情况。我就只好下台了。</p><p style="margin-left: 0.0px;">下台之后，我就在座位上坐着，会议主席看到了，立马走到我的身边，安慰我，说了一大堆话，我其实并没有听懂，但是他一遍又一遍地重复着:”This is not your fault.“我听懂了这句话。也许是在国内呆久了，心之壁逐渐增厚，没觉得自己受到了创伤。反而是主席，意识到这种行为对学生的潜在影响，并尽他的努力帮助我，让我很感动。</p><p style="margin-left: 0.0px;">我这才意识到，自己的心变得麻木，特别是在开始工作之后，对周边的感知力骤然下降。</p><blockquote><p style="margin-left: 0.0px;">阅读是砍向我们内心冰封大海的斧头。</p></blockquote><p style="margin-left: 0.0px;">卡夫卡在这段时间是我最恰当的嘴替。他对打工生活的评价和批评可谓是一针见血。奈何我的语言能力不够，难以道出他的文字精妙之处。然而，我发现，即使是卡夫卡极力批评的生活，都尚且能做到五点下班，上班中途想出去散步就出去散步。这种体制内般的生活，已经是国内打工生活的「天花板」了。很幸运，他没有在国内互联网大厂上过班，否则怕不是要直接抑郁地说不出话来了，更别谈写作了。</p><h2>未来坐标：下一站该驶向何方</h2><p style="margin-left: 0.0px;">2024年底，DeepSeek-V3 发布，在大模型行业掀起一场风暴，顺势波及到我。DeepSeek 的核心优化点之一，正好是我研究项目中使用的技术，于是开始受到内部的持续关注。之前测试的各种数据，实现代码，都有人找我学习，这种情况让我觉得自己的工作有领先之处。但是在这之前，我提出的一些问题，没有多少人关心。在 DeepSeek 之后，这些问题受到了更高优先级的关注。</p><p style="margin-left: 0.0px;">我开始思考，为什么现在才推进呢？也许是因为有一个领先者，需要超越吧。超越是一件好事，前提是有一个领先的对手。如果对手不存在了，又该如何超越？而抱着超越的心态，又怎样能走出一条新的路？</p><blockquote><p style="margin-left: 0.0px;">想说却还没说的，有很多。攒着是因为想写成歌。</p></blockquote><p style="margin-left: 0.0px;">2017年，大二的夏天，我和几个同学参加了一场为期72小时的黑客马拉松，需要从零开始做出一个项目。当时年少无知，真的以为要从零开始，而且不能有所准备，不然就不够纯粹。于是，几个人零经验就去参加活动了，自然是什么都没有做出来。</p><figure class="image ss-img-wrapper image_resized" style="width: 385px;"><img src="https://cdnfile.sspai.com/2025/03/04/1881a2ccd6a67130cf7e6acaa452fbad.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0.0px;">我安慰同学，现在年级太低了，没做出来什么很正常，等我们到了大四，做这种东西是信手拈来。当时想做一个文生音乐的项目，通过文字生成对应的一段旋律，并且可以组合起来。当时还觉得挺简单，现在想想真的是无知者无畏。</p><p style="margin-left: 0.0px;">音乐就像魔法。一段旋律，能够调动起我的情感，或激动，或悲伤，或平静，也能在我注意力涣散的时候强行进入专注状态。文字如是，好的文字读起来能够让人心跳加速，也能够让人屏息，让人闭上眼去回味，去遐想。文字和音乐都是一种语言，但是表达的载体不同。如果能够根据文字生成一段完美的音乐，就像完成了这两种语言的翻译，是一件很有趣的事。</p><p style="margin-left: 0.0px;">我觉得这个想法应该发表在共创题材，但是太懒了，不知道何时会真正地去重启这个项目，所以就抛砖引玉地发出来吧。</p><p style="margin-left: 0.0px;">在少数派，我总能遇到一些人，他们认真地做着有价值的事，或是自己热爱的事。这或许是我依旧驻守在少数派的原因。在当下的环境中，能看到一群人努力生活，并热爱自己的生活，还能将这份热爱分享出来，实在难得。希望能够凭自己的努力，维护这个社群。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96489</id>
            <title>好、坏、丑：AI 元年，手机厂商为什么再次爱上了跑马灯？</title>
            <link>https://sspai.com/post/96489</link>
            <guid isPermaLink="false">https://sspai.com/post/96489</guid>
            <pubDate></pubDate>
            <updated>Mon, 03 Mar 2025 03:01:23 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 生成式AI, 跑马灯, 语音助手, 人机交互

总结: 本文探讨了生成式AI在语音助手和人机交互中的应用，特别是跑马灯动效的设计逻辑。文章分析了跑马灯作为强提醒手段的原始作用，并对比了不同厂商（如三星、OPPO、荣耀、Apple等）在AI助手中使用跑马灯的方式。文章还回顾了Siri的交互设计演变，从波形图到语音球再到跑马灯，强调了AI介入的弱打断性和隐私保护的重要性。最后，文章讨论了AI助手的未来发展方向，特别是多模态Agent的潜力与挑战，以及隐私保护在AI应用中的重要性。 </div>
                        <hr>
                    
                    <p><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><h2>引子</h2><p>在生成式AI的巨大能量被越来越多的人了解并应用的背景下，各大厂商也开始加码 AI。技术上除了运用生成式 AI 的内容扩展能力，也在努力将AI赋能语音助手，想达成科幻电影里知无不言的 Jarvis，或单纯只是想扭转消费者人工智障的刻板印象。一些数码发烧友将其视作类似奥利奥镜头 deco 狂热的畸形闹剧，并对跑马灯和类似的新交互方式嗤之以鼻。但是平静下来，似乎在千篇一律的营销之后，我们发现了一些不一样的，而且很新的东西。不同于手机硬件创新方向的模糊，考虑到 AI 几年来爆炸式的发展速度，也许跑马灯之后的愿景将很快成为现实。而我们今天要讲述的，就是这个故事。</p><h2>跑马灯：友商答案即为最优解？</h2><p>在将跑马灯这一动效设计串联到 AI 前，我们先来看看原本的跑马灯是来干什么用的。</p><p>人天生就有被会动的、流光溢彩的高饱和度颜色所吸引的特质，红蓝闪烁的警灯，招牌上滚动过去的彩虹字，种种大量高饱和高对比色彩的利用极为强势的抓住人的眼球，很好地完成了「全体目光向我看齐我宣布个事儿」的任务，而反映在移动设备——特别是手机上——这种五彩斑斓的色带跑马灯的最初利用则呈现为信息时代最离不开的功能之一：信息提醒。</p><p>以三星的 One&nbsp;UI 为例子，作为曲面屏设计的始祖，三星自然不会放过这块小小弧面的利用机会，于是它为我们呈现出了恐怕是最杀马特但是最有效的通知提醒方式：Edge&nbsp;Lighting。每当有通知，一条五彩斑斓的跑马灯就会沿着屏幕四周快速闪烁，即便是手机倒扣的情况下其屏幕弧面倒映在桌上的光芒也足够强烈到让用户意识到——当然，在某些场合可能会带来一些社交上的不便。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/81944ef497ff266a2152fbd49dc21084.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Edge Lighting</figcaption></figure><p>现在，让我们看一下国产品牌怎么在移动设备 AI 元年利用跑马灯这种动效的。</p><p>首先是大模型的早期入局者：OPPO，在作出安第斯大模型后也是马不停蹄的更新了自家的 AI 助手，谓之超级小布，其呼出动画为自侧键流出跑马灯动画环绕屏幕一周后降至 2/3 屏位置，并在底部弹出语音气泡窗与三个根据当前环境列出的智能 prompts，跑马灯动画波形会跟随语音输入的频率改变。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/47dd6953d3230c6c335b464813df3352.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>超级小布</figcaption></figure><p>其次是后起之秀：荣耀，其在 MagicOS&nbsp;9 上推出的 YOYO 智能体展现出了比较强悍的多功能实力，但我们今天并非评判AI助手的能力强弱，而是看动效：唤醒 YOYO 智能体时会在屏幕底端拉起对话框，其中包含左侧的语音球和右侧的识别框，跑马灯的效果只在执行命令时出现，并快速沿屏幕边缘流动。</p><p>至此我们看到了两种有代表性的跑马灯使用方法：跑马灯作为 AI 启动的提醒和跑马灯作为AI执行命令的体现，但是不是总感觉有些割裂感？比如为什么会缺失上 1/3 屏的动效以及仅在执行的时候显示跑马灯？此时我们就可以将一切拽回 AI 动效设计的原点：Siri。</p><h2>罪恶的原点：重访Siri</h2><h3>从波形到语音球</h3><p>自 Apple 收购 Siri 的母公司后，Siri 就取代了 Apple 自家的 Classical Voice Assistant，从 iOS 10 开始成为正式的语音助手。</p><p>早期的 Siri 的交互界面设计十分有趣：在召唤出 Siri 后，会有淡黑色和淡蓝色（早期）的全屏幕高斯模糊遮罩，底端为麦克风标志，顶部则是用户语音输入命令的识别文本。在摁下麦克风 icon 后整个图标会水平展开成线条状的波形图，并随着用户的语音起伏。除此之外，在未检测到用户输入时屏幕上半部分会主动弹出一行小字「您可以试着这样问我」并随附几条 prompts。随后几个版本的各种 UI 调整无外乎麦克风 icon 多了个圆形外围，波形图转成彩色波纹等美化更新。</p><p>种种设计表明，在这个时期的 Siri 更倾向于作为用户的聊天对象出现，呼出时全屏背景模糊为的是将用户与现在进行的事物隔离开，从而专注于与 Siri 的交流中，且中间时不时的 prompts 也在鼓励用户与 Siri 交流。但以现实成果来说，用户与其交流的欲望依旧偏低，这得感谢 Siri 并不智能的智能属性。还得多需要几个疗程，同时也是后续 Siri 设计更改的主要病因之一。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/f12f3bd4bd94eefbd0a114e2427752f7.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Old Siri</figcaption></figure><p>而在 iOS 13 之后，Siri 改为了语音球的形式，但全屏模糊遮罩的逻辑并未改变。</p><h3>从语音球到跑马灯</h3><p>全面屏时代开启后 Siri 的设计自然要向更大的显示面积靠拢，故删繁就简，从之前的麦克风 icon 与波形图缩小成了一个球：唤醒时屏幕低端中间会放大出一颗五彩斑斓的语音球，并随着语音指令有规律的跳动，语音输入会转变成文本出现在屏幕顶部——紧挨着刘海或灵动岛下方——空间内，在指令输入完成后语音球中心会旋转出现五个叶片表示正在执行命令，而未检测到命令时语音球会中心缩小成一团直到消失，整体更加小巧简单。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/a76667c252b09171713678f526ab0b41.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>New Siri</figcaption></figure><p>此外，多年的随 Siri 一同唤醒的全屏模糊也默认取消了，用户也可以继续关注当前执行的工作，伴随着精简的语音球设计，这个阶段的 Siri 对用户当前操作的介入进一步弱化，打断性更差，从而削减了对用户的干扰，也表明了 Siri 从上一阶段中代表自然语言控制的人机交互端口，一个可以聊天的数字朋友，变成了呼之即来挥之即去的以完成任务为导向的冷冰冰的助手。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/f6fb1af3ee8a91fca2a204412c630d0f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>「跑马灯」</figcaption></figure><p>而跑马灯则是更进一步的以弱介入强工具属性为核心的设计方式：以侧键为起点，一条彩色的跑马灯沿着屏幕边缘奔涌一周后完成闭合，并形成一层淡淡的屏幕遮罩，跑马灯会随着用户的语音输入起伏，语音转写的文字气泡框会浮现在灵动岛的正下方，当未检测到语音输入时跑马灯会在屏幕边缘淡出。相比于语音球，跑马灯的动效更为干脆利落，介入性与打断性更差，甚至退出动画都更快速简洁，更强调了现阶段整合了 Apple Intelligence 后 Siri 的纯粹辅助工具属性。</p><p>但是，为什么是跑马灯？</p><h2>The Logic Behind: Apple Intelligence 的过程正义</h2><h3>强警告：AI 在介入</h3><p>让我们回归到这篇文章的开头：跑马灯的最原始的作用，强提醒。人天生会被流动的、高饱和度和对比度的色彩吸引，而跑马灯这个动画相当有效的做到了提醒用户这一功能，即告知用户唤醒了 Apple Intelligence 并且将介入用户当前的操作，另一点是虽然这个动画会比较张扬，但仅利用了屏幕边缘区域并不会对屏幕核心的当前工作造成影响，即呼应了上文中的 Siri 的弱打断处理手法，既通知了用户现在 Apple Intelligence 开始介入，又不会过度打断用户当前的工作，虽配色呈现较为非主流但胜在简明高效。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/8ad14becc12354d09da150cf5d3bd013.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>相同道理，Visual Intelligence 呼出动画中也有 Hue 从 Camera&nbsp;Control 键辐射而出，且 Apple Intelligence 认为的重要通知也会被识别为 Maybe Important 并用跑马灯圈选，无论是用户主动拉出还是 AI 主动呈现都做到了通知用户 Apple&nbsp;Intelligence 正在介入。</p><h3>Content-Awareness：AI 能看到</h3><p>这个动画又一高明之处在于它映射了「框选」机制，以主动出现的环绕整个屏幕的跑马灯为强提示，淡白色透明遮罩为核心，表明整个屏幕都被 Apple Intelligence 框选起来，基于前文提到过的结合 Apple Intelligence 的 Siri 的进阶工具属性，这对于用户而言是强有力的被动心理暗示，亦或是心理幻觉：用户唤起 Siri 是为了处理某些问题，最有可能的就是当前屏幕上的棘手 case，而 Apple Intelligence 可以看到用户当前的任务，Apple Intelligence 可以帮上忙，用户主动唤醒叠加 AI 的被动暗示，会极大增加用户的信任感。</p><p>同理，Type to Siri 也是实现了相同的操作：Siri 键盘自下而上弹出，彩色弧形波纹同时扫过键盘，屏幕内容等比缩小居中，这也暗示了 Apple Intelligence 可以看到用户当前的任务。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/e4734dc6e582ded2e728ba6fe4b0ece5.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>但是这仅局限于实际调用功能前，在反复测试后现阶段非 Type To Siri 唤醒手段下 AI 的 Content-Awareness 表现可以说是基本没有，而现有消息透露出早应实现的上下文识别与 Content-Awareness 能力在 iOS&nbsp;18.4 中才会引入，先前的种种过度分析在此刻尽数破功，给你机会你不中用啊，Apple。</p><h3>Privacy Indicator：AI 会提醒</h3><p>回到 AI 唤醒后语音输入的动画上，prompts 转录弹窗正好在屏幕上方，紧挨着灵动岛，这个设计横向对比友商的语音助手设计是令人匪夷所思的，相比于友商的 AI 助手唤醒位置和语音 prompts 指示器都统合在了屏幕下方，结合了 Apple Intelligence 的 Siri 的交互设计却显得十分破碎，这一方面大概是由于相关热视觉动力的研究，其证明用户在看向设备屏幕时主要集中在上半部分，将 prompts 弹窗放置在上半部分可以更好的对接用户的注意力，而更深层的缘由，则需要挖一下我过去写的东西。</p><p>在我之前某一篇不知名的文章中曾写到过灵动岛作为系统级的功能，其拥有最切合Apple核心价值观的功能之一：Privacy Indicator，那颗在岛上不起眼的小黄点。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/98f1295097834e970e2115b4e401c3c5.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Privacy Indicator</figcaption></figure><p>在一系列岛的动效中，唯有系统级的状态指示是永远优先于其他动效的，这个小黄点也不例外，一切涉及音视频隐私权限的调用时该 indicator 必然会出现在极为显眼的位置，强调用户的知情权。但这与 Apple Intelligence 有什么关联？这时候我们需要回归到 Apple Intelligence 的介绍上：</p><blockquote><p>Apple Intelligence protects your privacy by processing your personal information on-device, without collecting it. With Private Cloud Compute, it can handle more complex requests on larger server-based models running on Apple silicon, while still protecting your privacy.&nbsp;</p></blockquote><p>此间揭露了 Apple Intelligence 不同于友商进行功能性堆砌的卖点展示，而是回归自身老本行，隐私保护能力，端侧、私有云计算、Apple Silicon 共同串起了 Apple Intelligence 的后台，前台则交给了这些醒目多彩的光点，不仅局限于黄色和绿色的小圆点，以至于可以在 Visual Intelligence 中看到更大的灰色（在早期为更为醒目的绿色）独立 Indicator，时刻提醒用户的隐私权调用，再次展示了 Apple 对隐私性的偏执。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/f579eb52610d9e1445dcd1f6d8d22747.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>回归到设计上来讲，人眼多会关注屏幕上半部分的内容，prompts 弹窗紧挨着灵动岛，而灵动岛会展示 Privacy&nbsp;Indicator，在主动方面用户在向结合了 AI 的 Siri 发起请求时可以直观看到提示，而在被动方面同样也是 Apple 对用户的提醒：我们尊重你的隐私权，我们全程将用户的隐私调用置于用户的主动监控下，你的信息是安全的。在潜意识中增强了用户对 Apple&nbsp;Intelligence 的信任。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/661f81048b96e84504626c5dea6dee32.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>以偏离主流审美但有效的跑马灯动效做呈现，联动此前多出的系统级提醒变化，最终回落到 Apple Intelligence 偏执的核心隐私保护上，整个链条体现出的则是 Apple 对于 AI 处理上的过程正义：从用户唤醒、交互反馈、隐私保护到任务完成，既要让用户清楚地知道 AI 何时介入，又要确保用户隐私得到最严格的保护，每个环节都经过精心设计，为用户构建了一个闭环的信任体系以及可以被窥见的 AI 伦理机制——当然，至于是真的不作恶还是虚幻的粉色泡泡，那就不得而知了。</p><h2>Best Practice：不止跑马灯</h2><p>这时候就可以回答一开始提出的两个疑问了：为什么会 OPPO 的超级小布会缺失上 1/3 屏的动效？为什么荣耀的 YOYO 智能体仅在执行的时候显示跑马灯？</p><p>前者可以在「AI 会提醒」的基础上粗暴的分析为将人眼视线拉向屏幕下方AI唤醒区的权宜之计，环绕屏幕一周后回缩的光效可以引导用户将视觉注意力拉向屏幕下方，从而专注于屏幕底部的AI助手功能。</p><p>后者可以由「AI 在介入」解释，即在AI自动执行相关命令时会闪烁跑马灯表现 AI 介入当前工作，可以敦促用户时刻关注 AI 的动向并在出现问题的时候及时接管 AI 的操作。</p><p>但显然，一昧地模仿学习并非探索人机交互的最优解，除开庞杂的跑马灯家族外，仍有不少个人认为处理手法极其优秀的交互设计值得各位欣赏品鉴。</p><h3>波形上扫</h3><p>在小米 15 发布会之后，发布会的重中之重——超级小爱终于随着内测放榜来到了各位数码爱好者的手中。事实上小米在人工智能领域的布局相当早，在没有引入大模型作为智慧助手核心的前生成式AI时代小爱同学就以远超其它所有语音助手的实用性表现广受好评，这其实在技术层面为加入了「AI」之后，类似 AI Agent 概念的新语音助手打下了坚实的基础，接下来就让我们看看超级小爱给出了怎样的一副答卷。</p><p>超级小爱的唤醒方式仍然与之前一致。长按电源键或录入自己的音色与唤醒词后唤醒。唤醒后的动画可以说「借鉴」了 Apple，流动的彩虹条状光效从下至上覆盖屏幕，同时重心有变暗的效果。这是一个非常积极的交互显示动画，通过光效和阴影表现出层级上下的关系，并进而向用户传达出「Agent is Alive」，且浮于应用与系统层级之上，掌控一切的优先级。如此高优先级的动画，正是呼应了「AI 在介入」，以及「AI 能看到」。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/c868056ba928fd687d11fa72d6b81682.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>除此之外，随着系统更新还可以通过长按小白条快捷呼出 OCR 识别屏幕及其后续功能。超级小爱在此非常优秀的交互考量是该功能会随着屏幕内的元素种类给出不同的推荐操作，并且是完全绑定 prompts 和打字输入框出现的，不会有交互方式差异带来的割裂。另一个值得注意的巧思是页面中的几乎所有提示性元素都有着与跑马灯动效相似的渐变配色，观感上十分统一。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/8eb70dda94b5e87b2ef4a6c02292b836.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>下沉对话框</h3><p>作为传统派解法的领军人物，华为，升级到 HarmonyOS&nbsp;NEXT 后依旧坚持在自家小艺和 Celia 上采用对话框的形式，触发端口融入全面屏时代最热门的交互方式：导航条，简单粗暴，直接开辟独立人机交流窗口。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/9d65dbf4c7b69d0b4510f59104946c21.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>其触发手法也足够直观，主动唤出分为三大流程：</p><ol><li>长按侧键呼出，屏幕底端导航条上移扩大生成对话框，并伴随语音输入指示条；</li><li>长压导航条呼出，屏幕底端导航条上移扩大生成对话框；和</li><li>语音唤醒，屏幕底端导航条上移扩大生成对话框，并伴随语音输入指示条。</li></ol><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/dceccee2a8c08d926d6aaaca5cbf9adc.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这三者间有一些诡异的区分点：语音唤醒直接进入沟通模式，而接触式唤醒会同时弹出建议 prompts，这也能展现出华为在 AI 助手上设计的考量，区分出可以聊天的数字朋友与功能性的AI助手，有些许拐回早年 Siri 的味道在。</p><p>而文件处理则是简单粗暴的直接向下拖拽，同时导航条会展开并伴随跑马灯光效，这点也是印证了 AI 能看到，但和前文所描述的有所不同，动作发起方是用户，AI 从主动方转为被动角色，故，整个流程设计构造了基于用户主动拉起行为的 AI 内容感知，如同需要主人邀请才能进入家门的吸血鬼一般——AI 并没有直接读取文章的权限，需要用户主动投喂才可以。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/bf985d83ed5658f9aa686c3ecab6e85c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>但是，相较于前面描述的集中带有强警告交互设计逻辑的 UI 方案来看，华为小艺的做法是明显缺乏强提醒策略来声明 AI 在介入的，所以，让我们来发散一下思维：这种做法是否可以判定为一种柔化 AI 边界的手段？</p><p>不可否认的是，小艺所采用的系统级整合的处理手法展现出了从明确的功能边界转向模糊的场景融合的趋势。在这种设计理念下，AI 不再是一个独立的工具，而是作为系统能力的自然延伸：常驻系统导航栏且可随时召唤，支持多模态输入，可根据当前界面识别用户意图，交互更为自然统一。</p><p>但反过来说，小艺的处理手法降低了用户对 AI 介入的适度感知，其强警告状态几乎只在用户主动拉起时才有所呈现，仅有引入客观材料进行分析的 prompts 才会触发跑马灯特效；而用户主动拉起小艺时则为导航条形态转变配合高斯模糊遮罩动画，并没有给到 AI 介入的提醒措施，其弱化声明 AI 介入的手法——基于作者自己足够恶意的不当揣测来看——有着转嫁风险的嫌疑，削减了生成低准确度内容后 AI 自身承担的责任，将问题更多地归因于用户选择，倒逼用户思考是否是因自己的指令不够准确无歧义导致的低质量内容，一定程度上会引发责任归属的问题，当然，锅已经甩给了用户，毕竟是用户主动拉起的。</p><h3>我全都要</h3><p>而站在传统派与维新派之间的，则是缝合派，GenAI 玩家中并不新的新人，Google Gemini。</p><p>其触发逻辑完美结合了前文中两个案例的特质：自下而上弹出对话窗口同时伴随跑马灯特效，直接开辟独立对话窗口的同时做到了 AI 介入的强警告措施。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/5b3d4ed388c207006cb30f89f7d798f8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>若当前屏幕有其他媒体，比如网站内容，Gemini 则会出现自下而上弹出 Ask About Screen 窗口，用户主动点击触发后 Gemini 会截屏，同时伴随波形上扫和闪粉特效，这也是一种邀请机制——虽已经弹出了 Ask About Screen 窗口但依旧需要用户主动点击才会触发识别的效果，aka&nbsp;A I能看到，相比起前一版 Gemini 在出现媒体后直接触发波形上扫和闪粉特效的动画，现在的处理更加隐晦，降低用户因为 AI 莫名其妙的 discretion 所引发的擅自行动带来的不适感。此外，在处理过程中对话窗口也会快速闪动跑马灯作为提醒措施，同样强调了 AI 在介入。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/2936a3c6995271aa06476c706d5a9a4f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>舞台幕后——多模态 Agent 发展现状与前景</h2><p>上文所述的所有 UI 上的创新本质上都是「面子工程」，精美的交互逻辑需要强大的 AI 功能作为后盾才能真正唤起用户的使用欲望。Apple Intelligence 在国内的难产以及服务提供商的扑朔迷离，伴随着用户的期待与担忧很好的体现了这一点。尽管不得不承认目前大多数终端厂商的AI助手不过是在原有的引擎上加了个大模型接口 API 而已，但我们可以窥见厂商们的野心远不止于此，Agent 功能已经开始深入系统层。</p><p>以超级小爱的新功能为例：它可以通过识别问题中的特征词对相机参数进行调整，还可以在相册页面主动分析内容，并根据用户要求调用自动调整模块以调整照片参数。这传达出一个信号——各家厂商在生成式 AI 赋能语音助手的功能上已经不限于生成内容，并有意识的在向多模态信息处理，Agent 上继续发展。那么话说回来，什么是 Agent，又为什么说语音助手的终极是 Agent？</p><h3>Agent 的应许之地</h3><p>Agent 的发展成果，以及历程中出现的各类技术其实相当难精准叙述，也很难一概而论。但简单来说，一切 Agent 领域的发展与探索，最终都是为了一个最终的目的——「让 AI 成为真正的人」。我们暂且不论这一目的在政治或是伦理上的问题，单纯从技术角度出发，人是这个世界上最高级也最复杂的 Agent：通过对外界信息的接收，理解，分析和反思，演化出具有自主性的决策，并实施决策以达到特定的目的。真正意义上的 Agent 的根本特性在于自主，获取知识与主动思考是为了提升结果导向的任务性能，而不需要依靠其它任何外力的自主性是这一循环得以成为现实的先决条件。也正因此简单的直觉定义，Agent 在科学界的提出甚至远早于生成式 AI，一个空调也可以是一种粗糙的 Agent，当然现在我们发现其实生成式AI是人类社会目前最接近实现 Agent 的手段，在此之前一切有关通用人工智能的探索都以失败告终。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/b717b35eed4c8d400355ad056dd01d89.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>由于生成式 AI，或者说大语言模型的黑箱性质，提示词工程是驯服它的最佳办法，因此 Agent 也需要借助提示词工程成为一个整体。这听起来是非常符合直觉的，提示词工程说白了就是你在用 ChatGPT 的时候通过不断的给出问题使之提供让你满意的答案。但这么做虽然简单，但距离一个稳定的Agent实际上相差甚远。由于 Transformer 架构基于 token 分割语义的特性，你几乎不可能让一个大语言模型输出完全相同的结果——打个比方，对于一件相同的事件，在人所接收的相关信息不改变的情况下我们总会得出相同的认知或者看法，但这一原则对于大语言模型并不成立，它可以稳定输出 1+1=2，但无法稳定输出世界将如何发展。因此学界迫切的需要一种除了提示词工程以外，可以真正了解生成式 AI 的运行规律或者输出偏好的方法，不过这就不是我们今天需要讨论的议题了。回到应用层面，至少目前所有我们上述以及可以见到的「类 Agent 助手」，都还是主要依靠提示词工程调用 AI。</p><p>在以便携终端为主要载体的使用场景之下，Agent 的需求被很好理解地简化了：解决用户的复杂需求，并在可能的情况下对解决方案或者问题本身提出稳定且有建设性的见解。熟悉安卓玩机或者 iPhone 越狱的玩家都知道，诸如屏幕识别、ADB 等手段可以非常轻松的解决移动设备 Agent 在信息获取上的需求，那我们的需求就进一步被简化了：如何让 AI 丝滑的介入并且无缝的参加到操作决策中呢？</p><h3>盗火并非易事</h3><p>来自阿里的一个项目给出了非常漂亮的答案：Mobile-Agent，基于页面元素识别与大语言模型决策迭代的自动化操作模型。简单来说，Mobile-Agent 构建了一个计划-决策-反思的模型：计划 Agent 负责从整个操作流程中生成一个待办事项表，决策 Agent 基于该表进行每一步的决策，而反思 Agent 会在每一轮决策结束之后对结果进行评价并根据评估指数做出对应的后续操作，而这个系统里涉及「自主决策」的部分全部借助大模型的力量完成。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/8b6ce5bd6c1d416a2bb496394513668e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>实验结果非常美好，但事实上缺陷仍然存在。不同的大语言模型显示出了差异极大的各环节准确度，甚至同一个模型在配置不同时的准确度也大相径庭。为了得到良好的实验结果，论文作者把所有操作都事先组织到一起并放在专门的表里，并且为了量化决策与反思的过程，将决策变成了从：点击、滑动、输入、打开应用，返回桌面与终止任务中选择，将反思变成了从：错误操作，无效操作，正确操作中选择。但很明显这只是对人类逻辑思维的一种粗糙模仿，事实上人脑对终端感官信息的反映远复杂于从预设中选取操作的迭代过程。针对论文中复杂操作准确率低的情况，论文作者采取的方法是将与之相关的知识投喂给大模型，作为提前的准备，但事实上如果要将其集成到系统中，这一步不仅技术上难以实现，从效率角度上也匪夷所思——如果我事先还需要喂给 AI 知识，那还没有我自己做的快。速度在这里是一个极其苛刻的指标，从根本上来说，如果基于 AI 的自动化操作没有在感官或效率上有提升，那这样的系统就是毫无意义的，只会徒增功耗。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/33214b34e887af1bcce25c37cb5741bc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>如果考虑工程学问题，那这种系统甚至有更多的缺陷——如果使用 API，如何保证网络稳定和高效决策？如果使用本地 AI 算力，如何保证功耗与续航的平衡和经过模型简化或知识蒸馏之后的模型表现？这些问题至少从我粗浅的认知来看目前还无法解决，但我们甚至要更进一步——如果 Agent 被并入到系统中，那么如何保证它的可用性？回到超级小爱的新功能，从工程师和开发者的角度，目前有两种实现方案，第一是根据微调来提升 AI 决策功能的稳定性，二是将每个功能的实际实现都写成程序，只在对结果的决策或者生成内容的过程中调用 AI。答案显而易见，第二种方式更加简单，也更实际，但是我们都知道第一种方案迭代出来的超级 AI 更加贴合我们梦想中的 Jarvis，并且更重要的是第一种解决方案的泛用性更强。将 AI 深入一个系统的底层甚至内核，在工程角度极其困难。退一万步说，一个成熟的未来系统也不可能为所有 AI 需要介入的地方都写好调用逻辑，尽管所有公司现在都在试图这么做，但这不是最终答案。未来与现实的尖锐矛盾把路线的选择推向了更加难以捉摸的未知。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/82a671481c22e347ff0219a2ef705e69.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>J.A.R.V.I.S</figcaption></figure><p>在我与朋友讨论的过程中，一个我之前没有当回事的问题对于广大用户来说更加明显，也就是隐私问题。一个可能成熟的 Agent，如果对系统中的任意组件都可以轻松掌握与调用，那么如何才能保证用户的隐私不被窃取呢？上文的 Indicator 说白了只是个面子工程，我们还需要更多的技术去防止祂翻过那道僭越之墙。</p><p>业界已经有不少臻于完善且投入实际应用的隐私保护手段。联邦学习是在隐私保护方面特化的一种分布学习机制。简单来说它的目的是在多个参与者通过自己的隐私数据训练同一个模型时保证各参与方的隐私不受泄露，这听起来很反直觉，但多谢密码学的诸多理论与工具可以让「知道总和但不知道任一部分」成为可能。联邦学习已经在诸多行业中得到了广泛的应用，诸如银行的交易与量化系统，或是智慧医疗体系。对绝大多数人来说最熟悉的联邦学习应用大概是输入法中的词云联想功能，输入法能「猜」出你想写的下一个字，靠的并不是读取你所有的输入历史，而是把千千万万用户的加密输入数据投入联邦学习模型进行训练，再将训练好的模型发送给每个用户使之在本地决策。应该注意到模型的迭代和用户的数据生成是同步进行，不断迭代的，这也保证了模型效果不断更新优化。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/7a3d637e2256b3ca95017c6ce5d05375.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>但联邦学习没能进一步走进公众视野的原因也非常简单——难。高昂的通讯与训练成本对于商业公司如临大敌，且训练过程中的通信与训练本身的安全性也难以保证，投毒攻击已经事实上成为了联邦学习难以解决的问题。除此之外，对密码学和机器学习有些认识的读者也应当很容易发现，一般的联邦学习模型只适用于独立同分布的数据训练场景，说人话便是数据应该长得差不多，但这一听起来容易的要求实则在实际训练过程中非常困难。大多数数据场景都是非独立同分布的，针对非独立同分布数据的新颖联邦学习模型又为了达到要求在模型复杂度或是计算效率上有所妥协。</p><h3>伊甸园里的苹果</h3><p>刚才提到的所有困难都是技术层面的，在移动设备这样如此下沉的消费电子领域，引入 AI 最大的困难绝不是技术层面，而是观念。移动设备的下沉特性注定了使用它的大部分用户并不懂 AI，也不懂隐私保护，他们只会担心他们的电话号码、家庭住址或是银行卡密码会不会被窃取。这也是终端厂商在人机交互上强调隐私并不断试图降低 AI 助手「看起来」没那么冷酷的最终目的，他们希望所有用户都可以以很低的技术与心理成本接纳这一新技术。这事实上是交互史上一次最大的冒险，因为在历史上以前所有的交互变革——鼠标横空出世，小红点与触摸板的竞争，触屏取代键盘，本质上都是用一种或多种更好的选择强势侵入用户的思维定势，「更好用」是促使所有人接受创新霸权的最简单粗暴的方法。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/f58cad40db2e64825d9b4057b8cf0eab.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>初代iPhone发布会，颠覆性的多点触控机制</figcaption></figure><p>但这一手段这次可不好使了。因为涉及到隐私，用户的逆反与抵触心理会被无限放大，想让他们接受这一新的技术背后的交互方式只能低声下气地去「求」用户，更何况这一技术不仅是难以向所有人推广其人畜无害，而是它本身的安全性有待商榷。诚然AI可以提高效率帮助思考，但是用 prompt 工程或是 Agent 工具链规训一个黑箱并非安全无虞，黑箱的发展速度超越了全世界的想象，而我们并没有把握吃下伊甸园里的苹果。</p><p>不过有趣的是在这篇文章完成之前出现了一件让 AI 本身出圈的公共事件。Deepseek-R1 的横空出世，力压 OpenAI 与 Llama 成为了最好用的大语言模型，宏观上来说回击了西方的高科技霸权，但在普通人的互联网语境中更重要的是让他们认识到了 AI 的磅礴力量，进而潜移默化的影响了普通消费者对 AI 的看法。</p><p>我们有理由相信大语言模型凭借科技史上前所未有的发展速度会在不远的未来让所有人使用，并且认为「理所当然」。但在这个瞬息万变又如履薄冰的领域里，如何让用户安心的接纳这一变革就是所有厂商应该一起做的事情，而我很高兴看到无论硬件还是软件厂商都在努力交出属于自己的一份答卷。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/article/718d3927e7eca0608adc674ebad4f8b9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>DeepSeek-R1 的性能指标体现出优势</figcaption></figure><p>互联网与其派生的技术发展的太快，我们已经习惯了被日新月异的技术一次次颠覆生活的底层逻辑，时间被数据流不断加速，快到人们被自己的造物强迫着局限在眼前的一隅。我们已经适应了从口袋里掏出一台连接世界的机器，但随着视线愈发轻松地到达世界的每个角落，似乎有什么别的东西被禁锢在原地。二十年前人们还对触屏的交互革新几乎一无所知；短短三十年前网吧还是万人趋之若鹜的娱乐场所，一家一台电脑还是遥远的梦想；而距离真正可用的互联网出现，也不过才三十五年。</p><p>现如今，AI 再一次加速了科技浪潮，我们能看到许多担忧的声音，不仅担忧隐私与安全，更担忧 AI 被利维坦们用来加固信息茧房，肆意操纵舆论，在愈发深重的赛博矛盾中赚取金币。这是有迹可循的，因为短短十几年，互联网已经从开源共享的地球村变成了乌烟瘴气的战场，人们有理由在相似的历史里提出相似的怀疑。但我希望大家给这些走在技术前沿的工程师再多一些时间。</p><p>AI 带来的未来冰冷而未知，人们自然能感到不安。但我们能看到终端厂商在隐私上的承诺，在人机交互上的深思，而这些正是在帮助所有人适应这一模糊的未来。未来可能存在危险，但是工程师们需要帮普通人挡下未知，让新的变革进入每一个人的生活，让 AI 在不远的将来成为人类社会的基石。在互联网的混沌时代，无私的分享与责任精神于此重生，终端厂商需要担负起对抗技术不确定性的责任，而他们确实在努力做到这一点。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/02/19/359254713461eece50c1bf8808429450.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>HAL 9000</figcaption></figure><p>「哲学家只是以不同的方式解释世界。但关键是要改变它。」跑马灯再一次出现在我们的视野中，或许预示着属于新地球的黄金时代。在我们的睡梦中，跳动的 0 和 1 就是改变的开始。</p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96922</id>
            <title>客制化键盘简评丨TAKU 65% 非典型入门级作品</title>
            <link>https://sspai.com/post/96922</link>
            <guid isPermaLink="false">https://sspai.com/post/96922</guid>
            <pubDate></pubDate>
            <updated>Mon, 03 Mar 2025 02:59:15 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 客制化键盘, TAKU, NAPE, 触摸条

总结: 本文讨论了TAKU键盘的设计理念和市场定位，强调其不同于传统“卷王”键盘的特点。TAKU通过细节设计和兼容多种玩法，旨在为玩家提供一个客制化的起点，而非终点。文章还提到TAKU的触摸条设计虽然创新，但在实际使用中存在误触和功能单一的问题。NAPE通过持续更新固件来完善产品，展现了长期主义的价值。作者希望更多类似TAKU的作品能为键圈注入新活力，并呼吁创作者深入了解社区文化。 </div>
                        <hr>
                    
                    <blockquote><p>想留住大家，想告诉大家，客制化可以有很多种玩法</p></blockquote><p>摇曳在TAKU团购帖末尾的这句话，在某个极短的一瞬击中了我。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/25c914716d9a86036e6a511a74c3996f.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>对于享受或忍耐了如此之多「为新玩家准备的键盘」的玩家而言，攥着预算反复对比参数，发觉所有关于「入门神作」的讨论，似乎显得有些迟钝和多余了。</p><p>极好的工艺，多样的玩法，便宜的价格，以及不属于入门级的设计细节，可当所有「高配」要素如同烟花般在营销页面竞相炸裂，我们最后收获的却不过是雪地里零落的灰烬——绚丽却同质，耀眼却速朽。所谓客制化标签，正在这场无限度的堆砌中失去最后的语义重量。</p><p>正因如此，在创作内容的这两年，我极少会去聊所谓的「卷王」键盘。</p><p>这些天生携带舆论漩涡的产品，总会在某个流量峰值被架上神坛，而后在话语权的拉锯战中支离破碎——KOL的镁光灯、数据党的指标仪、围观者的起哄声浪，最终将产品本身挤压成模糊的剪影。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/b49ed8e488e756a542ae773b3246c7a6.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>所以，当TAKU裹挟着比所有「卷王」更汹涌的声量袭来时，我始终保持着一种谨慎的静默。</p><p>而在热度逐渐平息的当下，我想也是时候来聊聊TAKU——聊聊这把被众多人购买、点评的作品，聊聊NAPE在TAKU背后的思考。</p><h2>关于TAKU外在印象</h2><p>对NAPE而言，TAKU是一把相当克制的键盘。如果说MANDA是毛三「力排众议」而推出的自我诠释的作品，那么TAKU毫无疑问是一把「顺应主流」的产品——这种妥协与平衡，从它的诸多细节中清晰可见。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/00b4019746ff1c2f2b4c9caa62bf0249.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>初见TAKU时，脑海中会不自觉地浮现出Matrix Corsa的身影。这种联想并非偶然：Corsa是一把相当出圈的套件，作为继承了Vita造型的M3.0后时代作品，1U的屏幕和碰珠快拆的结构对键圈的影响是非常可观的，无论是之后碰珠快拆大流行，还是蝗虫般繁殖的量产屏幕，Corsa都「功不可没」</p><p>而除开65%配列正面设计空间的匮乏，这种既视感也来自于TAKU本身腰身设计，上盖沿侧面腰线向上内收的HGline搭配大圆角，和Corsa的方案是很相近的，这样的处理手法甚至算是某种「标准答案」</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/da3619fc32f324d49a1c263a5c0840b5.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>如果你此前购买或了解过NAPE的产品，会发现TAKU虽然延续了灯条、自研驱动等品牌标志性元素，但整体气质却收敛了许多，呈现出一种向市场主流审美靠拢的趋势，与LEKEN时期的Aurora 96、Nape 108，以及前作Manda 2.0相比，TAKU的造型语言明显更为克制。</p><p>而在内胆方面，TAKU则做了更大的取舍。它的内胆设计像是一个真正的「多种风味」——它不会在某个方向上做到极致，而是让每一种被提供的模式都具备实际价值。这在兼容多种玩法的键盘上其实是相当少见的，许多键盘的兼容性仅仅停留在「能用」或是区别不大的程度，而TAKU的几种结构方案所带来感受确实是风格迥异——虽然切换需要更换整个内胆的组合。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/87904852c2f5ac892c342642a3f72351.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>当然，兼容必有得失：无棉和软闷玩家对腔体反馈的要求截然不同，而TAKU通过在侧壁开设多个点位来满足需要软和闷的玩家，同时为了兼容各种结构点位，上下盖的腔体环境并未完全封闭。从Endgame的视角来看，这种设计几乎是不可调和的矛盾。此外，TAKU在板簧的设计上相当保守，有效力臂并不长，颇有软硬折中的味道，而这也使得TAKU在不同结构下声音方面的差别远比手感的变化要大得多。</p><blockquote><p>TAKU这个系列的定位就是为了让玩家在客制化的爱好上起到一个start the game的目的，而不是以end game的目的去买这把键盘</p></blockquote><p>纵观TAKU的设计特点，你会发现这并不是一把传统意义上的「卷王」键盘，它没有堆砌那些「高配」的名词，就连配重，也仅仅是作为一种风味的装饰存在，也因此，它不是一把很「重」的键盘，但当你真的上手把玩的时候，你能从各个面的细节之处体会到它的分量所在——前侧的灯条、后侧类似机甲的条状饰面、磁吸的下盖盖板等等。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/bfb13f6e1c8d06019f32028f64d475f6.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>TAKU的「分量」不是通过单纯的重量和所谓的制造成本来堆砌的，而是通过这种无声的设计语言和细节来表达，而这，也正是它区别于「卷王」键盘的一个侧面——态度。</p><p>聊完了我对于TAKU的初印象，我们再来聊聊TAKU的另一大特点——软件与生态。</p><h2>又爱又恨的生态</h2><p>如果说TAKU的造型是让人购买它的第一动力，那么TAKU的软件和生态则可能是促使玩家最终放弃使用它的关键因素。TAKU的触摸条原本是其最具噱头的创新设计之一，却在实际使用中暴露出不少问题，成为了它的「阿喀琉斯之踵」</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/5d16bc56d92a3bf2added5532198e21d.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这条触摸条本应带来一种更加直观、灵活的控制体验，尤其是在游戏和日常使用中。理论上，触摸条可以通过滑动、点击等方式，快速调节音量、亮度，甚至切换连接模式。在打字时，它还能作为辅助工具，提升整体操作效率。它的加入本是对传统物理按键的一种替代性尝试，试图让操作更加便捷和富有互动感。然而，经过一段时间的实际使用后，我发现，这种原本美好的愿景，常常与现实脱节。</p><p>键盘上作为非按键映射的触摸条并不新奇，几年前在瀚文75上便引发过一阵热潮，但时至今日，触摸条仍未在键盘上找到一个成功的案例。无论是作为音量调节、模式切换，还是作为更复杂的功能输入，触摸条始终未能突破它自身的局限，无法与传统按键方式形成有效互补。每一次触摸条的引入，似乎都伴随着设计上的妥协和使用上的困惑。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/d5aef886130bc2fbe4790268def5bd97.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>触摸条的困境，正是这场交互革命的未完成状态——它试图打破传统物理按键的主导地位，带来更灵活的控制方式，但却陷入了硬件浪漫主义与软件现实主义的夹缝中。</p><p>硬件方面，触摸条本应提升操作的直观性和简便性，但由于位置的设计不够人性化，反而成为了误触的源头。TAKU的触摸条被安置在键盘的两侧，虽然能保持设计简洁，但并未考虑到用户的自然手部操作习惯。尤其是左手，常常会习惯性地搭在键盘的左侧边缘，而触摸条的设计让这一姿势成为误触的导火索。频繁的误触不仅让用户体验变差，也破坏了触摸条本应提升效率的初衷</p><p>触摸条的硬件问题只是其困境的一部分，软件层面的设计同样没有实现它应有的潜力。尽管触摸条功能丰富，可以调节音量、亮度、连接模式等，甚至提供更复杂的操作，但它的使用体验却显得过于单一，无法根据不同场景进行智能化的调整。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/0bb02001fe037d5cfddc4e3276bcd98a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>但我并不想在这里去苛责TAKU，因为触摸条的尴尬处境在某种程度上并不独属于这款键盘，而是所有类似设计的通病。就像苹果的 Touch Bar，它作为一项笔记本键盘的硬件革新，同样遭遇了类似的命运——初期被寄予厚望，最终却因多方面的限制，没能赢得消费者的青睐。</p><p>尽管我指出了触摸条的缺点，这并不影响我对TAKU作品的喜爱。实际上，正是像TAKU这样愿意改变的作品，才值得我们给予更多支持。</p><p>而在TAKU发货之后，NAPE也在通过持续地更新固件，来完善产品本身，例如触摸条的防误触模式。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/b1ba9d0563bf363feac2217b544787b4.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>近年来，低价产品在市场上的泛滥让人感到痛心。这些打着客制化旗号的低价产品，吸引了大量刚入门的玩家进入市场，但他们往往因为产品质量差、使用体验差而失望退出，甚至对整个客制化市场产生了厌恶情绪。</p><p>我希望朋友们能理解，我并不是反对低价，作为一个玩家，我是希望越来越多好产品，能以合理的价格面向消费者，我也不止一次聊过，我希望键盘的市场，不再被所谓的限量和炒作所裹挟，而是真正地为设计所买单，也正如设计师毛三所言：</p><blockquote><p>看到自己热爱的圈子因为这些粗制滥造的产品而被误解，内心的惋惜与痛心是无以言表的</p></blockquote><p>而在这个被参数内卷与价格战撕裂的键盘市场，需要有TAKU这样的作品，去缝合「客制化」这个词被廉价化、污名化的伤口。</p><p>我也希望更多创作者，在颠覆所谓的客制化规则之前，先认真地了解这里的社区和文化。</p><h2>关于NAPE</h2><p>说来有些惭愧，在接触TAKU之前，我对毛三的印象，仅限于一位特别能「延期」的设计师，而我对NAPE的了解也极为有限。但这次TAKU的推出，彻底打破了我对NAPE的固有认知——它让我看到了「理想主义」在商业产品中的另一种可能。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/8de1a653d99d394a689cfc4d911deccd.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我听过不少人对于Manda2.0的评价，一把「直男键盘」。无论是大刀阔斧的方正造型，还是蜂窝网格的机能风装饰，抑或是对于屏幕、RGB、多种模块功能的追求，以及死磕驱动和自研的这股固执劲。</p><p>在创作内容的这两年，我对键盘的兴趣已经逐渐转移到了对键盘背后「人」的好奇，毛三可以为了玩一把键盘开一个工厂，做一个方案忙碌几百个日夜。我一直觉得，像是这般殷实任性的玩家，或许是不会有太多纷扰的烦恼。但TAKU的推出，让我不禁对此感到一丝好奇——这样的创作者，是偏执狂、殉道者，还是商人？</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/92bf197a48e25171da0737d119fdba3f.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>而在制作这篇内容的过程中，我和毛三聊了很多，旁人说他比较内向，但我确实没有觉察到这点。在和毛三对话的过程中，颠覆了我之前许多的猜测，例如看似「财大气粗」的背后，实则对于成本的把控和理解远超普通工作室。</p><blockquote><p>你花的多少钱的代工费就是多少的质量，因为时间最会帮你计算成本，好的产品，不是让用户为成本买单，而是让成本为用户服务。</p></blockquote><p>以及他对NAPE最纯粹的愿景——传播客制化的快乐给更多人。</p><blockquote><p>我们将在TAKU65发货结束后，面向键圈开放我们的PCB方案，以及对外开放我们的快拆结构的使用</p></blockquote><p>我想，TAKU对于许多玩家来说，并不是那么「完美」的一把键盘，它的软件生态让人又爱又恨，它的内胆设计有些一碗水端平，它不够End game，也不是傻瓜式的「小白友好」，但这些不完美并不会遮挡它最可贵的特质——它不试图成为所有人的终点，而是邀请每个人踏上属于自己的客制化之旅。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/719b0109c3f49eaaaeafe2d0319adfc8.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>更重要的是，NAPE 选择了一种更难却更有意义的道路——通过长期固件更新的方式，让作品不断完善，而非仅仅追求首发时的短暂高光。在一个充斥着快销思维、讲求短期收益的市场里，这样的长期主义显得尤为珍贵。</p><p>而对于一个还在野蛮生长的键圈来说，这种产品里的真诚，远比精打细算地讨好玩家要可贵得多。</p><p>也希望未来，能有越来越多这样「入门级」键盘，为键圈注入新的活力与可能性。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/03/6b1e0cb80e0e199c11f8ddb4edc2c91d.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96885</id>
            <title>让电纸书阅读记录可视化：Kindle越狱必装插件KoReader入门指南</title>
            <link>https://sspai.com/post/96885</link>
            <guid isPermaLink="false">https://sspai.com/post/96885</guid>
            <pubDate></pubDate>
            <updated>Sun, 02 Mar 2025 22:54:07 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Kindle越狱, KOReader, 远程传书, 笔记导出

<br>
<br>
总结: 本文介绍了Kindle越狱的方法及其优点，特别是通过KOReader插件实现阅读统计、远程传书和笔记导出等功能。作者详细比较了Kindle原生系统与KOReader的优缺点，指出KOReader在功能上更为强大，但无法与亚马逊云端同步。文章还提供了KOReader的快速上手指南，并详细说明了如何通过WebDAV实现远程传书和使用File Browser插件导出笔记。最后，作者分享了个人使用经验，并鼓励读者探索KOReader的更多功能。 </div>
                        <hr>
                    
                    <p>今年一月，爆料出极其简单的<a href="https://mp.weixin.qq.com/s/_6aoI3UACoOgwInBNcGGuQ">Kindle越狱办法</a>，而且几乎适用于所有系统版本（版本号在5.17.1.0.4之前）。越狱后，通过插件KOReader，我最终实现了统计阅读时间、一键远程传书、一键远程导出阅读笔记等效果。</p><p>&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/544dad3b4d30c6c7be520852ca507bc6.gif" /><figcaption>不到10s即可完成书摘导出</figcaption></figure><p>实现以上效果的配置流程并不复杂，大约半小时完成。如果你也想越狱或者正在犹豫，这篇入门指南可供你参考。如果你并未迁移到美亚账号，一直使用有线传输到Kindle，那么我强烈建议你使用本文的方法，传入、传出都可以摆脱数据线。本文分为以下部分：Kindle原生系统与KOReader的优缺点、KOReader快速上手、实现KoReader远程传书和笔记导出三部分。</p><h2>Kindle原生系统与KOReader的优缺点</h2><p>我已经用kindle好几年了，之前也尝试过越狱，但步骤非常复杂（或许大家也听过越狱的“神秘手势”），系统版本也不适用，只好放弃了。但我久闻越狱插件KOReader能统计阅读的时间和速度，一想到能把Kindle阅读时间掏出来惊艳众人，我就心里痒痒，所以这次果断越狱。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/9dbfb39bd580022885be37030a013801.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>曾经kindle越狱的神秘手势</figcaption></figure><p>越狱前，我是美亚账号，使用send to kindle功能（<a href="https://mp.weixin.qq.com/s/reqWbPNK6K6TTGYSN7Toew">“Kindle管家”小程序</a>）发送书籍到Kindle，用数据线导出My clippings.txt文件，然后统一保存到“纸间书摘”APP。</p><p>这样做的好处是：</p><ol><li>随时随地远程传输书籍，非常方便，非常稳定；</li><li>多设备阅读很方便，书籍和阅读进度都会同步在亚马逊云端（手机电脑平板都可以同步）；</li><li>只要定期导出My clippings文件，就能统一保存书摘。</li></ol><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/c09f2c18222d885be0bf7d9509551f16.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>书摘统一管理</figcaption></figure><p>缺点是：</p><ol><li>My clippings.txt文件必须有线导出（<a href="https://sspai.com/post/87401">Kindle app也可以远程分享笔记</a>，但我用iPhone没有成功，而且这种方法似乎会丧失阅读时间的原数据）</li><li>远程传输数据有延迟，而且有小概率会被和谐（我曾传输《邓小平时代》传不过去，真是非常奇怪）；</li><li>不支持统计阅读数据。</li></ol><p>所以越狱的目标，就是在最大程度保留原生系统优点的同时补足缺点。先说明结论，越狱后使用KOReader阅读可以成功实现保留优点、弥补缺点，但这种方式跟亚马逊云同步之间有冲突，云同步只有原生系统能实现，原因见下文。</p><p>这也是为什么，我强烈推荐没有选择迁移账号的读者给Kindle越狱。因为越狱不仅继承比原生系统更加强大的功能，读者还不用纠结KOReader阅读和云端同步选哪一个的问题，是性价比非常高的一个方案。KOReader还有很多强大功能，请参考<a href="https://mp.weixin.qq.com/s/VQLwwoQF4oxQP1PXdy88JQ">链接</a>。</p><h2>KOReader快速上手</h2><p>Kindle越狱本质是获得超级管理员权限，可以实现更多的功能。原本存储在Kindle当中的书籍、笔记等都不会受到影响，原生系统的阅读体验也是完全不变的。</p><p>我是按照<a href="https://mp.weixin.qq.com/s/_6aoI3UACoOgwInBNcGGuQ">“Kindle精选君”的方法</a>越狱并安装KOReader的。要注意的是，视频中有些步骤过得很快，要仔细看清文件到底在哪个路径，而且文件包中tar格式的压缩包在Windows上需要第三方工具解压。</p><p>成功启动KOReader后，Kindle会显示类似文件管理的界面。到这步会有点懵，应该怎么开始阅读？如果你习惯使用USB有线传输，那你很快就会在documents文件夹中发现你的书，这时可以愉快地阅读了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/3be04e63eecccbeeff5e979e74410e5a.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>KOReader界面</figcaption></figure><p>点击屏幕顶部打开菜单，选择🛠，就可以看见“阅读统计”界面，阅读时间和速度都会显示在这里，还可以被设置成屏保（⚙️-屏幕设置-屏保-墙纸-在休眠屏幕上显示阅读进度），看起来非常爽。如果你设置了屏保，可能会发现睡眠时屏幕正中央会有一个讨厌的“！睡眠”，只需要点开⚙️-屏幕设置-屏保-屏保显示信息，把“在屏保上添加自定义信息”关闭，“！睡眠”就会消失。</p><figure class="image ss-img-wrapper image_resized" style="width: 294px;"><img src="https://cdnfile.sspai.com/2025/03/02/e987130ac8e24679af8b051f7b551fe2.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>阅读统计屏保</figcaption></figure><p>但如果你习惯使用类似send to kindle类似的、经过亚马逊云端的传输方式，大概率会无论如何都找不到你存的书。其实文件还在documents文件夹中，只不过是以.kfx格式存在，连接到电脑就可以看到。这个格式是亚马逊自有格式，相当于azw3的升级版，而KOReader是无法读取azw3格式的，所以会看不到文件。</p><p>不幸的是，我尝试了多种方式，发现只要经过传输方式经过Kindle云端，就会被一律转换为kfx格式。这也是为什么说，使用KOReader和Kindle云端同步只能二选一。</p><h2>实现KoReader远程传书和笔记导出</h2><h3>远程传书的实现办法</h3><p>我发现KOReader不能通过亚马逊云端远程传书后，正准备心灰意冷地放弃，突然发现KOReader有“云存储”功能，点开界面发现支持Dropbox、FTP和WebDAV三种方式。我选择了WebDAV，大家最熟悉的就是<a href="https://www.jianguoyun.com/">坚果云</a>。配置完成后，只需要把书籍文件传到坚果云，Kindle上就可以直接在“云存储”菜单中下载阅读，非常方便。配置需要5-10分钟，完全免费。</p><figure class="image ss-img-wrapper image_resized" style="width: 279px;"><img src="https://cdnfile.sspai.com/2025/03/02/c9fe43ded7bc8f1e1874aa52fd4359f8.gif" /><figcaption>书籍下载示例</figcaption></figure><p>具体的配置过程是：</p><ol><li>菜单-🛠-云存储，点击左上角➕，选择WebDAV；</li><li><a href="https://docs.xmnote.com/#/backup/guide?id=%e2%98%81%ef%b8%8f-%e4%ba%91%e5%a4%87%e4%bb%bd%ef%bc%88%e5%9f%ba%e4%ba%8e-webdav-%e5%8d%8f%e8%ae%ae%e5%ae%9e%e7%8e%b0%ef%bc%89">创建坚果云账户并设置授权</a>（这里的说明文档借用了“纸间书摘”）</li><li>任意填写服务器显示名称<br />地址填写<i>https://dav.jianguoyun.com/dav/</i><br />用户名填写你的坚果云账号<br />密码填写刚刚授权记录中的“应用密码”</li></ol><p>这样就配置好了，现在可以实现不用被和谐、没有延迟的远程传书。</p><h3>笔记远程导出办法</h3><p>首先，KOReader阅读的笔记跟Kindle原生系统的笔记会是两个不同的文件，你可以选择笔记导出的文件夹位置和导出格式，可以参考KOReader<a href="https://koreader.rocks/user_guide/#exportinghighlights">官方文档</a>。如果在导出格式中勾选MyClippings格式，你就可以在自己指定的位置，得到与原生系统笔记格式完全相同的文件，后续的处理也没有差别。</p><p>要导出这个笔记文件有很多办法，这里介绍一种使用插件<a href="https://bookfere.com/post/823.html">File Browser</a>的办法。这个插件的好处在于：开启后，你可以永久地、随时在局域网中任意设备上读取Kindle中的任意文件。这个插件会显示Kindle的ip地址，只要在局域网中任意设备上输入这个ip地址，就可以读取Kindle中任意文件，也可以上传、下载文件。几乎算是永久摆脱了有线传输。</p><p>如果你是纸间书摘的会员，开启了API传输，就可以实现文章开头的效果。实现效果实际上用到了导出“纸间书摘”格式笔记和手势设置两个功能：</p><ol><li>在导出格式勾选上纸间书摘，你可以点进这个选项查看具体的配置方式；</li><li>设置好后，开启纸间书摘的“API导入”，点击🛠-导出标注-导出本书或历史所有书籍笔记，测试是否成功；</li><li>⚙️-点击与手势-手势管理，点击你想设置的任意手势，点进去后选择阅读器--导出本书所有笔记。</li></ol><p>我设置的手势是长按右上角导出本书笔记。每读完一本书，打开纸间书摘的API传输，长按右上角就直接导入了书摘，非常方便且优雅。</p><h2>结语</h2><p>KOReader还有很多强大的功能，你可以根据自己的需要在<a href="https://koreader.rocks/user_guide/#exportinghighlights">官方文档</a>中自己学习，本文只介绍如何快速上手阅读以及实现书籍远程导入、书摘远程导出两项功能。你也可以把阅读统计设置为屏保，我每次看见这个屏保都想读会书。</p><p>写本文的初衷是：我很想用KOReader实现阅读统计，越狱后却一脸懵，完全不知如何上手，尤其是找不到书存在哪。上网查了很久也没有发现相关解决方案，摸索后得出了使用方法。在此分享给大家，如果文中有错误或不清楚的地方，欢迎在评论区指出；如果你有更好的使用技巧，也欢迎一并分享。</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96890</id>
            <title>ZeroLaunch：专为Windows打造的极简应用启动器</title>
            <link>https://sspai.com/post/96890</link>
            <guid isPermaLink="false">https://sspai.com/post/96890</guid>
            <pubDate></pubDate>
            <updated>Sun, 02 Mar 2025 22:52:52 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: ZeroLaunch, 应用程序启动器, 智能搜索, 开源

<br>
<br>
总结: ZeroLaunch 是一款专为 Windows 平台设计的应用程序启动器，旨在提供高效的搜索和启动体验。该软件采用 Rust + Tauri + Vue.js 构建，具有本地运行、智能搜索、功能纯粹和开源等特点。智能搜索支持全称、拼音、模糊和首字母搜索，并能根据历史启动次数优化排序。软件专注于应用程序搜索，支持自定义搜索路径和 UWP 应用搜索。未来发展方向包括优化现有功能，并可能扩展到 Linux 和 MacOS 平台，但不会向多功能集成平台发展。 </div>
                        <hr>
                    
                    <h2><strong>一句话介绍</strong></h2><p style="margin-left: 0px;">ZeroLaunch 是一款专为 Windows 平台精心打造的应用程序启动器，致力于提供极致高效、快捷的搜索体验，让您瞬间找到并启动所需应用。该软件使用 Rust + Tauri + Vue.js 构建。</p><h2><strong>软件的界面</strong></h2><figure class="image ss-img-wrapper"><img alt="主界面" src="https://cdnfile.sspai.com/2025/03/02/article/5202502f794bbbdfcdaa8aa43471af46.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2><strong>开发该软件的动因</strong></h2><p style="margin-left: 0px;">这个软件是因为我个人的需要而开发的，目前有类似功能的软件有很多，比如 <code>uTools</code>，<code>PowerToys</code>，<code>Listary</code>，<code>Quicker</code>等。不过它们都有很多集成的功能，比如文件搜索，剪切板管理等。对于我来说，这些功能我都使用不上。而我最频繁使用的功能——软件搜索与启动，无法满足我的需求。比如，当我想要打开<code>Goolge Chrome</code>时，手一滑，按成了<code>chorm</code>，这样就搜索不到了。因此，这个软件就被开发了出来。</p><p style="margin-left: 0px;">为什么要使用 Rust：ZeroLaunch 曾采用 C++ 与 Qt 构建，但为了可以学习到更多的内容，最终完成了从 C++ 到 Rust 的技术栈迁移。C++ 版本可以在我的 Github上找到。</p><h2><strong>软件的特性</strong></h2><p style="margin-left: 0px;">软件特点可以归为以下的四点：</p><p style="margin-left: 0px;">本地运行：软件采用完全离线的方式运行，不会上传数据（我也没钱塔服务器XD）。</p><p style="margin-left: 0px;">智能搜索：该软件采用了与上述软件完全不同的搜索算法，支持全称，拼音，模糊，首字母搜索，还能基于历史启动次数实现动态权重调节优化排序结果，配合多线程处理技术，即便在低配置电脑（e5-2673v3）上也能实现毫秒级响应速度。</p><p style="margin-left: 0px;">功能纯粹：软件只专注于应用程序的搜索，同时支持自定义搜索路径与UWP应用搜索，可以满足大多数人的使用需求。</p><p style="margin-left: 0px;">项目开源：软件采用 <code>GPLv3</code> 许可证，项目的仓库可以在下文找到。</p><h2><strong>软件的操作指南</strong></h2><p style="margin-left: 0px;">该软件的使用方法很简单，要记住的快捷键不多。</p><figure class="table"><table><thead><tr><th style="border-bottom-color: initial; border-bottom-width: 0px; border-left: 1px solid rgb(223, 226, 229); border-right: 1px solid rgb(223, 226, 229); border-top: 1px solid rgb(223, 226, 229); padding: 6px 13px;"><strong>功能</strong></th><th style="border-bottom-color: initial; border-bottom-width: 0px; border-left: 1px solid rgb(223, 226, 229); border-right: 1px solid rgb(223, 226, 229); border-top: 1px solid rgb(223, 226, 229); padding: 6px 13px;"><strong>快捷键</strong></th></tr></thead><tbody><tr><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;">呼出搜索栏</td><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;"><code>Alt + Space</code></td></tr><tr><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;">上下选择项目</td><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;"><code>↑/↓</code> 或 <code>Ctrl+k/j(仿Vim的操作)</code></td></tr><tr><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;">启动选中程序</td><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;"><code>Enter</code></td></tr><tr><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;">管理员权限启动</td><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;"><code>Ctrl + Enter</code></td></tr><tr><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;">清空搜索框</td><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;"><code>Esc</code></td></tr><tr><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;">隐藏搜索界面</td><td style="border: 1px solid rgb(223, 226, 229); padding: 6px 13px;">点击外部区域</td></tr></tbody></table></figure><h2><strong>软件的功能</strong></h2><h3><strong>应用程序搜索</strong></h3><p style="margin-left: 0px;">首先来介绍一下应用程序的搜索功能，ZeroLaunch-rs支持全称，模糊，拼音其及混合查询。</p><p style="margin-left: 0px;">先来介绍一下<strong>直接搜索</strong>，以搜索 <code>Typora</code> 为例，直接按顺序搜索打出字母即可，这里就只演示按前两个字母了：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/eb88fe3dffb977d958afaa8a9836f2c7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">接下来是<strong>模糊搜索</strong>，还是以搜索<code>Typora</code>为例，如果我在输入字母的时间不小心手滑了，比如按成了<code>ty-</code>（模拟手指按到了<code>P</code>键上方的<code>-</code>键），那么搜索的结果如下：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/e4562e1ac369c4c34e1364d6d2367476.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">也可以当我按下<code>Enter</code>键时，不小心按到了上方的<code>\</code>键，其搜索结果如下：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/498f62751b6f16ea56c91b1b5daa0aa1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">可以看到，软件也是可以正确的匹配到目标应用程序的。</p><p style="margin-left: 0px;">接下来是<strong>首字母搜索</strong> ，以搜索 <code>visual studio code</code>为例，其首字母为 <code>vsc</code>。首字母也支持模糊匹配的功能。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/64c79bfe9c991cd41c42cb43e86657fa.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">接下来演示<strong>拼音搜索</strong>。这里以搜索 <code>网易云音乐</code> 为例，拼音搜索也是支持上述的全称搜索与模糊搜索的，但是由于是重复的内容，所以这里就只演示全称搜索了：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/1c1087adb64e416cf47729ce2eef1f60.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3><strong>常规设置</strong></h3><p style="margin-left: 0px;">常规设置就直接放设置界面的相关内容了，没有什么需要特别讲的：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/76600e2446377cdcf49b64f9352b4296.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3><strong>外观自定义</strong></h3><p style="margin-left: 0px;">外观设置支持自定义<strong>背景图片</strong>，搜索栏的字体大小与颜色，结果栏的字体大小与颜色，结果栏中选中项的颜色等</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/e7681e5c0d4a55ff871f9886bc37ab81.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px;">如果设置好背景图片以后，不知道应该给搜索栏的选中项什么颜色，可以直接点击 <code>计算图片主题色</code> 的按钮，让程序计算出目标图片的主题色，然后再微调一下即可。</p><p style="margin-left: 0px;">以下是我个人觉得好看的一些设置：</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/bbe3506174abfcc2ff28d9b5a2703737.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/5af62cbc611515b13f81672aee74a365.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/article/963756b57717f7680f4f03a71eebe3f7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3><strong>高级的配置</strong></h3><p style="margin-left: 0px;">具体的操作写在了项目的readme文件上了，这里只是介绍该软件的基本功能，所以就不详细介绍了</p><p style="margin-left: 0px;">支持的高级配置有：</p><p style="margin-left: 0px;">自定义搜索路径与不搜索路径（方便搜索自定义安装路径的软件）</p><p style="margin-left: 0px;">自定义应用程序的屏蔽词（可以直接不搜索指定的软件，加快算法的运行）</p><p style="margin-left: 0px;">自定义应用程序的固定权重（当搜索算法无法很好的满足要求时，可以使用这个来做微调）</p><p style="margin-left: 0px;">自定义文件搜索（需要逐个添加，用于满足用户少量索引文件的需求）</p><p style="margin-left: 0px;">自定义打开网页（通过添加关键字与网址，就可以实现直接搜索网址并打开）</p><p style="margin-left: 0px;">自定义配置文件的保存路径（将其设置到同步文件夹中后，则可以实现远程同步）</p><h2><strong>项目的地址</strong></h2><p style="margin-left: 0px;">项目可以在以下的地址中找到：</p><p style="margin-left: 0px;">Github：<a href="https://github.com/ghost-him/ZeroLaunch-rs">https://github.com/ghost-him/ZeroLaunch-rs</a></p><p style="margin-left: 0px;">Gitee：<a href="https://gitee.com/ghost-him/ZeroLaunch-rs">https://gitee.com/ghost-him/ZeroLaunch-rs</a></p><p style="margin-left: 0px;">GitCode：<a href="https://gitcode.com/ghost-him/ZeroLaunch-rs">https://gitcode.com/ghost-him/ZeroLaunch-rs</a></p><h2><strong>软件未来的方向</strong></h2><p style="margin-left: 0px;">只有确定了软件未来的方向以后，才好做下一步的打算。</p><p style="margin-left: 0px;">对于项目的短期目标，将会集中于程序的优化，功能的优化；对于项目的长期目标，可能会向多平台进军，比如Linux与MacOS。</p><p style="margin-left: 0px;">不过<strong>该软件将只会专注于应用程序的搜索与启动，不会向多功能集成的平台方向拓展</strong>。如果需要多功能集成的工具，不如直接试试上文说的那些效率工具，每一个都是非常优秀的软件。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96900</id>
            <title>DeepSeek 开源技术周：AI 基础架构的全链条创新与行业影响</title>
            <link>https://sspai.com/post/96900</link>
            <guid isPermaLink="false">https://sspai.com/post/96900</guid>
            <pubDate></pubDate>
            <updated>Sun, 02 Mar 2025 08:48:22 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: DeepSeek, 开源, AI技术, 推理加速, 分布式训练

<br>
<br>
总结: DeepSeek在2025年2月举办了一场为期六天的开源活动，向全球AI社区贡献了六项关键技术项目，涵盖了大模型推理加速、分布式训练优化、高效存储和系统架构等AI技术链条上的重要环节。通过开源，DeepSeek展示了其技术实力，并推动了行业的进步。这些技术不仅提升了AI服务的响应速度和效率，还降低了成本，使全球开发者能够免费获取这些技术，加速行业创新。DeepSeek的开源举措不仅为开发者提供了现成的技术组件，还鼓励了其他公司效仿，推动了开放技术生态的形成。 </div>
                        <hr>
                    
                    <p>在 2025 年 2 月的最后一周，中国人工智能初创团队 DeepSeek 搞了一场为期六天的开源活动，向全球 AI 社区贡献了六项关键的技术项目。这场技术盛宴几乎覆盖了 AI 技术链条上的每一个重要环节，从大模型推理加速、分布式训练优化，到高效存储和系统架构，一应俱全。简单来说，这次活动就是 DeepSeek 在秀肌肉，但同时也在用一种非常开放、透明的方式推动整个行业往前迈了一大步。</p><p>通过这篇综述，我想带你一起深入了解这些技术的背景、原理，以及它们到底能给普通用户和行业带来哪些实际的好处。别担心，即使你是刚入门的小白，我也会用轻松的方式和你聊聊这些「看起来很复杂」的技术。</p><h2>开源的文化基础：从理念到行动</h2><p>提到 DeepSeek，你可能第一个想到的就是他们火遍全球的大语言模型 R1。这个模型不仅性能堪比西方最顶尖的系统，而且训练成本还更低。当时连外媒 Reuters 都惊叹，直接用了「震动全球 AI 行业」来形容它的出现。DeepSeek 的创始人梁文峰在采访中坦言，他们并没有急着把这些技术换成钱，而是更看重通过开源获得的影响力。他的原话是这样：「被别人追随我们的创新，是一件让人很有成就感的事。开源更像是一种文化行为，通过贡献开源，我们能赢得尊重。」正是因为这种「透明至上」的开源理念，DeepSeek 在 2 月 21 日宣布启动了「开源周」活动。他们承诺一周内每天都公开一个代码库，用他们自己的话说，是用「小而真诚的进步」回馈社区。</p><p>要知道，很多中美 AI 公司习惯于对核心技术严格保密，而 DeepSeek 偏偏反其道而行之，把推理加速、分布式通信、矩阵运算、并行策略、文件系统，甚至大规模推理架构这些「压箱底」的技术全都毫无保留地拿出来分享了。</p><p>也许你会问，这些技术跟普通人有啥关系呢？其实关系还挺大的，比如更快的推理系统能让你的聊天机器人回复消息变得「秒回」，高效的存储方案则能帮助企业降低成本，最终让你用 AI 服务的价格也跟着下降。更重要的是，全球开发者现在都可以免费获取这些开源的「技术积木」，自己搭建 AI 系统。这就像乐高积木一样，更多人参与进来，整个行业的创新速度就能大大加快。</p><h2>FlashMLA：大模型推理的高效突破</h2><p>开源周的第一天，DeepSeek 发布了一个让很多开发者激动的项目：FlashMLA。它是专为 NVIDIA Hopper 架构的 GPU 设计的高效解码内核，核心技术叫做「多潜注意力」（Multi-head Latent Attention，简称 MLA）。</p><p>简单来说，FlashMLA 就是为了让大模型在生成文字时速度更快。你用过 ChatGPT 吧？当你输入问题后，模型逐字逐句地给你回复，这种「逐字生成」的过程学名叫做「自回归解码」。而 FlashMLA 就能让这个过程变得更快，几乎能做到实时响应。</p><p>那么，FlashMLA 是怎么做到这一点的呢？我们一步一步来看：</p><p>大语言模型背后通常都有一个叫「Transformer」的架构，它用「多头注意力」（Multi-Head Attention，简称 MHA）机制，让模型在理解句子时更全面。然而随着处理文本越来越长，模型需要储存大量的键值缓存（K/V cache），这样模型才能记住上下文信息。问题来了：缓存太大会拖慢速度。</p><p>过去研究者提出了一些方法，比如「多查询注意力」（MQA），让所有注意力头共享一组键值缓存，这样虽然性能会略微下降，但好处是节省了不少内存空间。</p><p>而 DeepSeek 的 MLA 采用了另一种更高级的方法。他们把键值信息压缩成更紧凑的「潜在」向量，大幅减少了缓存体积。FlashMLA 更是在 MLA 的基础上进一步优化，专门针对 Hopper 架构 GPU，使用了定制的 CUDA 内核，把计算效率提升到了极致。比如它支持半精度 BF16 运算，采用分页缓存技术，能够完美利用 GPU 显存，在 H800 GPU 上甚至能实现每秒 3000GB 的内存带宽和 580 TFLOPS 的计算速度。</p><p>对你来说，这意味着什么呢？举个例子，当你用聊天机器人、翻译软件时，如果背后的模型用了 FlashMLA，回复速度就会大幅提升，体验会顺滑许多。不信你想想，每次提问都能迅速得到回复，是不是感觉特别爽？</p><p>对企业开发者来说，开源 FlashMLA 等于帮他们省了不少事。不用再从头开发底层的加速代码，可以直接使用 DeepSeek 已经优化好的工具，更专注于创新应用。</p><p>而对整个社区来说，FlashMLA 开源带来的透明度也树立了新标杆。不少公司像 Meta、xAI 也开始开源类似工具，整个行业的技术标准和效率都会因此受益。</p><p>总的来说，FlashMLA 给我们展示了 AI 优化的新思路：通过共享和压缩注意力信息，不仅让模型效果保持优秀，更让处理速度有了突破性的提升。这就是技术的魅力所在：一小步的优化，也许就能给你的生活带来巨大的改变。</p><h2>DeepEP：专家模型的高效通信框架</h2><p>第二天，DeepSeek 推出了一个名为 DeepEP 的项目。这可是全球首个专门针对「混合专家（Mixture-of-Experts，简称 MoE）」模型的开源专家并行通信库。 你可能好奇什么是 MoE 模型，其实很简单：就像一家公司里，每个员工各有所长，MoE 模型也是把任务分配给不同「专家」子模型来分别处理不同类型的任务。这样做的好处，就是模型虽然规模巨大，但每次只需要用到一小部分专家，既精准高效，又省资源。</p><p>不过，这样的设计也有个麻烦，就是专家之间需要频繁沟通、交换数据。想象一下，你的公司里每个人坐在不同的办公室里，每次任务来了，还得跨办公室传送文件，这个过程不仅麻烦，而且很耗时间，尤其是在多个 GPU 之间来回通信，数据交换很快就成了整个系统的瓶颈。谷歌的 GShard 和 Switch Transformer 已经证明 MoE 模型非常强大，但也明确提出，要提升效率，必须先解决通信成本和专家负载不均衡这两个大问题。</p><p>DeepEP 就是为了解决这些麻烦而诞生的。它提供了一系列高度优化的 GPU 通信内核，目标就是让专家之间沟通得更顺畅、更高效。具体来说，它针对 GPU 内部的高速通信（通过 NVLink）以及跨节点通信（通过 RDMA 网络）分别做了精细的优化。举个实际例子吧，在 H800 GPU 集群上，DeepEP 可以充分利用 NVLink 的 160 GB/s 带宽和 RDMA 网络的 50 GB/s 带宽，这相当于让专家之间从「发邮件」变成了「直接打电话」，沟通效率大幅提升。</p><p>更有趣的是，DeepEP 还支持一种超低精度通信格式 FP8，这有点像把文件压缩后再传输，数据量大幅缩减，传输自然就更快了。而且，为了满足不同场景的需求，DeepEP 提供了两套内核：一种追求高吞吐量，适合训练和推理初始阶段；另一种强调低延迟，适合推理解码阶段的快速响应。它还能边通信边计算，让 GPU 的资源利用率达到最佳状态。</p><p>DeepEP 还特别针对 DeepSeek 自己的 MoE 算法进行了优化，尤其是在数据传输的非对称场景，比如从高速 NVLink 到较慢的 RDMA 网络时，它会自动使用特别定制的内核进行调整，确保效率最大化。</p><p>对做大模型开发的企业来说，DeepEP 的开源意义重大。以往你要构建一个高效的 MoE 系统，除了需要顶级工程师，还得投入巨大的成本；而现在有了 DeepEP，门槛大幅降低。研究人员可以轻松地在多机多卡的环境里训练数千亿参数的模型，甚至扩展到几百个 GPU 都不会出现效率瓶颈。</p><p>而对普通用户而言，你可能感受到的变化是：将来聊天机器人、推荐系统等 AI 应用的响应速度会更快、更平滑，因为后台专家之间的沟通不再拖后腿。DeepEP 的开源，就好比在 AI 世界修了一条快速通道，让更多企业和开发者轻松上路。这不仅让更多团队可以尝试开发大规模稀疏模型，更可能推动整个行业走向模型更大、计算资源消耗却更低的时代。</p><p>就在 DeepEP 发布当天，已经有不少公司按捺不住，纷纷宣布了自己的大模型开发计划，这足以说明 DeepEP 带来的震动效应。未来，像 DeepEP 这样的工具可能会逐渐成为标准配置，推动更多 MoE 模型进入主流应用。</p><h2>DeepGEMM：矩阵运算的性能突破</h2><p>第三天，DeepSeek 又带来了一个新宝贝：DeepGEMM，一个高度优化的矩阵乘法库。你可能还不知道，矩阵乘法（General Matrix Multiplication，简称 GEMM）可以说是 AI 计算中最基础也最重要的操作，大部分的模型训练和推理都离不开它。</p><p>你或许会问，为什么矩阵乘法这么重要？其实，像 Transformer 模型里那些关键的「全连接层」和「注意力机制」投影层，背后全靠大量的矩阵运算支撑着。</p><p>过去，英伟达开发了 cuBLAS，Google 为 TPU 打造了专用矩阵单元，还有学术界的 GotoBLAS 等项目，大家都想方设法加速这个基础运算。最近几年，GPU 硬件升级带来了张量核心（Tensor Core），利用 FP16、BF16，甚至 FP8 这种低精度运算，速度有了明显提升。不过，市面上的通用库有时候并不够灵活，没办法完美匹配特定模型的需求，于是 DeepSeek 自己出手了，针对自家 V3 和 R1 模型的常见矩阵规模量身定制了 DeepGEMM。</p><p>DeepGEMM 最值得一提的是它在 FP8 精度下的超高性能。比如在英伟达 Hopper 系列芯片（比如 H100 和 H800）上，它每秒可以执行超过 1350 万亿次 FP8 运算（TFLOPS），比常规 FP16 快了好几倍，轻松实现性能飞跃。你可能想不到，它最核心的逻辑代码只有短短约 300 行，简洁到极致，同时又高效到极致，很方便开发者阅读和修改。</p><p>而且，它还支持即时编译（JIT），也就是说，不需要提前编译，根据实际的矩阵尺寸，随时动态生成最适合的代码。此外，DeepGEMM 除了支持常规密集矩阵布局外，还特别支持两种 MoE 专用的矩阵布局方式，能直接加速专家模型的计算。在大部分情况下，它甚至比专业优化过的 cuBLAS 更快，堪称免费的顶级替代方案。</p><p>那么具体到你我身边的应用，DeepGEMM 能带来什么呢？比如，你在开发 AI 模型训练时，用 PyTorch 或 TensorFlow 时换用 DeepGEMM，就能显著缩短训练时间，特别是在资源有限的环境下也能跑得更快。</p><p>推理阶段，它能让你的服务器同时处理更多请求，实时翻译、对话系统等场景的用户体验会更加顺畅、丝滑。甚至科学计算、图像处理领域也能搭便车，矩阵分解、物理仿真都能因此加速不少。</p><p>DeepGEMM 的开源不仅意味着开发者再也不用花钱购买昂贵的商业库，甚至小团队也能用上世界一流的矩阵优化工具，平等地享受高性能计算的便利。而且，社区可以继续在这个基础上优化，比如扩展到其他硬件平台、增加稀疏矩阵支持等等，推动整个 AI 基础设施不断进步。低精度运算，如 FP8，也可能逐渐成为未来训练推理的主流，带动行业降低资源消耗，提高效率。</p><p>所以说，DeepGEMM 的出现，不仅是 DeepSeek 自己的一次技术飞跃，也给全行业带来了低成本、高性能计算的福音。</p><h2>DualPipe 与 EPLB：并行训练的系统优化</h2><p>第四天，DeepSeek 一口气发布了两个很实用的并行优化工具：「DualPipe」和「EPLB」。虽然名字看起来有点技术范儿，但其实都是 DeepSeek 在超大模型训练过程中踩坑无数后，精心打磨出来的实战工具，一个针对流水线并行的效率，另一个解决专家并行的负载均衡问题。</p><p>我们先来看 <strong>DualPipe</strong> 。当模型的参数规模大到单个 GPU 装不下的时候，就需要用「流水线并行」技术，把模型切成几个阶段，每个阶段分给不同的 GPU，就像工厂里的流水线，每个环节做自己的工作。但流水线并行有个天然缺陷，就是经常会出现「等待现象」：比如前一个阶段还没做完，后面的阶段只能闲着干等，尤其在反向传播的时候特别明显，GPU 就白白浪费了不少时间。</p><p>DualPipe 就是专门为解决这个问题而设计的。它的核心思想很聪明：在 GPU 做反向计算的同时，提前启动下一个批次的前向计算，这样前后两个过程就可以并行起来，不再「排队等候」。举个简单例子，就像你在洗衣服时，晾晒一批衣服的同时，下一批衣服也已经放进洗衣机开始清洗了，整个流程效率一下提高不少。DualPipe 还能做到计算与数据通信同步执行，大幅减少等待时间，实测 GPU 的利用率能提升 30% 以上。</p><p>再说说另一个工具 <strong>EPLB</strong> 。它专注于专家并行场景的负载均衡问题。我们前面说过，在 MoE 架构中，每个 GPU 上运行多个专家模型。但专家之间的工作量往往不均衡，就像公司里有些部门总是加班忙到飞起，另一些部门却轻松得多，这就浪费了整体资源。</p><p>EPLB 就好比一个智能的任务分配经理，当它发现某个专家「加班严重」时，就会快速复制一个这个专家的副本到其他 GPU 上，分担压力。这种做法相当于突然调动更多人力去支援最忙碌的部门。同时，EPLB 还会聪明地选择专家副本的部署位置，尽量把相关的专家放到同一节点上，减少跨节点的数据通信成本。值得一提的是，EPLB 核心算法文件 <code>eplb.py</code> 已经开源出来，开发者只需要输入专家负载的信息，它就能自动输出一个最优的负载分配方案，简单好用又透明。</p><p>对开发者来说，这两个工具的开源意味着你再也不用从零开始设计复杂的调度机制了。尤其是中小型团队，之前不敢碰超大规模模型，现在有了 DualPipe 和 EPLB，可以放心大胆地尝试了。</p><p>未来，这些工具或许会成为主流 AI 框架的一部分，甚至可能演变为云服务中的调度功能，成为开发者标准的工具箱。</p><p>对普通用户而言，这些优化带来的直接感受，就是训练速度和效率的大幅提升，AI 应用迭代更快，服务响应更流畅。节省下来的资源还可以用在其他创新上，最终你享受到的服务性价比也会更高。</p><p>DeepSeek 这次提供的 DualPipe 和 EPLB，就像是一次大模型训练技术的经验公开课，帮助全行业一起提高效率，真正把大规模 AI 训练的门槛降了下来。</p><h2>3FS：AI 专用高性能存储系统</h2><p>第五天，DeepSeek 又拿出了一个实打实的技术：「3FS（Fire-Flyer File System）」，一个专门针对 AI 工作负载设计的高性能分布式文件系统。同时，他们还额外提供了一个轻量级的数据处理框架，叫做 Smallpond。</p><p>你可能会觉得，文件系统这种东西听起来离你很遥远。但其实，它就像 AI 模型训练背后的「数据高速公路」。在训练大模型的时候，数据的读写速度往往容易被忽视，可它却非常关键。比如，你手头有上百个 GPU，但如果你的存储系统不给力，数据喂不够快，GPU 就只能干等着浪费算力，这就像赛车手遇到堵车一样，无论技术多好也跑不起来。</p><p>传统的分布式文件系统，像 HDFS 和 Ceph，在一般的大数据场景中表现不错，但 AI 场景对文件系统有着更高、更特别的要求，比如超高的吞吐量、小文件随机读取，以及多个 GPU 并发访问等特殊需求。3FS 就是专门为这些需求量身定制的。</p><p>我们来看几个具体的数据表现：在一个由 180 个节点组成的集群上，3FS 可以达到每秒 6.6 TiB 的读取吞吐量，这个速度相当于每秒能读取几千部高清电影，真正的速度怪兽。而在单个节点上，它进行 KV 缓存查找的速度峰值也能超过 40 GiB/s，这意味着它不仅能高速「跑大路」，还能在复杂数据中快速找到你想要的信息。</p><p>在传统的数据任务基准测试 GraySort 中，3FS 仅用了 25 个节点就实现了每分钟 3.66 TiB 的排序速度，说明即使在传统场景，它也能大展身手。此外，3FS 的架构采用去中心化设计，没有单点故障风险，并且还能保证强一致性。换句话说，就是它又快又稳定，关键时刻还能扛得住压力。</p><p>DeepSeek 在开发他们的 V3 和 R1 模型时，全程都用了这个 3FS 文件系统，从数据预处理到训练，再到推理缓存，整个流程下来非常顺畅。而搭配它的 Smallpond 框架更是提供了 PB 级数据的高效处理能力，简单易用，特别适合大量数据的快速处理任务。</p><p>对开发者和企业来说，3FS 的开源意味着什么呢？意味着你不用再花重金去买商业存储设备了，直接用 3FS 就能搭建出一个媲美甚至超越商业系统的高性能基础设施。</p><p>而对普通用户来说，这带来的好处就是 AI 产品的迭代速度更快，搜索系统、聊天机器人等服务几乎能做到实时响应。</p><p>3FS 的出现，不仅让行业注意到数据存储对 AI 性能的重要性，也鼓励更多公司去做端到端的优化，把整个 AI 系统的瓶颈彻底解决掉。这次 DeepSeek 的开源，不仅是一次技术共享，更是给行业树立了一个新的标准，推动 AI 专用基础软件的发展。</p><h2>DeepSeek-V3/R1 推理系统：技术与商业价值的结合</h2><p>到了第六天，也就是活动的最后一天，DeepSeek 并没有像前几天一样发布新的代码库，而是为大家带来了一个特殊的「压轴环节」。他们详细介绍了自己用于 DeepSeek-V3 和 R1 大模型的高性能推理系统架构，并首次公开了一些具体的运营数据。</p><p>你可能会问，推理系统到底是什么？简单来说，训练好的模型要为用户提供服务，比如聊天机器人回答你的问题，这个过程就叫推理。推理系统的好坏决定了 AI 服务的响应速度和稳定性。这次 DeepSeek 展示的系统专门针对超大规模的 MoE 模型设计，目标就是高吞吐量和低延迟。</p><p>在架构设计方面，他们采用了跨节点的专家并行方式，把模型的参数分布到多个节点上。举个例子，当模型刚接收数据（预填充阶段）时，使用 4 个节点进行专家并行（EP32），但到了解码阶段（逐字生成内容）时，就扩展到 18 个节点（EP144），随着节点数增加，吞吐量几乎线性地增长。</p><p>为了进一步提高效率，这个系统还用了一个特别的技巧叫「双批次重叠」。具体来说，就是两个批次的数据计算和传输交替进行，避免了数据通信给整体带来的延迟。再加上精妙的负载均衡设计，数百个 GPU 可以无缝协同工作，整体性能表现非常稳定。</p><p>性能方面的数据也很直观：每个配备英伟达 H800 GPU 的节点，每秒可以处理 73,700 个输入 token，并生成 14,800 个输出 token。这意味着每天能处理数百亿个字词，服务百万级用户。</p><p>更直观一点，DeepSeek 还公布了一些商业数据。比如，按照他们 R1 模型的标准计费方式计算，这套系统每天的理论收入可以达到 56.2 万美元，而成本只有 8.7 万美元，算下来毛利率高达 545%。当然实际运营会有折扣，真实收入可能没那么夸张，但依然非常具有商业吸引力。</p><p>这些数据的公开，其实给整个行业带来了两个重要信号：第一，证明了开源的大模型架构，也能实现高效的商业落地，甚至比闭源服务更具性价比；第二，表明了优秀的架构设计对 AI 服务成本和收益的巨大影响。这很可能在业界掀起一股系统优化的浪潮。</p><p>对于普通用户来说，这种高效的推理架构带来的直接体验就是服务更加流畅、反应更迅速；而对于开发者和企业来说，这种架构意味着低成本、高性能的规模化运营变得更容易实现。</p><p>总的来说，这个压轴环节不仅仅是 DeepSeek 的一次技术秀，更是通过真实的数据告诉大家，开放透明的 AI 技术生态，不仅可行而且能带来实实在在的好处。这种开放的理念，也可能在未来催生出更多创新的商业模式，甚至推动整个 AI 行业的技术变革和标准化发展。</p><h2>开源驱动创新：技术共享带来的多重价值</h2><p>回顾一下 DeepSeek 这六天的开源技术周，他们一次性公开了六个重量级的核心技术，几乎覆盖了 AI 技术全链条的每个关键环节。这些技术的开源，对于你这样的普通用户而言，最直观的好处就是使用 AI 服务时能体验到更快的响应速度、更流畅的交互体验，同时还能享受更低的费用。</p><p>如果你是一名开发者，这些开源项目对你来说就是现成的「乐高积木」，你可以快速利用这些技术组件进行自己的产品创新和迭代。你再也不用重复造轮子，从头设计底层技术架构，而是能站在巨人的肩膀上迅速出成果。</p><p>对整个 AI 行业来说，DeepSeek 的开源举措意义更大。他们不仅带来了先进的技术，也在鼓励其他公司效仿，形成一种开放技术生态的氛围。想象一下，这就像一次「开源军备竞赛」，每家公司都愿意把自家压箱底的技术共享出来，全行业的创新速度就会大大提高。</p><p>当然，这并不是说未来没有挑战。技术开源会带来更多竞争、也可能带来更多问题。但毫无疑问的是，这场技术的盛宴已经为 2025 年的人工智能发展注入了新的活力和方向。我们完全有理由期待，接下来几年会出现更多高性能、低成本、更加亲民的 AI 模型，真正进入到每个人的日常生活中去。</p><p>可以说，这不仅仅是 DeepSeek 自己的一场技术盛宴，而是整个人工智能行业共同的胜利。他们通过实际行动告诉我们：开放协作、共享成果，才是推动科技持续进步最好的方式。</p><p>如果你觉得本文有用，请<strong>充电</strong>。</p><p>如果本文可能对你的朋友有帮助，请<strong>转发</strong>给他们。</p><p>欢迎<strong>关注</strong><a href="https://sspai.com/column/245">我的专栏「科研利器」</a>，以便及时收到后续的更新内容。</p><p><a href="https://sspai.com/prime/subscription?referral=314606736">点击这个链接加入少数派会员</a>，立享 9 折优惠！获得专属会员内容、会员播客以及会员定制周边。在更多的领域和方向帮你打开脑洞，找到新的兴趣点。与少数派一起洞悉当下，探索新知。</p><h2>延伸阅读</h2><ul><li><a href="https://mp.weixin.qq.com/s/h5hGl-pEil0deV5QZFgxdg">低成本反思式大模型能给你的 AI 工作流带来什么改变？</a></li><li><a href="https://mp.weixin.qq.com/s/lffHU87RvtmiXO4SjPgVug">对科研工作者来说，OpenAI Deep Research 功能意味着什么？</a></li><li><a href="https://mp.weixin.qq.com/s/SdQPj3RPogzcGogdbNO6yA">人工智能绘图应用 DALLE 2 开始公开测试了</a></li><li><a href="https://mp.weixin.qq.com/s/-H-Q70wBTDaN7APYnRhI6g">AI 应用蓬勃爆发，你的「护城河」足够宽吗？</a></li><li><a href="https://mp.weixin.qq.com/s/xEAWepdqRlq2kG6-rEtzbQ">AI 时代的真稀缺技能：从「有技术」到「会洞察」</a></li></ul>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96880</id>
            <title>动作射击游戏全球销冠一波三折的多人对战演变史</title>
            <link>https://sspai.com/post/96880</link>
            <guid isPermaLink="false">https://sspai.com/post/96880</guid>
            <pubDate></pubDate>
            <updated>Sun, 02 Mar 2025 06:33:11 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 使命召唤, 玩法迭代, 战术性, 用户体验

<br>
<br>
总结: 本文回顾了《使命召唤》系列的发展历程，重点分析了其玩法迭代和用户体验的变化。文章指出，《使命召唤》系列经历了多个分水岭，从2007年的《使命召唤4 现代战争》到2019年的《使命召唤 现代战争》软重启，游戏在多人对战玩法上不断创新，但也引发了玩家对“跑打”风格和战术性玩法的争议。文章还探讨了不同开发组对游戏设计的影响，以及近年来游戏运营问题对玩家体验的负面影响。最终，作者认为《使命召唤》凭借其独特的战术性和爽快感，依然在动作射击游戏领域占据重要地位。 </div>
                        <hr>
                    
                    <blockquote><p>本文最初发布于我的个人微信公众号，发布时间 2024 年 5 月 14 日，早于《使命召唤 黑色行动 6》，因此文中暂无相关讨论。&nbsp;</p></blockquote><p>《使命召唤》（Call of Duty，以下简称“COD”）作为当今世界上最大的第一人称动作射击游戏 IP，历经主机迭代、引擎升级和设计上林林总总的各种变化，也伴随游戏玩家们走过了 20 余年的时间，狂吸全球330亿美元营收。最新的《使命召唤 现代战争》系列（Call of Duty Modern Warfare）自 2019 年公布之后更是重新定义了动作射击游戏的新标准。</p><p>只不过，掺杂了诸多新想法和新设计的这套“新标准”也招致了玩家们的大量非议。一方面自然是受到微软与动视暴雪收购案的影响，导致公司内部混乱的开发和财报预期管理出现了重大错位，使原本的 COD 新作的开发节奏被彻底打乱；另一方面，开发风格的改变在同一子系列下呈现出的明显差异，会让已经适应前作游戏玩法的消费者对于游戏的理解出现偏差。并且，作为服务型游戏，受到诸多因素的共同作用，近几年的 COD 在运营上出现的重大纰漏也是消费者对新作非常不满的主要原因。</p><p>即便如此，COD 依旧是当今游戏工业乃至世界级数字创意产品中，动作射击游戏的最佳范本。这也就意味着 COD 不仅有着最大量的消费者群体，更有着可能是最全面、最普适的 FPS 用户体验模型。笔者在经过了一年左右对 COD 系列的基本体验，尝试梳理出各个时代 COD 的特点，并从个人角度，以及对一部分内容创作者产出的 COD gameplay 内容的观察，尝试总结出 COD 发展至今出现的玩法分流和其背后的成因。</p><h2>《使命召唤》系列的玩法迭代简史</h2><p>尽管早期的 COD 也不乏好玩、丰富的多人对战模式，但真正让 COD 的多人对战玩法受到更多消费者和潜在消费者的重视并让销量一飞冲天的，是由 Infinity Ward 开发，动视于 2007 年发行的《使命召唤 4 现代战争》（Call of Duty 4 Modern Warfare，以下简称“COD4”），这是 COD 系列发展历程的第一个分水岭。COD4 在优化了人物机动性的前提下引入了配装系统、连杀奖励、玩家等级和挑战等前无古人的全新机制，加上对多人地图的全新理解，造就了在21世纪头十年中几乎是最过瘾的多人竞技场射击游戏体验。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/938724e7b75b93daf03afb20b86fd448.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>武装直升机绝对是每个 COD4 多人游戏玩家经历过的噩梦。图片来源：youutube@ScereBro PSNU</figcaption></figure><p>能打败 COD4 的只有其后续作品。由 Treyarch 担纲的《使命召唤 战火世界》（Call of Duty World at War）优化了多人对战的地图设计，部分地图更小更紧凑，凸显了 COD4 提升了人物机动性后带来的“边打边跑”（以下简称“跑打”）的爽快感；《使命召唤 现代战争2（2009）》（Call of Duty Modern Warfare 2）在连杀奖励和配装系统上继续优化，同时凭借前作在地图设计上做出的贡献，做出了如“炼油厂”这种被新老用户称道的小型 CQB 地图；《使命召唤：黑色行动》（Call of Duty Black Ops）奠定了 Treyarch 在特色配装系统和特色地图设计上的独家风格，更平衡的枪械设计和稍具策略性的地图布局让更多刚接触COD的消费者也能很快熟悉并适应这款游戏的节奏；《使命召唤 现代战争3（2011）》（Call of Duty Modern Warfare 3）在《现代战争 2》的基础上进一步平衡，几乎任何一位从 COD4 走过来的老客户，和任何一位第一次接触 COD 就是《现代战争 3（2011）》的新用户，都会对其大加赞赏。</p><p>2011 年是 COD 系列的第二个分水岭，制作组的更迭也使得 COD 在多人对战玩法上呈现出更为激进的改变。《使命召唤 幽灵》（Call of Duty Ghosts）在延续了《现代战争》三部曲的玩法基础之上开始尝试加入新的滑铲机制，以提升人物机动性和丰富玩法；《使命召唤 黑色行动2》（Call of Duty Black Ops 2）延续了 Treyarch 在过往《黑色行动》的地图设计，但带来了全新的“Pick 10”配装系统，以激发玩家对优势资源的高效利用；由 Sledgehammer Games 领衔开发的《使命召唤 高级战争》（Call of Duty Advanced Warfare）除了优化“Pick 10”系统为“Pick 13”系统外，还加入了提升人物机动性的外骨骼。这一改变让 COD 让用户可操作角色的机动性得到了空前加强：二段跳和经过优化的滑铲动作成为那一段时间 COD 多人对战的标配，主动制造高低差成为了这一时期所有多人对战用户的可选策略；之后的《使命召唤 黑色行动3》（Call of Duty Black Ops 3）和《使命召唤 无尽战争》（Call of Duty Infinite Warfare）更是加入了当时流行的跑墙能力，使得用户可操作角色能够在对战地图内无视物理规律上下翻飞，玩出各种老派射击游戏无法演绎的花式操作。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/30131a61f8f62d83e7a50b31396e5f9f.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>夸张的干员设计也揭示了《使命召唤 无尽战争》多元的移动机制。图片来源：动视</figcaption></figure><p>这一时期几乎奠定了大部分用户群对现代 COD 游戏“高机动性、低地图适应性”的“跑打”风格的认知，绝大部分 COD 用户在多人游戏时都不会特别固守在某一点位，高超的角色性能会让任何想要坐收渔利的用户吃尽苦头。虽然在《使命召唤 二战》和（Call of Duty WWII）《使命召唤 黑色行动4》（Call of Duty Black Ops 4）中，用户可操作角色的性能被重新限制在步战范畴，但是滑铲取消、飞扑、快速爬墙等基础能力依旧被保留了下来，人物机动性依旧不俗。这种延续用户认知的做法进一步加深了用户对 COD 玩法的固有印象。</p><p>这也就意味着：做出改变将会带来趋于两极的用户口碑。</p><h2>玩法改变带来的体验分流</h2><p>2019 年，COD 系列迎来其第三个分水岭，这一次重大改变带来的是对用户口味的颠覆以及随之而来的口碑危机。软重启的《使命召唤 现代战争》（Call of Duty Modern Warfare，以下简称“新MW”）开启了 COD“战术化”的先河，重组的 Infinity Ward 从地图设计和人物动作丰富度出发，创造出了现代 COD 体验中，在战术性和动作性上最为平衡的一作。不论是 COD 的老用户，还是初次接触该系列的 00 后们，都能够以自己的方式快速找到这款游戏的乐趣。</p><p>由于主导开发组的不同，2020 年的《使命召唤 黑色行动冷战》（Call of Duty Black Ops Cold War）和 2021 年的《使命召唤 先锋》和（Call of Duty Vanguard）并没有沿用新 MW 的多人对战设计思路，而是延续了中生代 COD 的设计。加上动视正在推动各个开发组将更多的资源向免费的《使命召唤 战区》（Call of Duty Warzone）的“吃鸡”玩法倾斜，因此游戏本体设计趋于保守也是情有可原。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/78b736ffa4bebe73b917695558c78feb.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>佛丹斯科是不少新世代 COD 玩家们的理想乡。图片来源：gamekings.tv</figcaption></figure><p>时间来到 2022 年，随着《使命召唤 现代战争 2（2022）》（Call of Duty Modern Warfare II 2022，以下简称“MW2”）尝试在不同的系列中加入更多风格化和战术化的内容，游戏的多人对战呈现出慢节奏和更具战术化的体验，这就让对 COD 产生了固有印象、并且可能是为 COD 这份体验买单的主要用户群产生了强烈不满。这种不满不仅仅体现在玩法上，游戏本身再运营期出现的各种质量问题，如掉线、游戏崩溃等 bug 在同一时间频发的情况更是家具了玩家群体的愤怒。</p><p>仅从对战体验上而言，MW2 屏蔽了用户在过往 COD 中习以为常的“滑铲取消”技巧，用户操控的角色必须完成滑铲才能执行下一个移动动作。结合用户可操作角色爬墙动作延长、枪械射击抖动增加、无法取消换弹等设计，使得游戏不仅整体节奏感被大大拖慢，更是大幅削弱了传统 COD“跑打”风格用户的收益，越来越多的人开始尝试固守点位当“老六”，毕竟被削弱的机动性会更轻易地让静止不动的用户守株待兔。当然，在 MW2 发售之后，开发组在配装系统设计、赛季枪械平衡、匹配算法、运营能力、内容持续更新和游戏稳定性改善上的种种失误和不作为也是导致 MW2 乃至整个 COD 系列口碑快速下滑的重要因素。</p><p>在 Raven Software 自 MW2 第五赛季开始接管后续运营以及 Sledgehammer Games 主导的《使命召唤 现代战争3（2023）》（Call of Duty Modern Warfare III 2023，以下简称“MW3”）被动视赶鸭子上架并持续更新至2024年10月（也就是《使命召唤 黑色行动6》发售前一天），仅就对战体验而言，用户可操作角色机动性的不断回升重新让游戏的爽快感和战术性趋于平衡，传统的“跑打”风格用户依旧可以依赖反应能力和操作快速上手，已经习惯了 MW2 战术风格的新用户也可以依赖游戏中提供的配装、道具以及对地图的理解和玩家心态的博弈获得别样的享受——当然，由于 MW3 最初发售时完全是一款半成品，高昂的售价和铺天盖地的 bug 带来的自然是更多消费者的负面评价。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/bbd03b2c089eecc3b2435a6a7cae4c59.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>和许多服务型游戏一样，MW3 凭借高质量和海量的赛季内容最终赢得了不少玩家的口碑。图片来源：youtube@Tridzo</figcaption></figure><h2>独一份的“战术”玩法</h2><p>自《现代战争》系列在 2019 年软重启之后，现代化的 COD 系列更加注重对“战术感”的演绎，包括更现代化的换弹和人物动作编排，以及更加成熟、更加复合的地图设计。更复杂的设计带来的就是对玩法包容性的提升，更战术的玩法就是复杂设计带来包容性的一种展现。战术风用户可以从地图面积入手，结合自身的优劣势研究针对不同地图面积的装备配置。在进入地图之后分析双方的重生点分布，猜测残局时的各自位置，依赖友军提供的信息执行迂回、进攻或撤退等策略，在进入复杂环境后良好执行点位搜查等战术动作，规避来自敌人的正面冲突，利用致命或者非致命道具协助队友或自己的进攻、撤退、迂回，等等，这些都是传统 COD 和纯粹“跑打”风格无暇思考且体验不到的独家玩法。</p><p>纵观游戏行业，有不少推进思考而不是反应和操作玩法的动作射击游戏获得了相当的赞誉，近有久负盛名的《彩虹六号 围攻》（Rainbow Six Seige），远有名利双收的《孤岛危机 3》（Crysis 3），这些游戏不论是在用户可操作角色的性能设计还是地图本身对游戏战术性的诠释都做到了相当的高度。但相比更加爽快的 COD，那些游戏“高门槛、难精通”的姿态还是挡住了不少潜在消费者。而 COD 凭借多年打磨的爽快动作设计体验，朝着演绎“战术风格”而非真正的战术玩法设计演进，其上手难度相比严肃的模拟战术射击游戏如《严阵以待》（Ready or Not）《地面部队》（Ground Branch）更加友好，同时没有《彩虹六号 围攻》过于复杂的战术维度。如果用户愿意尝试在火爆的激情互射中进行思考，制定战术，那么新世代的COD依旧能带来独一份的战术动作射击体验。</p><p>（头图来源：metro.co.uk）</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96858</id>
            <title>2024回顾，用这些符号玩转日本</title>
            <link>https://sspai.com/post/96858</link>
            <guid isPermaLink="false">https://sspai.com/post/96858</guid>
            <pubDate></pubDate>
            <updated>Sun, 02 Mar 2025 01:43:58 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 日本旅行, 富士山, 樱花, 温泉

<br>
<br>
总结: 本文记录了作者2024年在日本的多次旅行经历，重点描述了富士山、樱花、温泉等标志性景点的体验。作者通过详细的行程安排和景点描述，展现了日本各地的自然风光和文化特色，如富士山的不同视角、樱花季节的京都游览、温泉小镇的私汤体验等。文章还提及了柯南剧场版的观影体验及相关的旅行目的地，表达了对旅行中美好时刻的珍惜与记录。 </div>
                        <hr>
                    
                    <p>「本文参加年度征文活动 [记录] 赛道」</p><h2>引</h2><p>2024对我来说是特别的一年。24年前的我不爱旅游，甚至不开玩笑，连12306的账号都没有。各种机缘巧合，春节前一周决定去日本，由此开启了一年的精彩旅程。几次日本，1次韩国和2次出差新加坡，在各地留下自己的脚步，认识和体验各种相似和不同的文化，我想把那些精彩的时刻记录下来，无论是在这篇文章或者是我刚刚升级的 1T iCloud 😂。</p><p>这篇总结，我准备用那些最刻板（或者说著名）符号回忆我在日本这一年的旅行。</p><p>&nbsp;</p><h2>🗻 富士山</h2><p>富士山就在那里，它就像一个百搭的配件，甚至搭配一个本来那么普通的罗森便利店，也能造就一个热门的打卡点。有人说，看富士山有时候需要那么点运气，因为可能云雾随时赶来。那么，我可能就是富士山参观的宠儿了。</p><h3>镰仓</h3><p>初见是在通往“江之岛”的桥上，透过一边蔚蓝的海，富士山远远地浮现。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/84189bdbfe1fe30bce39639e67aae7cf.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>登上“江之岛”，海天之间一座山。岸边，钓鱼的日本大叔可真不少。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/2862e4eb65509422631761ba84500db5.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>离开江之岛，可以步行到七里滨，在海边散步。让我想起印象深刻的 B站up主 陈曦stanley 那集镰仓的节目，高中生在海边追逐嬉戏。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/b6e3fd50f42ae4dd5bc7776c6146b28d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>河口湖</h3><p>富士山在镰仓像是一个远处的背景，那来到河口湖就更加靠近山的本体。我是在东京站搭乘最早一班6:50的巴士。目标先抵达下吉田的的神社打卡点，然后再坐富士急电车前往河口湖。</p><p>步行去神社的路上，偶遇著名的打卡点。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/6696cc3b137737d7fe7badd3b235269e.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>登上无数阶台阶后，到达了神社打卡点，远眺，一览村庄和高山。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/1e929b042d79bf882da6931d8d6a37b8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>最终，到达河口湖。绕湖一周，到达大桥的机位。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/9cc91179ef45aa00f64bd48750e0cec6.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>🌸 樱花</h2><p>四月，第一次来到关西，规划了京阪神之旅，主要的目标当然是樱花，但却险些成为樱花难民。2024的樱花见顷比预期晚了不少。第一天到达大阪，晚上本想先来一个大阪城夜樱游览，谁成想樱花树含苞待放，“难民”欲哭无泪。樱花未开，但气氛已浓。公园草地已经有不少夜晚露营的年轻人，放着歌，喝着酒，把白天的烦恼都忘掉。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/0c80642b8e8e7744c64b556fc4ed997d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>稀疏的樱花和夜晚的大阪城</figcaption></figure><p>第二天一早，大阪樱花难民就坐电车来到了京都，京都一共安排了2天半的行程，大本营在大阪，每天电车往返。</p><p>路线主要包括</p><ul><li>第一天：清水寺-高台寺-圆山公园-南禅寺-蹴上铁道</li><li>第二天：修学院离宫-圆光寺-银阁寺-哲学之道</li><li>第三天：西芳寺（苔寺）</li></ul><h3>第一天</h3><p>高台寺一进门的第一株粉樱，盛放程度已经非常好。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/8a28a675abf6f3a106cd10e6d55ac25d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>禅院中庭有一棵标志性的垂樱。如果人少一些，能在庭院坐下，静静地欣赏就好了。由此为契机，后面的旅游我也开始发掘一些小众的禅院，很多时候甚至能全院只有我1个人，自由坐在院中，慢慢欣赏沙石花草的布置。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/b12d9ee80aec8e92a91a8d4760c6ff97.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>圆山公园的这株古树是这次看到的最大的一棵树。公园里种植非常多的樱花树，是一个群众赏樱的热门景点，本地的人也会穿上传统的服装来进行赏樱的活动。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/48db0e2ba6f7dc81daaa1072eac966c2.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>另外一个类似的景点就是蹴上铁道，铁道沿途也是种满了樱花树，但是这里好像更受旅行团的青睐，时不时地就能听到乡音。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/2d68392928fd531b2ef4f93e77372435.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>第二天</h3><p>修学院离宫算是皇家园林。公园规模很大，虽然需要预约，但并不是很难，门票免费。每个时段都有日语的讲解，同时有中文的讲解机可以使用，也都是免费的。到了现场，给我的感受更像是一个夕阳红旅行团，参观的的爷爷奶奶比较多，拿着复古的数码相机记录着园中的春意盎然。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/432da1639230c0520f40720c598c8bd2.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>参观完银阁寺，可以顺路来到哲学之道。除了樱花，附近也有不少有意思的小店值得逛。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/6687d948ab8530296632187316c56142.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>第三天</h3><p>严格来说，西芳寺并不是赏樱的场所，最著名的是寺院后面的一个苔藓茂盛的小庭园。而我最早知道它是因为乔布斯。西芳寺之前据说非常难约，但近年来开通了网上预约，难度不大。</p><p>当天下着小雨，非常适合参观这满园的清新绿色。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/2bf8cd519b535bbf7378a026c302fee0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/2b66fb68a66519408acc1dc9dd284a66.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>🎆 花火大会</h2><p>花火大会准备了两套方案。A计划是去长冈花火大会，正所谓长冈归来不看日本花火。然而，我错过了国际售票，又果不其然地没能中签。B计划并行，买了大阪淀川的门票。因为是备胎方案，所以只买了最便宜的草地票，这也让我和日本群众一起体验了下盛夏的烈日灼烧。</p><p>分享结尾的6min</p> <p>淀川的好处就是离市区非常近，电车从梅田到十三（一个站名）只有1站。散场后，甚至可以走回梅田（耗时1小时，因为我就是走回去的）。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/6eae3b238b55537ea7a631d581119f01.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>会场地图</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/40216b5da46dbcfb3f2087c43457e97b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>会场图</figcaption></figure><h2>♨️ 温泉</h2><h3>有马温泉</h3><p>有马是关西著名的温泉小镇，从大阪或者神户到达都相对方便。这也是我第一次住温泉酒店，订的是“竹取亭”。这家最大的特色是全部私汤，露天和室内各3个，预定不设限制，但一次只能预定一个。同时，这家店的语言支持非常好，可以说是我在日本遇到的英语说得最好的酒店服务人员了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/6fc6a7ece76a721aeb163c6b41454806.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>私汤的好处就是可以拍照</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/7a285a2385e5a6f013ccea072cc7255b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>有马的夕阳</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/d83a5b752a1dc102f884a84b6c7ba91d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>乳头温泉乡</h3><p>请不要被这个名字迷惑，这是一个正经的著名的山中秘汤，坐落在秋田县。从东京出发可以坐东北新干线到田泽湖转巴士达到。</p><p>温泉乡内坐落几个温泉酒店，可以购买日归通票在不同家体验。同时，日归通票还包含免费乘坐巡回巴士，就是下面这个顶着个桶的小车</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/318c7cf557d97d9057c8c42739bfb770.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这次1泊住在了休暇村，属于现代风格的温泉酒店。内部装修比较老旧，户外温泉的景色也一般，整体不是特别推荐，但至少可以订到，方便去别家日归。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/749cb38b800145556d94e3fc3ed44338.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>清晨，大雾中的旅店</figcaption></figure><p>第一个日归就是“妙乃汤”。它家最著名的是屋外的一个露天温泉，可以远看瀑布的景致。整体属于传统的温泉旅店风格，是比较难定的一家。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/025cfa67e887a08affb425dbf377f082.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>第二家是整个温泉乡最著名的“鹤之汤”，鹤之汤最著名的是它户外的一个露天混浴风吕。换衣处是分开的，但是整体温泉池遮挡会比较少，非常的质朴和原始😂。最美当然是冬天的时候，但是几乎很难订到。另外，这家和其它几家离得相对比较远，需要摆渡车。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/d16b47a9e42e8caab0fc4f90c036b53a.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>离开前去体验了蟹场温泉。户外也是一个露天混浴风吕，需要进入酒店后再走到户外才能到达，这一段路在夏末秋初体验非常好，但是冬天可能就冻死了。幸运的是，我去的是那天池子里一个人都没有，独享半个小时的园中秘汤。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/352db7639f8769e36dbc4bf88388baba.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>🛹 柯南</h2><p>2024年，我把柯南剧场版从250集补到了1200集。最新的剧场版 《百万美金的五棱星》8月在电影院看了两遍，看完就决定下一站函馆。</p><h3>函馆</h3><p>由于是东京落地，我选择了坐北海道新干线去函馆，配合北海道和东北的 JR pass，方便后面去秋田泡汤。函馆整座城市不大，大部分景点步行可达。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/e954c1193fbbe492afa3e155d563f3ed.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>红砖仓库</figcaption></figure><p>&nbsp;</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/d4e6862301619c554ef81330da505a1b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>十字街车站</figcaption></figure><p>&nbsp;</p><p>元町是函馆一个著名街区，坐落着大使馆遗址和各类教堂。这一个街区同时有天主教堂，新教堂和东正教堂。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/651101602f3db8ec9d94b16fe260d594.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>天主教堂</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/53f368e9f4a6d5e451ba980e5df3a496.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>新教堂</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/b596a932c70784f6f0f729c2361d6934.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>东正教堂</figcaption></figure><p>&nbsp;</p><p>小丑汉堡是当地最著名的餐饮和打卡点。吃了最著名的炸鸡汉堡，感觉并不是特别好吃。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/6bae63d972931c5ac7de898808455ab8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p>五棱郭是这次剧场版最重要的场景。在附近的公园散步可以远眺整个塔身。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/14531c8526765e76e2799083627571a8.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>登上展望台可以看到标志性的五棱星，樱花季来肯定会更美。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/97682f79fdc976f4e19e4b1e8c6c8c54.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>六花亭是北海道的一个著名的甜品品牌，可以在各大机场买到盒装的产品。但是在北海道当地可以去体验他们的餐厅，函馆一共有两家。这家坐落在海边，可以边品尝甜品变欣赏海景。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/643d1fe267707743812922bff0adcb27.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>餐厅本体</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/1b74a2a71950bf1165b4fd9343ebb97b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>点了一壶红茶（不是一杯）+一块蛋糕=40多人民币</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/666b2cba20888a473b68b72070dfee52.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>店铺前的景色</figcaption></figure><p>当然，函馆最著名的就是函馆山的的景色。可以乘坐缆车到达山顶的展览台。可以预见得人多。多亏看到了一条攻略，人肉等位了展览台的餐厅，边享用晚餐变享受夜景。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/fbe7dad503de7a060f805326ba696513.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>日</figcaption></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/ed09e17989a986a69229983ee67dfc65.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>夜</figcaption></figure><h3>柯南展</h3><p>8月在大阪刚好赶上柯南30周年展，同一时间在上海也在办。据说是大阪展会展出更多的原画。整体看来，参观的更多是我的同龄人，风风雨雨30年，柯南才过了半年😂。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/39be7437e8aea093705e9eb9202fdea0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这张是银杏那集的结尾，画得真的好美，至今看B站弹幕还能看到那些条“我还是最爱银杏”弹幕。</p><p>不希望博士再等十年，我们也不想再等结局十年。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/564fdf9c18d351324a73ebd615131b33.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>震撼的犯人墙，请点开放大，回忆那一个个童年噩梦。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/b12a48564b13405c992a6fc07c0debfa.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>和平</h3><p>和叶和平次作为我最爱的一对，经过了五棱星的告白失败，终于在去年告白成功。告白的地点居然是大阪的阿倍野展望台，这不是巧了，8月到达大阪的一站就是阿倍野。展览台上可以俯瞰整个大阪。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/777237537834f8efe5e06c5a886f89a9.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我也像大海捞针一样在书店站到了这本特典版新刊。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/03/02/56cd9ec626d1aedcabcc2826d9100622.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/03/02/ec7dc3663c3f227ae176f87f2792fe84.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>尾</h2><p>2024结束了，美好如这夕阳。</p><p>明天还会更好么，我不知道</p><p>但至少我把曾经的美好记录了下来……</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/02/7b7e05b04ab72ace601b96fa4dc4ea0c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>&nbsp;</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96868</id>
            <title>新学期，给自己配一个好用的 AI 助手吧。会思考，能联网，有知识库那种</title>
            <link>https://sspai.com/post/96868</link>
            <guid isPermaLink="false">https://sspai.com/post/96868</guid>
            <pubDate></pubDate>
            <updated>Sat, 01 Mar 2025 10:38:09 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI助手, 教育挑战, 学习效率, 知识库

总结: 本文探讨了AI技术在教育领域的应用及其带来的挑战与机遇。作者指出，AI的普及正在深刻改变传统教育模式，但学生若缺乏正确认知，可能滥用AI进行作弊。为此，作者提倡积极引导学生正确使用AI，并介绍了Deepseek R1和Cherry Studio等工具，这些工具能够联网检索、构建知识库，并提供个性化学习支持。通过这些工具，学生可以更高效地学习，教师也能从重复性工作中解放出来，专注于更高层次的教学互动。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px; text-align: justify;">稳定全功能 Deepseek R1 + 联网检索 + 知识库 + Artifacts ，会给你的学习带来哪些益处？</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/f67194ceffff2778afb386babc24c41c.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2 style="text-align: justify;"><strong>挑战</strong></h2><p style="margin-left: 0px; text-align: justify;">在过去的这个寒假里，随着 Deepseek R1 带来的 AI 出圈，各行各业都真切感受到了 AI 的强大威力，相信你已经有体会了。不过在我看来，其中<strong>教育行业面临的挑战更为紧迫</strong>。</p><p style="margin-left: 0px; text-align: justify;">新学期伊始，许多老师见面时的第一句话常常是：「这课以后可怎么教啊？」此前我曾与你分享过，如今学生使用 AI 完成练习和作业的现象已经相当普遍，<a href="https://sspai.com/post/95749">并且探讨过老师们可以采取的对策</a>。其实，彼时 AI 的普及度还远没有现在那么高。而这次， AI 势不可当，这股洪流正在深刻改变传统教育模式。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/f180496fc06f643f756337f27a05deac.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">我在之前多篇文章和视频里反复强调：AI 若能正确使用，确实是我们的得力帮手；但若使用不当，则可能沦为作弊的「枪手」。</p><p style="margin-left: 0px; text-align: justify;">让 AI 充当枪手的做法实在不可取，它会给教育者和被教育者都传递错误讯号，耽误人的培养和塑造。要促使 AI 从「枪手」转变为真正的「帮手」，关键在于<strong>对 AI 建立正确的认知，以及用上真正合适的工具</strong>。</p><p style="margin-left: 0px; text-align: justify;">有些学生对大模型的能力范围缺乏基本了解，直接让大模型查找论文，甚至要求查找本年度最新发表的研究成果，结果得到的内容表面上看似有理有据，实则可能是无根据的胡言乱语。这是因为大模型的训练数据，都有滞后性，而且它在训练中的回答习惯，很可能是「宁愿答错，也不能让对话掉在地上」。如果学生不了解这些，很可能把大模型「一本正经胡说八道」的答案，作为资料搜集的结果提交，那后果不言而喻。</p><p style="margin-left: 0px; text-align: justify;">另外，如果一个初学者自身对 AI 相关知识和技能掌握不足，很容易被网络上的不良信息所误导。一些不法商贩在网上「传授」的更多是如何利用 AI 生成内容来应付老师的检查，甚至直接使用它「撰写」论文、进行「降重」处理等。这些噪声的危害性极大，会对学生的长期发展产生负面影响。若采用抄袭剽窃的方式使用 AI，将会为未来埋下诸多隐患 —— 别忘了，教育部对本科毕业论文是有抽检制度的。</p><p style="margin-left: 0px; text-align: justify;">实际上，AI 能在诸多方面为我们提供强有力的支持，使生活和学习变得更加轻松高效。我认为，与其指责学生滥用 AI 技术，尝试严格禁止，打一场永无止息的「猫鼠游戏」，不如<strong>积极引导他们正确使用</strong>。</p><h2 style="text-align: justify;"><strong>方案</strong></h2><p style="margin-left: 0px; text-align: justify;">我早已打算给来上课的学生们提供足够好用的大模型作为 AI 助手，简单的配置就能联网搜索获取最新信息、挂载个性化知识库，能够直接显示 Web 编程的结果，甚至在上面直接交互操作……</p><p style="margin-left: 0px; text-align: justify;">在以前，这样的 AI 助手工具组合并非不能实现，但是你基本无法平衡<strong>可访问性、模型能力、成本组成的「不可能三角」</strong>。这导致老师在讲台前面演示是「卖家秀」，学生实际操作却成了「买家秀」。</p><p style="margin-left: 0px; text-align: justify;">我从去年春季学期，就全面铺开 AI 编程和数据分析教学实践，其中苦辣酸甜，感受良多。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/498ba77e0a72aa940c4e414b2a0e2c43.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">幸好，在这个寒假，基本上 AI 助手的「七龙珠」都凑齐了。</p><h2 style="text-align: justify;"><strong>机遇</strong></h2><p style="margin-left: 0px; text-align: justify;">首先我们有了足够便宜的大模型 ——Deepseek R1 和 V3，普通人使用起来毫无成本压力，而且模型能力也足以应付日常学习工作需求。</p><p style="margin-left: 0px; text-align: justify;">我们有刚好够用的集成环境 ——Cherry Studio 。它自带多 API 提供商支持，你可以选择使用 Deepseek, 火山引擎，Silicon Flow 等不同提供商带来的「满血」R1.</p><p style="margin-left: 0px; text-align: justify;">Cherry Studio 支持联网，你可以使用 tavily 搜索引擎来获取最新信息。更棒的是，这款搜索引擎还非常慷慨，每个月给你 1000 次免费调用额度，搜索（给大模型补充更新知识）问题迎刃而解了。</p><p style="margin-left: 0px; text-align: justify;">Cherry Studio 支持各种嵌入式模型，你可以直接用 Siliconflow 的免费嵌入模型，支持包括中文在内的多种语言，从而利用 PDF, word, html, txt, ppt 等各种文档来构建知识库。</p><p style="margin-left: 0px; text-align: justify;">更妙的是，这款工具还提供「预览」功能，也就是直接运行 Web 程序代码……</p><p style="margin-left: 0px; text-align: justify;">听起来，是不是很符合你自己对 AI 助手的需求呢？</p><h2 style="text-align: justify;"><strong>配置</strong></h2><p style="margin-left: 0px; text-align: justify;">新学期开始，我便要求自己所授的两门本科生课程 ——《信息系统开发》和《机器学习》的每位学生都务必安装这款工具，并且做好配置工作。为避免学生在安装过程中遇到各种问题，我还专门制作了手把手的完整安装配置过程视频教程，在此也分享给你。</p><p style="margin-left: 0px; text-align: justify;"><a href="https://www.bilibili.com/video/BV1UTP4eoEkz/">这是第一部分</a>（<a href="https://www.bilibili.com/video/BV1UTP4eoEkz/">链接</a>），跟着走完，你就有了稳定可用的 Deepseek R1 「满血」模型（本来就不贵，视频中还有 300 多万 token 的免费额度赠送给你），加上一个免费好用的搜索引擎。</p><p style="margin-left: 0px; text-align: justify;"><a href="https://www.bilibili.com/video/BV1cz9AYpEzX/">这是第二部分</a>（<a href="https://www.bilibili.com/video/BV1cz9AYpEzX/">链接</a>），我用视频内容教你如何配置知识库，个性化检索私有资料，获得足够全面综合有深度的答案。</p><p style="margin-left: 0px; text-align: justify;">搜索功能和知识库都集成在同一个应用中，你能在对话过程中灵活切换不同模式，从内部和外部资料库中挖掘真实可靠的信息来源，从而更深入地帮助自己了解特定任务和研究主题，并且提升学习和研究工作的效率。</p><p style="margin-left: 0px; text-align: justify;">这些功能，加上 Deepseek R1 原本就厉害的透明推理过程，可以让你「知其然」，更「知其所以然」。</p><p style="margin-left: 0px; text-align: justify;">我将它推荐给学生，主要是希望他们能够拥有一个专属的个性化 AI 助手。在后续学习过程中遇到疑难问题，这个 AI 助手能够提供有效的个性化解答。如此一来，同学们再也不必担心提出「傻问题」，而是把各种简单的基础疑惑消弭在萌芽状态。你知道的，有的时候这些无法即时得到解决的小疑惑，会严重影响你后续的学习劲头和效果。</p><p style="margin-left: 0px; text-align: justify;">它会给你的学习和研究赋能。例如许多学生对编程的掌握，往往仅停留在理解基础语法、考试能够通过的阶段。真正需要实际运用时却常常感到无从下手。针对这一现象，我采取的方法是让他们拿 AI 助手直接尝试编写有创意的游戏，打破心里的这个「结」。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/9184be90113c99fec0289a58596b37db.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">在以前，这几乎是一项不可能完成的任务。但有了这个 AI 助手后，他们只需用简单的一两句话描述需求，就能看到一个初步的游戏呈现在眼前。</p><p style="margin-left: 0px; text-align: justify;">Cherry Studio 生成网页内容后，能在应用内部进行快速预览。对于网页游戏，学生们甚至可以直接在界面中进行体验。这样一来，他们无需频繁切换不同应用程序，也不用复制粘贴代码，就能直接在 Cherry Studio 环境中玩自己新创建的游戏。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/4e1e4256d2ee7cc3409859a7bad1fd51.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">有了这样的能力，大家比拼的不再仅仅是编程技能，而是游戏本身是否有趣好玩。那天的课堂气氛非常活跃，学生们玩得十分开心。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/52751d1cd72b80bf08e17305987b9189.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">此外，你还能借助 AI 助手更好地掌控自己的学习进度，不必完全受限于老师的教学节奏。</p><p style="margin-left: 0px; text-align: justify;">如果你觉得老师讲课的速度跟不上自己知识吸收的速度，完全可以借助 AI 为你量身编写的教程和规划的学习路径，实现更快速的成长。我在课堂上便引导学生进行更深入的探索，尝试借助 AI 制定出本学期的个性化学习计划。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/2562c647dc62f76e2968f10a3ff6ffab.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">有些学生在快速完成基础要求后，认为这样的方式过于常规且缺乏趣味性。于是，他们联想到刚刚做的游戏，创造性地让 AI 助手将学习计划转变为一种通关游戏形式，每一个学习阶段都设置对应的关卡、挑战与奖励机制。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/56671de279b78355f11f41d2a983e789.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">看到这些创新的学习方案，我不禁眼前一亮。这正是学生<strong>主观能动性</strong>的生动体现。在传统教育模式下，学习进度往往完全由老师根据全班的平均水平统一安排。但现在，借助 AI 技术，每个学生都能根据自身实际情况调整学习方式和进度，甚至还能主动探索将学习过程融入「寓教于乐」的元素。这让我作为教育者感到格外欣慰，相信会对具备学习主动性的同学们大有裨益。</p><h2 style="text-align: justify;"><strong>要求</strong></h2><p style="margin-left: 0px; text-align: justify;">有了这个 AI 助手作为辅助工具，我在布置作业和练习时也能更加大胆创新。例如，我可以直接让学生调研当下最新的技术发展趋势（例如 Deepseek R1 本身）。</p><p style="margin-left: 0px; text-align: justify;">我知道，一上来留这样综合性的题目对学生们挑战不小。AI 助手自身的那点儿搜索功能可能也并不完全够用。但是今年，我有了底气，对此完全不必担心。</p><p style="margin-left: 0px; text-align: justify;">因为我清楚地知道，有了 AI 助手的辅助，他们可以尝试查询解决问题的有效途径，然后自己去尝试。这就自然而然地促使他们学会将多种工具结合使用。</p><p style="margin-left: 0px; text-align: justify;">我们现在采用的 Cherry Studio 这款工具具备够用的知识库功能，学生可以将网上找到的论文、网页、教程等各类资料一并导入知识库，然后基于这些资料提出问题，来尝试更加深入理解新的技术概念与发展动态。这种摸索式学习方式，比起直接获得答案，要有价值许多。</p><p style="margin-left: 0px; text-align: justify;">AI 助手不仅为学生的学习过程赋予了新的能力，反过来也让我的<strong>教学体验得到显著提升</strong>。它使我从解答基础性常识问题的繁重重复工作中解放出来，让我能够将更多精力投入到关注学生遇到的更高难度、更综合复杂的问题上。在这个层面进行教学互动，对师生双方而言都能带来更大的成就感和满足感。</p><p style="margin-left: 0px; text-align: justify;">至于授课的效果，我觉得「王婆卖瓜自卖自夸」式的自我吹嘘，显得有些苍白。所以我把今年来听课的新同事给我的反馈放在这里。</p><figure class="image ss-img-wrapper"><img alt="" src="https://cdnfile.sspai.com/2025/03/01/article/9fba642f256664ee79e7a6f03862e54f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p style="margin-left: 0px; text-align: justify;">实话实说，我挺开心的。</p><h2 style="text-align: justify;"><strong>小结</strong></h2><p style="margin-left: 0px; text-align: justify;">本文我介绍了自己新学期的教学探索 —— 先从给每个学生，配置一个足够便宜和靠谱的 AI 助手开始。它可以带来的改变，我现在还无法完全预料到。但我相信，与其让学生被错误的 AI 使用方式侵占，不如提供一个更为合理的 AI 助手，让他们在更安全的方式下充分探索。我们得相信他们，毕竟他们才是数字时代的原住民，而我们这些当老师的，可以从他们创造性的发现中，获益良多。</p><p style="margin-left: 0px; text-align: justify;">我坚信，当下的学生毕业后步入社会，他们所面临的工作环境也必然离不开这类智能工具的辅助。当然，那时候的 AI 会更加好用。不过如今在课堂上所做的一切，都会成为一个有效的开端，为学生们将来更好地适应工作岗位和社会技术环境打下基础、做好铺垫。</p><p style="margin-left: 0px; text-align: justify;">如果你是个老师，我希望你能把这篇文章推荐给你的学生们，让他们尽早用上 AI ，避免在新的技术潮流下困在信息茧房里。</p><p style="margin-left: 0px; text-align: justify;">如果你是个学生，我希望你能动手安装这个 AI 助手，尝试一下新的学习和工作方式。也欢迎你把自己使用的感受反馈到留言区。因为这毕竟只是我作为一名普通教师探索 AI 辅助教学的早期阶段，我需要你和我一起来完善它，让更多学生们因此获益。</p><p style="margin-left: 0px; text-align: justify;">祝你在 AI 大潮中弄潮愉快！</p><p style="margin-left: 0px; text-align: justify;">如果你觉得本文有用，请<strong>充电</strong>。</p><p style="margin-left: 0px; text-align: justify;">如果本文可能对你的朋友有帮助，请<strong>转发</strong>给他们。</p><p style="margin-left: 0px; text-align: justify;">欢迎<strong>关注</strong><a href="https://sspai.com/column/245">我的专栏「科研利器」</a>，以便及时收到后续的更新内容。</p><p style="margin-left: 0px; text-align: justify;"><a href="https://sspai.com/prime/subscription?referral=314606736">点击这个链接加入少数派会员</a>，立享 9 折优惠！获得专属会员内容、会员播客以及会员定制周边。在更多的领域和方向帮你打开脑洞，找到新的兴趣点。与少数派一起洞悉当下，探索新知。</p><span class="ss-paidSection" type="paidsection">&nbsp;</span><p>&nbsp;</p><h2 style="text-align: justify;"><strong>延伸阅读</strong></h2><ul><li style="text-align: justify;"><a href="https://mp.weixin.qq.com/s/kdb4BYGA66lhEciumoJYTA">AI 工作流长文写作能力重大改进，欢迎你来试试看</a></li><li style="text-align: justify;"><a href="https://sspai.com/post/85687">如何用 AI 给科研提速？超长对话记忆 Kimi Chat 体验</a></li><li style="text-align: justify;"><a href="https://sspai.com/post/87968">如何用 Readwise Reader 定制提示词 AI 自动辅助处理信息？</a></li><li style="text-align: justify;"><a href="https://sspai.com/post/57138">知识工作者的便携利器</a></li><li style="text-align: justify;"><a href="https://sspai.com/post/77081">AI 真要成精了？ChatGPT 上手体验</a></li></ul>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96867</id>
            <title>从2025开始，让科研对每个人触手可及</title>
            <link>https://sspai.com/post/96867</link>
            <guid isPermaLink="false">https://sspai.com/post/96867</guid>
            <pubDate></pubDate>
            <updated>Sat, 01 Mar 2025 10:25:54 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 家庭实验党, 科研困境, 知识垄断, 开源硬件

<br>
<br>
总结: 本文通过作者自身的科研经历，揭示了科研工作者在不同阶段面临的困境，包括少年时期缺乏指导、青年时期信息壁垒和技术垄断、中年时期资源匮乏等问题。作者提出通过开源技术、建立交流平台和开发低成本硬件来打破知识垄断，推动科研环境的开放和透明。文章呼吁更多人加入这一行动，共同构建一个更加自由和公平的科研生态系统。 </div>
                        <hr>
                    
                    <p>本文参加年度征文活动 [共创] 赛道。</p><h3>困顿的少年</h3><p>小时候，我是一个家庭实验党。出于对化学的热爱，我在阳台上购置了实验设备，挤出每天放学的时间，利用每个周末的空闲，试图追赶自己那时能认知到的研究前沿。那个时候，我不知道怎么查文献，只能趁着每周一次的计算机课的时间，用百度和必应反复修改关键词，在图书馆联盟的网站上苦求有无好心人帮忙下载这篇知网或万方，然后将pdf通过邮箱发送到手机里；偶尔能碰到英文文献，更是欣喜若狂，恨不得支付单篇30欧元的智商税（幸好没支付)去下载。我不知道正确的实验方法是什么样的，每次设计了新反应，得到的产物都无法分离，得不到任何有用的数据。也没有人告诉我这些应该怎么做。我甚至无法真正接触到前沿方向；当我接受了系统的现代科学训练后，会发现那时自己希望攻克的新反应早就被广泛探索过了。即使如此，在通过积累零花钱建立的实验室里钻研的日子仍然是我在初高中阶段最快乐的时光，每天都有无穷的动力。我想，每一个对科技感兴趣的人，少年时都有类似的经历，哪怕感兴趣的不是化学；我的阳台实验室，对别人来说，可能是一个极客工作台、一台老旧的台式机，或者别的什么倾注了无数青春与热爱的东西。</p><p>像我一样的人不在少数。他们贫穷，无人指导，唯一有的是无穷无尽的热情。他们愿意翻遍旧书来探索需要的知识，却没有人告诉他们什么是更有效的检索方式；愿意一遍遍重复在受过良好训练的人眼中枯燥而无意义、甚至连方向都不对的实验。他们省吃俭用，降低生活标准来添置仪器。他们形成了零零星星的群组进行讨论交流，但当所有人都在同样的困境中摸索时，讨论变成了原地打转。即使如此，他们仍不停息。</p><p>这些人年少时的种子，有相当一部分发展成了参天大树。凭借这种热爱，他们最终考取名校，进行系统的学习，然后一直留在科研的最前线。当代最著名的家庭实验党可能是成长在中美洲的Todd Martinez；如今，他已是美国科学院院士。</p><p>但与此同时，我们看不到的大多数则可能会踏上另一条路。他们缺乏获取正确知识的途径，在原地打转中逐渐消磨自己的热情，被别人视作不务正业，迷失在各种真伪不明充满矛盾的信息中，最后放弃了自己的爱好。</p><p>近些年来，将醉心于自己的爱好的青少年打成不务正业的中二病患者似乎成了互联网的一种政治正确。然而事实是，只要他们有接受哪怕最基本科研训练、知道科学前沿在做什么以及怎么做的途径，他们就可以凭借无与伦比的自驱力快速成长为有前途的科研工作者。或者，至少可以保护好他们心中的这一颗种子。在合适的时候，它将会发芽。</p><h3>迷茫的青年</h3><p>考上大学绝不代表着可以顺利圆梦科研。当今大学的极速扩张背景下，无论中外，哪怕是在顶尖名校，教学质量都在急剧下降。一方面，大学的办学重点在于提升科研实力排名，在教学方面日益漫不经心，且与实际需求严重脱节；另一方面，科研人员队伍的膨胀和学术研究的商业化导致了平均人员质量的快速下降。基础研究人员正在“去科学家化”，而转为“劳动力化”：科研成果的产出不再与人员水平直接正相关，而更多地取决于资源和经费，并且被部分课题组所垄断。强者逾强的现象日益严重。另一方面，好的课题组领导不意味着是好的老师。这一点在许多大型课题组内尤为明显：人多，而导师的精力有限，学生往往会陷入到彼此倾轧争夺资源的内耗中。不愿做出头鸟的学生只能得到较少的关注。而不论课题组大小，学生难以得到充分指导也是普遍现象；很多导师水平或精力有限，学生不得不在大多数情况下靠自己。这种困境，与上文提到的家庭实验党的困境相比并没有多大好转。</p><p>另一方面，除了资源无法打通外，技术也是不互通的。有言道，隔行如隔山；而当前的状况是，哪怕是同行，不同的实验室之间，往往也有巨大的壁垒。由于课题组内的教育往往采取师徒帮带制，这些技术最终变成了“老家秘传”，外人无从知晓。甚至一些几乎处处都要用到的最基本技术也是如此。就比如，几乎所有的化学实验都需要使用橡胶翻口塞来隔绝氧气并使用注射器将液体打进去，我曾以为这是所有人都知道的常识，但有一天，我惊讶地发现在隔壁院系从事同领域工作的同学居然没听过翻口塞这个词，已经在这一问题上苦恼了很久。除了技术和操作本身没有被打通外，标准也没有被打通，这经常导致了科学研究中的不可重复性。我们常说，每个人的操作都略有不同，所以经常造成不同的结果，但什么是“略有不同”，究竟不同在哪里？很难有人回答得出这个问题。在这个行业里，有太多的口耳相传和个人习惯。比如，所有的玻璃仪器都要烘干来除去肉眼不可见的水分，但需要烘干多久、在什么温度下？几乎所有人都满足于师兄师姐传来的经验，这些经验在不同课题组经常是不同的，而且缺乏可靠的数据支撑。</p><p>从个人发展的角度，这些信息的壁垒会带来巨大的困扰。师徒制导致了学生的学习过程并不稳定，也缺乏多角度获得信息的途径，同时也间接导致了导师或师兄师姐对学生的个人发展产生了本不应有的控制权。一个人如果处理不好这些人际关系，在学习过程中就会遇到困难——这本与科学无关。这种情况必须改变。</p><p>在第三世界国家，在非洲、在拉美、在中东，情况更加严峻。我在伊拉克的合作者曾经表示希望我去当地讲学，说当地人崇尚科学，但缺乏有能力的老师。在刚果的研究生向我发信求助时，我发现当地的教学质量不足以让他搞清许多最基本的问题。全世界人民都渴望着正确的知识，却因为各种客观原因而无法接触到。这种情况不能一直持续下去。</p><h3>焦虑的中年</h3><p>历经各种困难，博士毕业后，难道在科研路上就一帆风顺了吗？不，从这一刻开始，更大的挑战才来。为了延续自己的学术生命，一名博士需要招收学生、购置仪器，这需要资金，需要将大量精力投入到基金申请、打点关系上；为了应付考核的需求，他将不得不将研究重点放在短平快的研究上，探索重大问题的计划只能搁置。在绝大多数情况下，他会发现资金捉襟见肘，用仪器要漫长排队；在带学生的过程中，他会重新体会一遍信息壁垒的负面影响，只不过这次是以老师的角度。而他对此似乎做不了什么，只能在深夜的酒桌上上感慨一句世事艰难。</p><h3>如何破局</h3><p>这些问题始终萦绕在每一个科研工作者的一生中，也有许多人想过破局之道。归根到底，这些问题出在以下几点：</p><p>教育的垄断，使得获取知识的途径被掌握在了少数有幸进入兼具研究水平和教学水平的课题组的人手中；</p><p>硬件资源和经费的缺乏和设备的垄断，使得大多数年轻PI难以随心所欲地进行研究；</p><p>学术共同体交流方式的垄断，使得大众和爱好者难以懂得如何阅读和攥写论文、如何呈现自己的研究成果、如何与科学家交流。</p><p>设备的垄断正在逐渐被打破。一方面，国产设备、开源硬件正在逐渐降低科学研究的硬件成本；另一方面，共享仪器行业正在蓬勃发展。有的年轻学者联合起来，通过自筹资金的方式建立了自己的电镜中心，就是一个很好的例子。</p><p>教育的垄断随着互联网的发展被削弱了。许多大学的课程正以MOOC的方式被大众获取，降低了获取知识的门槛。但这种垄断远远没有被完全打破，因为我们之前提到的、被作为课题组口耳相传的技术并没有被公开。几乎没有一个平台以系统和成文的方式共享这些老家秘传。而交流方式的垄断则几乎完全没有被打破的迹象：大部分业余爱好者依旧不知道如何查找和下载文献，他们以规范的方式组织自己的研究并进行呈现、乃至于发表论文的例子也十分稀有。</p><p>这就是我打算做的事情。我要打破第一重和第三重的垄断。</p><p>为此，我有三个阶段的规划。</p><p><strong>第一阶段：将技术开源</strong></p><p>我会将过去作为实验室秘传的技术公开出来。我会将自己在顶尖实验室里接受的有机化学实验技术的训练以及长期以来从事第一线研究的经验分门别类，整理成图文。它将涵盖一个有机实验室会用到的方方面面：如何建设，需要采购哪些东西；每一类仪器的原理和操作方法；每个基本操作，例如真空、气体置换、反应架设、后处理、常用分析方法等的操作过程和各种注意事项，等等。除了文字外，我会对每个操作进行拍照或录制视频，使得每个人在读完后都可以直观地理解。我会将传统上由师兄师姐传授的全部内容用每个人都能公开免费访问的方式承载在文档里。我会考证每一项经验的历史起源，查找背后的数据基础；如果没有，就自己测一遍，把实验室里的“玄学”“习惯”搞清楚，让每一项内容都具备可靠性的保证。</p><p>同样地，我会将自己多年来在另一个化学中同样重要的子学科——计算化学方面的积累整理成类似的指南。我还会将学术道德、学术研究的规范、科学研究的基本方法、论文的结构的写作等的知识整理成册。</p><p>我打算将它叫做“自由之书（LivresLibres）”——它让爱好者、初入行的博士生、其他领域的学者实现了知识的自由。</p><p>当然，我愿意更多人加入其中，分享在不同领域的知识，构建一套完整的、涵盖各学科各领域的网上大学。我曾经将这个倡议发表在了百度化学吧上，以调查在爱好者群体中有多大的受众面，结果立刻遭到了集体的辱骂和嘲笑，似乎没有人相信知识是可以开源的。但这恰恰证明了这一点在当前有多么急缺。哪怕最终没有人加入，我将用自己的力量，开源自己的领域。在黑暗中的一点烛光总会好过完全的长夜。</p><p><strong>第二阶段：建立组织</strong></p><p>开源的知识是静态的，而每个人在研究工作者都会遇到独特的问题。目前，尚不存在一个系统、可靠的互联网平台可以实现科研工作者之间的高水平交流，而我打算建立一个论坛，将散布全国、乃至全世界的处在困境中的研究者联系在一起。</p><p>同样地，我希望能举办一些面向依靠自己的力量从事科学研究的自由研究者的会议。这种会议有一些先例，例如我知道有人曾经举办过本科生科研的会议。我希望这种会议能够定期举行下去，让那些独行中的研究者能够在面对面的交流中互通有无、产生火花，或是在与有成就的科学家的交流中获得对学科前沿的更准确认识。</p><p><strong>第三阶段：建立硬件</strong></p><p>虽然中国的仪器共享行业蓬勃发展，仍有许多人难以有效利用，其中最主要仍然是由于资金的限制。而放眼全世界，绝大多数国家的研究者都必须挣扎在十分有限的硬件条件下。对此，我希望从两方面着手：其一是开发极低成本的开源硬件，另一方面是建立自己的、以非盈利为目的的硬件共享平台。</p><p>在开源硬件方面，我已经成功开发了电化学工作站，让每个人都可以用不到100元制造一台市场价5~10万元的工作站。我会继续开发更多开源硬件；我已经最新推出了一款成本在300元左右的注射泵；在年内，在2025年，我将推出开源廉价的自动过柱机，成本是市场价的50分之一。</p><p>关于共享平台，我打算从最容易解决的问题着手：算力资源。</p><p>如今在国内自建超算、商业超算已经十分普遍，算力价格的内卷已相当严重，但绝大多数国家的研究者依旧要为有限的算力挣扎。当知道刚果金沙萨大学的研究者只能使用6核的机器时，我毫不犹豫地决定将自己的一台服务器赠予对方，但这终究不是办法。我在伊拉克的合作者同样对来自中国、物美价廉的服务器很感兴趣。我希望能建立一个非盈利的共享超算中心，型号不用新，即使是使用淘汰型号的CPU、将成本控制在几千元一台节点，也足以解大量研究者的燃眉之急。它可能会选址在内蒙古、西南地区等电力便宜的地区，搭配自建的光伏或水电站，实现绿色零碳排。我会将它开放给来自全世界欠发达地区的科研人员以足够低的价格申请使用。</p><p>你可能会问，这么多事情，能在2025年完成吗？我很清楚，要实现这些打算，对于一个个体的人，总是很困难的，这也是我将计划分成三个阶段的原因。第一个阶段并不需要多少时间，成本主要在于需要进行一些实验来拍摄演示照片或录制视频，相对而言是最容易的，可以确保在2025年完成。第二个阶段并不需要着急，它的成功很大程度上需要依赖于第一阶段的积累，在对社区做出足够贡献后，建立联系会更加容易。第三阶段中，开源硬件部分始终在稳步推进，而绿色的、非盈利的共享硬件平台则是显然的重资本投入工作，需要从长计议。但无论推进到哪一步，都是从零到一的突破；更何况，我已经在行动了。</p><p>2025年，我将着手推动一个一个更加开放、更加透明、更加自由的科研环境。</p><p>Free science, I will be here.</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96862</id>
            <title>我的2024：与书籍同行，与文字共舞</title>
            <link>https://sspai.com/post/96862</link>
            <guid isPermaLink="false">https://sspai.com/post/96862</guid>
            <pubDate></pubDate>
            <updated>Sat, 01 Mar 2025 08:40:47 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 总结, 社交, 阅读, 写作, 自我探索  
<br>  
<br>  
总结: 本文作者回顾了2024年的生活，强调通过减少无意义的社交来专注于读书和写作，探索自我真正想要的生活。作者认为，选择适合自己的书籍比盲目追随他人推荐更重要，阅读全集有助于深入了解作家的思想历程。写作方面，作者从自媒体风格转向小说创作，认为小说是表达自我和改变世界的最佳方式。最后，作者总结了自己简单而充实的生活，强调认识自我和坚持自我选择的重要性。 </div>
                        <hr>
                    
                    <p>本文参加年度征文活动 [记录] 赛道</p><hr /><p>截至我写这篇内容的时候，2025年已经过去了两个月（即便是农历，也已过去一个月），我在想，现在才来写去年的总结会不会有些晚？但其实我有一个习惯：每当我读完一本书，我首先做的就是将那本书放一段时间，并不着急写读书笔记或感受。如果非要有一个说法，那我觉得该是——让子弹飞一会儿。这样做的目的，也是为了产生更深刻的认识。记录或总结也是如此，很多人喜欢着急写总结，把这当成一项头痛的工作，这样也只会让你在以后的路上不断地犯同样的错误。所以不妨让子弹飞一会儿，你或许就能看到你原本看不到的地方。</p><h2>一件意义重大的事</h2><p>如果让我说我在2024年做出的一件意义重大的事情，我一定会说：我斩断了许多社交。在很多人看来，我的这种行为与当前这个时代显然是背道而驰的，就像有一个曾经的朋友说：“你这不是在封闭自我吗？”但我并不在意别人是如何看待的，因为我知道我想要的是什么样的生活。是啊，如果说当代人最大的问题是什么，那就是多数人根本不知道自己到底想要什么、想要过什么样的生活/人生。这也是我为什么要埋头读书、埋头写作的原因，我也正是为了探索自己真正想要的生活。</p><p>所以我首先做的就是斩断社交，在我看来，当前这个时代的大多数社交是毫无意义的，甚至有时连最基本的快乐都不能带来。很多人所谓的社交，就只是希望别人听自己的、赞同且不能有任何反对自己的观点、发泄自己的种种怨气（还有就是只在冲业绩时才会想起我的人），而且不会对你所说的话做出回应。我有时会想，这种社交的意义是什么？这不就相当于对着一个不会说话的东西自说自话嘛。这对社交的对象是极其不尊重的。当然，由于我也是一个喜好安静的人，我对社交的需求也并不大，再加上我需要更多的时间用来读书和写作，斩断许多社交对我而言就是非常必要的。我也曾不止一次地想象过自己将来的生活，或许我也会像《不能承受的生命之轻》中特蕾莎与托马斯一样，离群索居。但这并没什么不好，就像此刻我的世界安静了许多。更重要的是，我有更多精力去做我想做和该做的事。</p><h2>我的读书选择</h2><p>对于毫无方向感的人来说，选择书籍会容易得多，去图书馆随便选一本书来读，都会有些意义——比如安抚此刻的心情、给自己带来动力、因为书中的某句话而有所悟等。但对于有方向的阅读者来说，比如我自己，选书就变成一项重要的工作，而且会一直持续到不再读书为止。因为人生有限，我们不可能读完所有书籍。在有限的生命里，挑选自己真正想读的书是非常重要的。</p><p>在这一点上，我做了一项重要的工作——搭建属于自己的阅读书单，其中“属于自己的”是重点。我见到不少人在弄阅读书单时，往往会直接抄一些名人的、或是阅读量高的书单合集，虽然这比较省事，但也就像我们听说某个景点好玩就开车直奔而去，却没注意到沿途的景色并没逊色多少。在搭建属于自己阅读书单的过程，其实就是对自我的一次探索。当你都不了解自己时，你的阅读书单也很难适合自己。就像当你不知道自己想要什么样的生活时，那么，再好的生活你也会过得犹犹豫豫。最近我在读科尔姆·托宾的两本书《布鲁克林》和《长岛》时就深有体会，其中的两个角色艾丽丝和吉姆，因为不知道自己真正想要的生活而留下种种遗憾。所以我非常慎重地对待自己的阅读书单，我不会被各种评分、网红的推荐、销量高低而影响，在我看来，培养自己的判断和有自己的选择思路更为重要。</p><p>当然，在我的个人书单中，经典文学名著是更多的，像卡夫卡、陀思妥耶夫斯基、列夫·托尔斯泰、罗伯特·瓦尔泽、米兰·昆德拉、鲁迅、加缪、马洛伊·山多尔等作家，古典文学如四大名著、《堂吉诃德》、莎士比亚悲喜集等等，也都在我的阅读书单中。当然由于我个人的方向也是小说类，所以我阅读的小说会更多一些。但你不必像我一样，找到“属于自己的”那一份更重要。我也非常建议没有方向的人试着读一读赫尔曼·黑塞的作品，如《荒原狼》、《悉达多》、《德米安》、《精神与爱欲》（也称《纳尔奇斯与歌尔德蒙》）、《克林索尔的最后夏天》等，跟着这位“青年导师”一起走进自己内心深处，探索、认识自己。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/8744356c121bc12b815b75fb93230769.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我书桌上的书，以小说为主</figcaption></figure><h2>读全集的意义</h2><p>去年，我将米兰·昆德拉的小说全集完整地读了一遍，也包括关于他的个人传记。我收到不少评论说：“没必要读全集，有些作品根本不值得读。”这话不能算错，就像我上面说，“人生是有限的”，我们只能挑选着读。但，对于自己喜爱的作家，他的所有作品我又怎能错过呢？而读全集，也是深入了解一个作家最好的方式了：对于一个作家而言，文字不会骗人。因为文字中透露着一个作家的真实思想。</p><p>比如黑塞，他的多数作品旨在强调个人意识的觉醒、深入内心寻找自我，这并非是只关心自己而不关心世界，也正是因为他经历了帝国主义、法西斯主义等强权，一战、二战等战争，也让他意识到和平与平等的意义，意识到精神危机的危害。所以黑塞的作品，一方面是慰藉自己走出精神危机，另一方面也是希望人们能够明白拥有“自我意识”的重要性——拥有“自我意识”的人才能知道自己该做什么、不该做什么，这也是和平、平等、幸福的基础。</p><p>再比如米兰·昆德拉，一个自小深受父亲影响而学习音乐，后曾一心想当画家，而后又狂热地爱上音乐（同时也写诗），直到后来才决心成为小说家。从他的作品中就可以看出音乐对他的影响至深，音乐奏章般的断章法，以及看起来毫不相干的故事铺排，最后却惊奇地汇集到一起，就像原本毫不相干的几条河流最终汇集到同一片湖海，让人忍不住拍案叫绝。而从昆德拉的作品中，也能看到他人生的戏剧化，书籍被列为禁书，他也从祖国捷克斯洛伐克出走而定居法国，他甚至一度以为自己的小说生涯就此结束，他的人生仿佛给他开了一个大大的玩笑一般，有趣的是，他出生于4月1日。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/4674aca0f7ab246a7e8561cd07625042.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我去年读完的《米兰·昆德拉全集》</figcaption></figure><p>从作家的全部作品中，是能看到这个作家的经历的，更重要的是他的思想历程，这也能帮助我们更好地理解这个作家的作品，而不仅仅以一句“这本书好或不好”来评价。当然了，还是要去读自己真正喜欢的作家的全集，毕竟人生有限。</p><h2>表达想法与态度与写小说</h2><p>我人生至此两个对我影响最大的选择，一个是读书，另一个就是写作。写作远比读书更早，但因为读书，我的写作也简直变成了另外一个人。这种转变比昆德拉从音乐到小说家的转变差不了多少，以前的我更像是自媒体作者，现在的我在渐渐让自己成为作家。有人说：“这不都是写嘛，有什么区别？”但当你真的试着去写一篇自媒体文章和一篇作家创作的小说，你就会明白其中巨大的区别，这就好比为老板打工与为对象做一件事的区别，一个仅仅为了利益，一个则是从自己内心深处出发。</p><p>我的写作内容大抵分为两类：随笔与小说。虽然有时我也会写写诗歌，但相比这两类还是太少，可以忽略。</p><p>先说随笔。随笔对我而言是内容更多的一类，我几乎每天都会写点随笔，我并不是把这当成一项任务，而是在自己有想法的时候，我就会随手记录下来。写随笔的形式不限于发表在公众号上，我也特地准备了记事本，在记事本上写下自己的想法。我也更多地让自己手写，避免依赖电子设备。电子设备虽然带来了便利，但也削弱了人的创造力和思维，正如AI的发展让很多人不用思考就可以随随便便写出一篇文章，人们也会渐渐地因为不思考而失去自我。所以我手写随笔，也是为了让自己更好地思考。其实我也有个小小的愿望，希望自己有一天能写出像《加缪笔记》那样有深度的对创作和人生的思考。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/03/01/442d1b0e19fda42f06caaf442ee3b851.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>手写用的各种本子与笔</figcaption></figure><p>再是小说。时至今日，我还并未有过任何小说的发表，甚至也没有过任何投稿，而仅仅是以练习的方式写在本子上或是发在公众号上。这几年的阅读，也让我更加确信，小说就是我最好的表达方式。我曾想过自己会成为一个诗人或是散文作家，但最终我在小说中找到了我的人生。即便我深知这并不是一条好走的路，但什么路才是好走的呢？没有好不好走的路，只有喜欢与不喜欢。或者说，只有知道还是不知道自己该走的路。当自己知道自己该走什么样的路时，怎么样都不会太痛苦，痛苦只是因为不知道该走什么路、不了解自己。所以每当别人向我寻求解惑时，我总是会问：“你有试着去认识自己吗？”</p><p>接下来，我也会试着将自己创作的小说投稿，并不仅仅是为了谋生，我是在用小说表达些什么，甚至希望通过小说改变些什么，即便这并不容易，但我希望将自己看到的听到的真实的世界表达出来，而不是一味地和光同尘。</p><h2>写在最后</h2><p>以上就是关于我2024年的记录。其实，我每天的生活很简单，就是读书写作，读厌了写累了就出门运动运动、看看风景。一些人觉得我枯燥，一些人觉得我孤独，甚至还有些人会羡慕我的生活（在他们看来是相当自由的），无论别人怎样看待，其中的酸甜苦辣咸也只有我自己品尝得到。人生就像一桌子菜，总不能只盯着那盘甜菜吃，都尝尝才能品味各种味道的美。2024的我，与书籍同行，与文字共舞，2025的我，依旧且热情。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/96632</id>
            <title>AI 如何协助我解决创作过程中遇到的编程问题</title>
            <link>https://sspai.com/post/96632</link>
            <guid isPermaLink="false">https://sspai.com/post/96632</guid>
            <pubDate></pubDate>
            <updated>Sun, 23 Feb 2025 21:31:05 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: AI, 编程, 创作, 学习

<br>
<br>
总结: 本文探讨了AI在文字、图片、视频创作中的应用，重点记录了作者如何利用AI解决编程问题，提升创作效率。作者通过AI学习CSS、Python等编程知识，优化了Obsidian和Typora的排版、图片生成和视频动画制作。尽管AI在解决复杂任务时存在局限，但它降低了编程学习门槛，成为作者的重要学习工具。文章最后强调，AI虽然能辅助完成任务，但最终的学习和创作仍需个人努力。 </div>
                        <hr>
                    
                    <p><strong>编注： </strong>本文是「<a href="https://sspai.com/post/95877" target="_blank">2024 年度征文</a>」记录赛道的入围文章。文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>写作这篇文章的时间为 ChatGPT 发布约两年零两个月之后，正值国产开源大模型 DeepSeek 「小蓝鲸」在全球掀起风浪的时刻。</p><p>人工智能（Artificial Intelligence，AI）已经渗透进了几乎所有传播媒介。它在互联网某片文字角落隐匿藏身，又在引发「恐怖谷效应」的人物图片中显露无遗。它在语音和音乐中施展魔法，又会因为片刻的一致性缺失而在视频中露出马脚。</p><p>在过去一年 AI 引领的科技浪潮中，有人捧起诺贝尔奖的桂冠，有人喜提「中国教父」级称号后黯然离场，有人陷入「宫斗」疑云又重回宝座，有人豪掷千金狂堆算力基建。</p><p>在宏大叙事之外，AI 能帮我这个微小的个体做些什么？</p><p>过去一年，我开始将<strong>阅读、思考、写作</strong>当成最重要的三件事。不再为自己书看的少而焦虑，而是从问题和需求出发开启主动阅读。不再只是机械性地阅读，而是带有批判性的思考和理性的的论证。最终的写作输出让我体验到了大脑的「质变时刻」，激励我敢于分享的动力源泉则来自于《Show Your Work!》<sup class="ss-footnote" href="" title="Austin Kleon (2014). Show Your Work!: 10 Ways to Share Your Creativity and Get Discovered">1</sup>一书。</p><p>本文将从文字、图片、视频三个领域入手，依次记录我如何让 AI 协助我解决创作过程中遇到的<strong>编程问题</strong>。在文章的结尾，还有一个想要重塑学习的人对 AI 的真诚独白。</p><p>在进一步阅读之前，请先知晓以下基本信息：</p><ul><li>我使用的大模型：以下案例中所使用的大模型均为 GPT-4o；</li><li>我的编程水平：停留在看过 Python 基础教程的入门级水平。</li></ul><figure class="image ss-img-wrapper"><img alt="文章概览" src="https://cdnfile.sspai.com/2025/02/23/article/302624c235fea6ab31bff5987c2c44cd.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>本文概览</figcaption></figure><h2 style="margin-left: 0px;"><strong>文字</strong></h2><p>我的写作工作流是在 Obsidian 记录灵感和创作初稿、在 Typora 完成文章的配图和排版。而这两个软件的主题个性化设置都需要使用我没有学过的 CSS，这我不得不求助于 AI。</p><p>尽管 Obsidian 社区提供了悬浮目录的插件，但其外观样式实在是谈不上美观。我一心想将它改造成少数派网页端悬浮目录的样式。然而，仅凭我在主题定制的过程中学到的那一点点 CSS 知识，更改一个如此复杂的 CSS 文件着实超出我的能力了……</p><h3 style="margin-left: 0px;"><strong>在 Typora 排版公众号文章</strong></h3><p>之所以选择单独在 Typora 排版文章，是因为 Typora 能够实现与图床的联动，而且我可以将 Typora 中的文字样式直接复制到公众号编辑栏中。</p><p>我对文章排版的要求是在兼顾移动端阅读体验的同时形成差异化的风格。于是，我先让 AI 生成了一个大体的 CSS 模版，再将代码文件放置到 Typora 的主题文件夹内测试。<strong>AI 生成的代码确实把我的文章排版做了改动，但谈不上什么美感。</strong>在进一步的询问诸如「如何更改加粗字体的颜色」、「如何将文字设置为两端对齐」、「解释 margin 和 padding 的含义」等问题后，整体的文字样式有了进一步的优化。在这一过程中，最有趣的就是我一旦修改一个参数，Typora 编辑器中的文字样式就会发生相应的改变。这种即时的反馈是编程最令我着迷的地方之一。</p><figure class="image ss-img-wrapper"><img alt="GPT对话_公众号排版" src="https://cdnfile.sspai.com/2025/02/23/article/6b8e11e63fa118a4586220277285ef22.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>让 AI 编写一段用于文字排版的 CSS 代码</figcaption></figure><p>然而，无论 AI 如何向我解释 margin 和 padding 的含义，我还是不知道这两个调整间距的参数究竟有什么区别。最终，我还是依靠自己用搜索引擎找到的一张 CSS 盒子模型示意图，才终于了解了这二者的差别。</p><p>有了这些努力，我信心倍增，开始向 AI 提一些更个性化的需求。例如，「修改上述代码让引用块中最后一行文字单独设置为右对齐」、「如何单独将圆括号内的文字颜色设为灰色」。</p><p>提出第一个需求，是因为我想将这一行用来表明引用来源，如「——人名」。而将圆括号的解释文本设为灰色，是为了区分其与正文文本的主次关系，从而优化阅读体验。针对这两个需求，AI 并没有给我理想的解决方案。而这一过程中最痛苦的经历就是：<strong>我眼巴巴地看着它自信满满地一顿输出，结果当我把它修改后的代码复制过来运行时，才发现它根本并没有解决我提出的修改问题</strong>。</p><p>或许，AI 只能帮我走到这了。我并没有气馁，结合 AI 教给我的 CSS 知识和我对 Markdown 语法的了解，我开始了自己的优（zhē）化（teng）。</p><p>在引用块的设计上，我参照了 <a href="https://utgd.net/"><u>Untag</u></a> 网站的引用块样式，将引用块的背景设置为渐变颜色。</p><figure class="image ss-img-wrapper"><img alt="引用块1.0" src="https://cdnfile.sspai.com/2025/02/23/article/0c5c8f44dcfe1609c5f8e83d5f2fa52e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>引用块 1.0 样式</figcaption></figure><p>我刚开始尝试通过增加空格强行把引用源挤到屏幕的最右边，然而计算机很快就揭示了我的愚蠢。在经过一系列的失败之后，最终我想到了一个折中的办法：考虑到我在写作中很少使用到代码块，<strong>我把代码块伪装成了引用块的样式并让它单独承载引用来源</strong>。</p><figure class="image ss-img-wrapper"><img alt="引用块2.0" src="https://cdnfile.sspai.com/2025/02/23/article/7dd993fcf3304729380dd7691153ed7c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我心心念念的引用块样式</figcaption></figure><p>沿着同样的思路，<strong>我用行内代码块盛放圆括号中的内容并为其更改了颜色</strong>。最终，文字整体的排版风格符合我的预期。</p><figure class="image ss-img-wrapper"><img alt="整体排版风格" src="https://cdnfile.sspai.com/2025/02/23/article/ab8ac02d812dc1ff50e4e719d010ca41.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Typora 整体排版风格示例</figcaption></figure><p>如此一来，我在 Obsidian 中只需要使用 Markdown 语法安心写作，然后将文字复制到 Typora 中获得预制的排版样式，最终再粘贴到公众号编辑栏中发布。</p><h3 style="margin-left: 0px;"><strong>Obsidian 主题定制</strong></h3><p>Obsidian 是我的主力笔记软件，我同样希望它能够拥有满足我笔记需要的主题样式。</p><p>我对 Obsidian 主题的修改相对克制，只想在默认主题下通过定义 CSS 片段修改部分样式。而一上来我就遇到了麻烦：它对 Typora 能够调用的 CSS 文件并没有反应。</p><p>于是，我指定 GPT-4o 专门为 Obsidian 生成一个 CSS 代码片段。配合着少数派作者 @手动贩卖机的文章<a href="https://sspai.com/post/75363">《如何使用 CSS 改出一个令我满意的 Obsidian 外观？》</a>，我似乎摸到了点门道。</p><figure class="image ss-img-wrapper"><img alt="GPT对话_Obidian 主题定制" src="https://cdnfile.sspai.com/2025/02/23/article/dd232cfdd306695e0e2d89d33917764f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>让 AI 生成专用于 Obsidian 的 CSS 代码</figcaption></figure><p>除了灵感记录，我在 Obsidian 上的另一个重要记录就是阅读笔记。在阅读笔记的样式上，我参照了《芝加哥大学论文写作指南》中提供的阅读笔记模版<sup class="ss-footnote" href="" title="凯特·L·杜拉宾，雷蕾 译（2015），《芝加哥大学论文写作指南》，ch.4">2</sup>，并为适配电子阅读笔记作出一些调整。每一条阅读笔记结构上都要标明关键词、文献来源、文献页码以及阅读日期，部分无法标记页码的引文，我使用了章节数来代替。</p><p><strong>AI 基本能够实现我提出的改进需求，这让我大受鼓舞。</strong>在这一过程中唯一遇到的挫折就是在导入字体时遇到了障碍。后来，在 Obsidian 论坛中我才发现这是软件的一个错误：它只有在输入字体全称时才能导入新的字体。</p><figure class="image ss-img-wrapper"><img alt="Obsidian 笔记示例" src="https://cdnfile.sspai.com/2025/02/23/article/0db0d6fdd5395f165902836a56660e33.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>Obsidian 笔记样式示例</figcaption></figure><h3 style="margin-left: 0px;"><strong>「少数派风格」悬浮目录</strong></h3><p><strong>有了前面的经验，我跃跃欲试地想要对 Obsidian 悬浮目录插件 Floating TOC</strong><sup class="ss-footnote" href="" title="Floating TOC 插件由 @curtgrimes 开发，由 @cumany 维护，我仅作修改以供自己使用。">3</sup><strong>下手了。</strong>我很感激插件作者及维护者付出的努力，但它现在的外观真是一言难尽：指示条的形状和对齐方式不够美观、鼠标聚焦和当前位置的标题颜色有冲突、调用出目录时指示条丢失…… <strong>总之一句话，我想要少数派风格的悬浮目录！</strong>而拥有这一诉求的人并非只有我一个，在插件的 Github 页面以及 B 站相关视频的评论区，我看到了有着与我同样审美需求的 Obsidian 用户。</p><figure class="image ss-img-wrapper"><img alt="悬浮目录相关评论" src="https://cdnfile.sspai.com/2025/02/23/article/7ddcc7746ead3c67dac17d1d88410f3d.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>体现少数派审美的时刻</figcaption></figure><p>话不多说，先让 AI 帮我分析一下代码的结构（一开始用中文提问发现效果不佳，故改用英文）。AI 确实帮我详细梳理了整个代码文件的结构，并对代码的一些细节提供了解释。但是，当我让它针对我提出的外观改进要求修改代码时，它就又开始「迷之自信」模式了，生成的代码根本无法契合我的需要。</p><figure class="image ss-img-wrapper"><img alt="GPT对话_悬浮目录代码解释" src="https://cdnfile.sspai.com/2025/02/23/article/99e51786abdf1d192a67e0c773522eb3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>要求 AI 分析插件的 CSS 代码文件</figcaption></figure><p>看来还是得靠自己了。此处省略一段艰难的读码、改码过程，看看最终的修改效果。</p><figure class="image ss-img-wrapper"><img alt="桌面端悬浮目录截屏带阴影" src="https://cdnfile.sspai.com/2025/02/23/article/c494b6ac3ae98b645e5d1b6c84db40d8.gif" /><figcaption>桌面端悬浮目录效果演示</figcaption></figure><figure class="image ss-img-wrapper"><img alt="移动端悬浮目录" src="https://cdnfile.sspai.com/2025/02/23/article/539774372f147cf34f7b25ea63c61ff3.gif" /><figcaption>移动端悬浮目录效果演示</figcaption></figure><p>经过一番改造，Obisidan 的悬浮目录终于变成了我想要的样子！但是它仍有一些瑕疵有待后续改进，如标题过多或过长时出现的显示问题。回顾我的这一段改码经历，<strong>我觉得 AI 是在用它的亲切感引诱我去自己动手写代码，而它又确实是一个免费且随时为我解惑的编程老师</strong>。</p><h2 style="margin-left: 0px;"><strong>图片</strong></h2><p>在 Typora 完成文章的排版之后，我仍然不满意的是一级标题的样式。标题文字大小和颜色容易调整，但是使用一些特殊的字体则会在不同的终端设备上出现差异。我想为自己的文章配上较为醒目的大标题，一些公众号对上述问题的解决方案是直接用文本图片来当作标题。我没有选择用 Adobe Illustrator（为免歧义省去缩写）来制作，而是转而去尝试让 AI 帮我写一段可以复用的代码用以直接生成我想要的标题文本图片。</p><p>我在公众号文章及小红书上使用的配图多为示意图和表格，因此我把 Keynote 作为我的主力作图软件。而直接将 Keynote 文件转为图片格式，图片质量很差，先转成 PDF 再转成图片格式才能保持图像的分辨率。然而，令我没想到的是，这个简单的操作在我这里却出现了意外……</p><h3 style="margin-left: 0px;"><strong>制作标题文本图片</strong></h3><p>在公众号文章的标题文本图片的制作上，我在公众号「那个NG」中的标题样式设计的基础之上，对配色和数字图案进行了符合整体排版风格的修改。</p><p>AI 建议我使用 Python 的 Pillow 库来生成我想要的文本图片。在按照指示安装好完所需要的库以后，我迫不及待地在终端内运行了 AI 提供的代码。</p><figure class="image ss-img-wrapper"><img alt="GPT对话_文本图片生成" src="https://cdnfile.sspai.com/2025/02/23/article/d1676dd04c427a51e4a86302b0328911.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>AI 建议我使用 Pillow 库来制作文本图片</figcaption></figure><p>代码运行良好，生成了一张带有「Hello，World」字样的图片。经过与 GPT-4o 反复的沟通以及我对颜色、字体、圆角弧度、阴影偏移量等参数的调整，终于实现了我想要的样式。</p><figure class="image ss-img-wrapper"><img alt="这是标题一（初始）" src="https://cdnfile.sspai.com/2025/02/23/article/2a647c13132d52157a8d3440b84d184e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>标题图片样式 1.0</figcaption></figure><p>然而，这个图片还存在着两个问题：一是数字和文字的位置太靠下了；二是圆角矩形能看到明显的锯齿。在解决这两个问题的过程中，AI 再一次失灵了。最终，我还是通过搜索引擎找到了 Pillow 说明文档中关于文本对齐参数的解释。<strong>AI 已经计算对了居中文本的锚点位置，但是在对齐参数上使用了错误的默认值。</strong></p><figure class="image ss-img-wrapper"><img alt="Pillow 文本对齐" src="https://cdnfile.sspai.com/2025/02/23/article/79deb4050571e4e673646e5fb0b15333.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>这确实有点难为我和 AI 了</figcaption></figure><p>而针对图形的锯齿问题，AI 给出了几个解决方案，但它们都不适配于我所处的场境。最后，我还是通过搜索引擎找到了「先放大后缩小」的边缘锯齿解决方案。</p><figure class="image ss-img-wrapper"><img alt="这是标题一" src="https://cdnfile.sspai.com/2025/02/23/article/1edde26affdf50254ca07d83024a2b0c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>标题图片样式 2.0</figcaption></figure><p>这样，我每次只需要更改代码中的标题文字就能得到统一样式的标题文本图片了。</p><h3 style="margin-left: 0px;"><strong>PDF 转图片</strong></h3><p>用 PDF 阅读器不就能实现 PDF 转图片吗，为什么多此一举要靠代码实现？因为我电脑上的 PDF 阅读器没此功能啊！</p><p>也就是在我满心欢喜地准备把从 Keynote 转来的 PDF 再导出为图片时，我才发现自己买断制购买的 PDF Expert 2 竟然没有提供导出功能。本着省钱的原则，我还是求助 AI 帮我写了一段代码。</p><figure class="image ss-img-wrapper"><img alt="GPT对话_pdf转图片" src="https://cdnfile.sspai.com/2025/02/23/article/72dd80ee686cc57d56dca229d22ad281.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我只需再安装一个 pdf2image 模块</figcaption></figure><p>或许是这个需求过于简单和明确，AI 生成的代码运行良好，我只是让它额外增加了一个询问页码的功能。</p><figure class="image ss-img-wrapper"><img alt="终端运行pdf转图片代码" src="https://cdnfile.sspai.com/2025/02/23/article/f66d10a0c7f7d37c8b58fd2b5166c70e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>AI 生成的 PDF 转图片代码在终端内运行流畅</figcaption></figure><p>到这里，我终于构建起了从 Keynote 作图到导出高清图片的闭环。</p><h2 style="margin-left: 0px;"><strong>视频</strong></h2><p>在文字排版和图片制作方面尝到用代码提高效率的甜头后，我开始思考这一模式能否用在视频制作上。我很早就关注了专注于用视觉动画呈现数学知识的 Youtube 频道 <a href="https://www.youtube.com/3blue1brown"><u>3Blue1Brown</u></a> ，频道上那些精美的动画正是用频道所有者 Grant Sanderson 基于 Python 开发的数学动画引擎 Manim 制作的。我了解到还有类似的<strong>用编程制作视频</strong>的产品，如 Remotion 和 Motion Canvas。</p><p>而顺着这一思路，我也了解到动效制作软件 After Effects（AE）也可以使用代码。其代码使用的入口有两个：一个是指示图层属性执行某种操作的<strong>表达式</strong>，一个是指示应用程序执行某些操作的<strong>脚本</strong><sup class="ss-footnote" href="" title="引自：AE 用户指南，表达式和自动化">4</sup>。二者都基于 JavaScript 语言编写。</p><p>由于我目前我仍没有明确对视频创作的需求，下面仅以两个示例演示一下 AI 能如何帮助我使用 Manim 库和 AE 表达式来制作视频动画。</p><h3 style="margin-left: 0px;"><strong>使用 Manim 制作函数图像绘制动画</strong></h3><p>在对 Manim 库的代码一无所知的情况下，我尝试让 AI 帮我用 Manim 制作一个函数图像的绘制动画。</p><figure class="image ss-img-wrapper"><img alt="GPT对话_Manim 数学动画" src="https://cdnfile.sspai.com/2025/02/23/article/14ee181ebb3857736a74dcdecdb6cc26.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>让 AI 编写制作数学动画的代码</figcaption></figure><p>可喜的是，AI 生成的代码能够正常运行，在对其生成的代码未做任何修改的情况下我跑出了如下动画。</p><figure class="image ss-img-wrapper"><img alt="函数图像绘制1.0" src="https://cdnfile.sspai.com/2025/02/23/article/610beef39e80840a02d4dc497037a291.gif" /><figcaption>由 AI 编写的代码制作的动画</figcaption></figure><p>但这并我想要的。<strong>在随后的对话中，我始终无法用语言向 AI 说清楚我想要的动画效果究竟是怎样的。</strong>只有当我在 AI 和 Manim 官方文档的帮助下学习了 Manim 绘制动画的基本框架之后，我才最终实现了我脑海里想象的画面。</p><figure class="image ss-img-wrapper"><img alt="函数图像绘制动画2.0" src="https://cdnfile.sspai.com/2025/02/23/article/ea2003c57be7fae3ba8f94cfa5b2ebed.gif" /><figcaption>我脑海中的动画</figcaption></figure><h3 style="margin-left: 0px;"><strong>使用 AE 表达式制作小球落地动效</strong></h3><p>有时，使用表达式来控制图层动画可以省去反复添加关键帧和调节速率曲线的步骤。我尝试让 AI 帮我生成一段用于模拟小球落地弹跳动效的 AE 表达式。</p><figure class="image ss-img-wrapper"><img alt="GPT对话_AE 篮球落地动效" src="https://cdnfile.sspai.com/2025/02/23/article/5606b5905013c26b719936339bb84a66.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>AI 生成的 AE 表达式</figcaption></figure><p>可以看出，AI 真的在试图模拟真实物理世界的自由落体运动。然而，当我将上述代码复制到 AE 图层位置参数的表达式编辑器中之后，软件总是提示<strong>「无法将结果转变为数值」</strong>。我将这一错误反馈给 AI，它仍然没有解决这一问题。由于我还没有进一步探索，故暂未找到合适的解决办法。</p><p>值得一提的是，开发者 Hyper Brew 制作了一个集成有 ChatGPT 的 AE 插件 <a href="https://hyperbrew.co/tools/klutz-gpt/"><u>Klutz GPT</u></a>，使得用户可以在 AE 中直接询问 AI 让其生成 AE 表达式或脚本。插件还会将软件提示的代码错误报告自动粘贴至输入框，以便让 AI 进一步修改代码。</p><figure class="image ss-img-wrapper"><img alt="AE 的 GPT插件" src="https://cdnfile.sspai.com/2025/02/23/article/f4f07b7d8f9f6bab139d9a72d4d6f610.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图截自 Klutz GPT 作者的 YouTube 频道：Hyper Brew</figcaption></figure><p>插件作者在简介里风趣地写道：</p><blockquote><p><i>The most unreliable way to write expressions and scripts for After Effects.</i></p></blockquote><h2 style="margin-left: 0px;"><strong>结语</strong></h2><p>在这一段由个人创作需要而引发的编程学习过程中，编程给我带来的最有价值的思维方式就是「将复杂问题拆分成细小问题」。尽管写码、改码的过程耗费时间，但编程的边际效益会随着代码使用频率的增加而不断加大。如果套用黄仁勋推销 GPU 产品时所说的「The more you buy, the more you save」，可以将代码的可复用性带来的效率提升描述为「用的次数越多，省的时间越多」。</p><p>AI 降低了我学习编程的门槛，并成为了我最好的编程老师。它善于解决一些知识型问题，但在任务型问题上的表现则受到任务复杂度、模型泛化能力、提示词精确度等方面的限制。</p><p>本文在第三节「视频」部分显得有些草草收场，是因为我目前对视频创作仍没有明确的动机。私以为，作为一名普通用户，相比「AI 能不能……」「AI 大模型哪家强」这些问题，更多地去思考「我想用 AI 帮我做什么」「AI 帮我将任务完成度推进到了 X%，剩下的我该怎么办」或许更有价值。我也始终明白，无论这些科技巨头、商业巨鳄、拓宽人类知识边疆的学者以及充满理想和人文精神的算法工程师最终能否实现通用人工智能（Artificial General Intelligence，AGI），那起始的 0% 和逐步被硅基生命逼近的最后 1% 永远是留给有着血肉身躯的自己的。</p><p>在过去一年里，我结束了自己近二十年的学校生涯。而面对随后一系列的挫败感和无力感，我决定不再义愤填膺，也不再自怨自艾，而是选择以温和的方式重新教育自己一遍：让自己从教学对象变为学习发起者，让学习回归从需求出发、由问题引导的本源。</p><p>无比幸运的是，在这场孤独的旅程中能有 AI 一路伴我同行。</p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>