<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>宝玉的分享</title>
        <link>https://baoyu.io</link>
        
        <item>
            <id>https://baoyu.io/blog/detailed-prompts-vs-creative-ai-framework</id>
            <title>提示词是越详尽越好吗，还是更加富有创造性，让 AI 自己在一个大框架内展开就行呢？</title>
            <link>https://baoyu.io/blog/detailed-prompts-vs-creative-ai-framework</link>
            <guid isPermaLink="false">https://baoyu.io/blog/detailed-prompts-vs-creative-ai-framework</guid>
            <pubDate></pubDate>
            <updated>Tue, 12 Nov 2024 03:12:26 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    > 宝玉老师，向您请教，最近在看了您的“如何写提示词”文档加上平时大量模仿一些质量不错的提示词后，现在我陷入了另一层问题——我现在处理任何任务都想优先想提示词，但其实有些问题可能直接表述就可以，不需要那么复杂的处理，我好像把简单问题处理的更加复杂了。我想请教，提示词是越详尽越好吗，还是更加富有创造性，让ai自己在一个大框架内展开就行呢？
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai-life-coach-find-direction</id>
            <title>让 AI 当人生导师帮助寻找人生方向</title>
            <link>https://baoyu.io/blog/ai-life-coach-find-direction</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai-life-coach-find-direction</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Nov 2024 05:16:34 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    让 AI 当人生导师帮助寻找人生方向的应用价值很大，在感觉迷茫的时候可以试试
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/generate-ai-character-relationship-chart</id>
            <title>如何让 AI 生成小说中的人物关系图？</title>
            <link>https://baoyu.io/blog/generate-ai-character-relationship-chart</link>
            <guid isPermaLink="false">https://baoyu.io/blog/generate-ai-character-relationship-chart</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Nov 2024 07:45:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    我想根据《三国演义》文本生成人物关系图，比如马超吧，他一生中跟什么人发生了关系，像这种工作可以让ai做（或辅助做）吗？
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai-can-help-write-prompts-humans-write-high-level-prompts</id>
            <title>AI可以帮助人写出好的Prompt，但只有人能写出高水平的Prompt</title>
            <link>https://baoyu.io/blog/ai-can-help-write-prompts-humans-write-high-level-prompts</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai-can-help-write-prompts-humans-write-high-level-prompts</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Nov 2024 07:36:21 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    如何让 AI 帮你写 Prompt 呢？
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/how-to-input-large-text-into-chatgpt</id>
            <title>如何可以向 ChatGPT 输入大量文本内容并提问？</title>
            <link>https://baoyu.io/blog/how-to-input-large-text-into-chatgpt</link>
            <guid isPermaLink="false">https://baoyu.io/blog/how-to-input-large-text-into-chatgpt</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Nov 2024 07:26:35 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    我跟chatgpt对话，要给他喂大量数据，难道这些数据就都靠那个对话框输入输出吗？比如说我喂它一部三国演义txt文档。然后它就卡住不动了。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/how-to-reach-5m-arr-profitably</id>
            <title>如何从0做到年收入500万美元的盈利（分步指南）[译]</title>
            <link>https://baoyu.io/translations/how-to-reach-5m-arr-profitably</link>
            <guid isPermaLink="false">https://baoyu.io/translations/how-to-reach-5m-arr-profitably</guid>
            <pubDate></pubDate>
            <updated>Sat, 09 Nov 2024 04:50:22 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    一位身无分文的失业小哥，和父母住在一起。在2020年那一年，他看准AI是个风口，决定全力投入。在父母的卧室里，他创办了一家价值3500万美元的AI初创公司。现在公司的年收入已经达到800万美元，还在不断增长中。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/from-rubber-duck-to-ai-assistant-programmer-debugging-secrets</id>
            <title>从小黄鸭到 AI 助手：程序员的新时代调试秘诀</title>
            <link>https://baoyu.io/blog/from-rubber-duck-to-ai-assistant-programmer-debugging-secrets</link>
            <guid isPermaLink="false">https://baoyu.io/blog/from-rubber-duck-to-ai-assistant-programmer-debugging-secrets</guid>
            <pubDate></pubDate>
            <updated>Sun, 03 Nov 2024 03:08:55 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    现在到了 AI 时代，AI 就是程序员们升级版的“小黄鸭”，不仅能耐心的听你解释代码，它还会思考，会提问，会给出建议。就像金庸小说里面的扫地老僧，当你正在苦恼一个棘手的并发问题时，它会适时地问："你考虑过死锁的情况吗？"当你在纠结代码结构时，它会建议："这里如果用观察者模式，是不是会更优雅一些？"
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/could-ai-coding-assistants-take-over-software-development</id>
            <title>程序员的未来：AI 是否会接管编程工作？[译]</title>
            <link>https://baoyu.io/translations/could-ai-coding-assistants-take-over-software-development</link>
            <guid isPermaLink="false">https://baoyu.io/translations/could-ai-coding-assistants-take-over-software-development</guid>
            <pubDate></pubDate>
            <updated>Sat, 02 Nov 2024 02:55:41 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    AI 编程助手正在进入原属于人类程序员的代码领域。这些 AI 系统真的会全面接管软件开发吗？
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/openai-reddit-ama-responses</id>
            <title>OpenAI 在 Reddit 上的 Ask Me Anything 的一些回复</title>
            <link>https://baoyu.io/blog/openai-reddit-ama-responses</link>
            <guid isPermaLink="false">https://baoyu.io/blog/openai-reddit-ama-responses</guid>
            <pubDate></pubDate>
            <updated>Thu, 31 Oct 2024 21:41:03 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    OpenAI 在 Reddit 上的 Ask Me Anything 的一些回复
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/v0-dev-prompt-structure-explanation</id>
            <title>v0.dev prompt 结构详细解释（10/24/2024）</title>
            <link>https://baoyu.io/blog/v0-dev-prompt-structure-explanation</link>
            <guid isPermaLink="false">https://baoyu.io/blog/v0-dev-prompt-structure-explanation</guid>
            <pubDate></pubDate>
            <updated>Wed, 30 Oct 2024 22:23:37 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    通过图形解释 v0 Prompt 结构
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/microservices-organizational-structure-split</id>
            <title>微服务的本质不是模块的拆分，而是组织架构的拆分</title>
            <link>https://baoyu.io/blog/microservices-organizational-structure-split</link>
            <guid isPermaLink="false">https://baoyu.io/blog/microservices-organizational-structure-split</guid>
            <pubDate></pubDate>
            <updated>Tue, 29 Oct 2024 04:20:48 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    微服务架构只是一种技术手段，使用微服务架构的目的，不是为了让你的架构更流行更酷，也不是为了让你的服务尽可能小，而是借助微服务的架构，让团队规模变小，大开发部门变成各个小的开发小组，并且各个小组应该尽可能独立，减少相互依赖，减少沟通成本。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/programmer-learning-design-experience</id>
            <title>我的一点不成熟的程序员学习设计经验</title>
            <link>https://baoyu.io/blog/programmer-learning-design-experience</link>
            <guid isPermaLink="false">https://baoyu.io/blog/programmer-learning-design-experience</guid>
            <pubDate></pubDate>
            <updated>Mon, 28 Oct 2024 02:16:04 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    有朋友问程序员如何学设计，我的一点不成熟建议。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/how-to-write-good-prompt</id>
            <title>如何写好提示词？</title>
            <link>https://baoyu.io/blog/how-to-write-good-prompt</link>
            <guid isPermaLink="false">https://baoyu.io/blog/how-to-write-good-prompt</guid>
            <pubDate></pubDate>
            <updated>Wed, 23 Oct 2024 06:14:28 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    最近录了个视频，我并不擅长做教学视频，录的质量不算好，但是内容还是精心准备的，slides 都写了 110 页，差不多有 2 小时的时间。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/rag/5-chunking-strategies-for-rag</id>
            <title>RAG的5种切分策略 [译]</title>
            <link>https://baoyu.io/translations/rag/5-chunking-strategies-for-rag</link>
            <guid isPermaLink="false">https://baoyu.io/translations/rag/5-chunking-strategies-for-rag</guid>
            <pubDate></pubDate>
            <updated>Tue, 22 Oct 2024 20:07:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    RAG中的5种文本切分策略，直观解释！在RAG系统中，切分是指将大文档划分为较小、可管理的部分，称为“切片”。这一过程提高了检索的效率和准确性，直接改善了生成响应的质量。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/write-code-every-day</id>
            <title>每天写代码 [译]</title>
            <link>https://baoyu.io/translations/write-code-every-day</link>
            <guid isPermaLink="false">https://baoyu.io/translations/write-code-every-day</guid>
            <pubDate></pubDate>
            <updated>Tue, 22 Oct 2024 16:35:22 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    程序员 John Resig（JQuery 库作者）遇上了一件烦心事。他想完成一些兴趣项目（side projects），却发现在保证全职工作效率的前提下，很难推进。他常在每个周末疯狂赶工，力求完成更多，但压力和焦虑感总是爆棚，状态难以维系。有一天，在他人启发下，John 决定换一种策略：每天写代码。原本用整个周末投入兴趣项目，如今拆分到每一天，花不少于 30 分钟编程。半年后，他发现新策略产生了神奇的效果，他取得了超多成果：开发多个新网站、重写若干个框架、完成大量新模块。更重要的是，曾经困扰他的焦虑感，也烟消云散。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/why-senior-developers-find-react-harder-to-learn</id>
            <title>为什么越是老程序员学 React 越是难学</title>
            <link>https://baoyu.io/blog/why-senior-developers-find-react-harder-to-learn</link>
            <guid isPermaLink="false">https://baoyu.io/blog/why-senior-developers-find-react-harder-to-learn</guid>
            <pubDate></pubDate>
            <updated>Sat, 19 Oct 2024 03:01:19 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    初学者：第二次尝试学习 React 了，还是学不会，感觉上一次的学习经历没留下任何记忆。 

大师：React 是这样的。React 是这样的。

— 象牙山刘能
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/prompt/smart-card-prompt</id>
            <title>如何用 AI 自动生成一张“智慧卡片”？</title>
            <link>https://baoyu.io/blog/prompt/smart-card-prompt</link>
            <guid isPermaLink="false">https://baoyu.io/blog/prompt/smart-card-prompt</guid>
            <pubDate></pubDate>
            <updated>Mon, 14 Oct 2024 04:39:05 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    输入一句话，帮你生成一张“智慧卡片”图片。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/prompt/chinese-new-interpretation-pseudocode-explanation</id>
            <title>伪代码提示词“汉语新解”详解</title>
            <link>https://baoyu.io/blog/prompt/chinese-new-interpretation-pseudocode-explanation</link>
            <guid isPermaLink="false">https://baoyu.io/blog/prompt/chinese-new-interpretation-pseudocode-explanation</guid>
            <pubDate></pubDate>
            <updated>Mon, 14 Oct 2024 04:35:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    李继刚写的汉语新解，输入任意汉语，就可以生成一副卡片，不仅文案写的好，而且生成的卡片美观大方，一段几百字的提示词顶得上几千行代码写出来的应用程序效果，将伪代码和 Claude 的能力结合的绝到好处，真的是了不起👍佩服佩服！鉴于很多人不太理解伪代码和如何用伪代码写 Prompt，我将这段经典的 Prompt 拆解并结合一个例子解释一下。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/prompt-engineering/how-to-prevent-gpt-from-being-lazy-with-long-inputs</id>
            <title>如何在输入内容很长的情况下，让 GPT 不“偷懒”？</title>
            <link>https://baoyu.io/blog/prompt-engineering/how-to-prevent-gpt-from-being-lazy-with-long-inputs</link>
            <guid isPermaLink="false">https://baoyu.io/blog/prompt-engineering/how-to-prevent-gpt-from-being-lazy-with-long-inputs</guid>
            <pubDate></pubDate>
            <updated>Sat, 12 Oct 2024 05:24:12 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    最近比较好的解决了一个困扰我很久的 Prompt 难题：如何在输入内容很长的情况下，让 GPT 不偷懒？
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/langchain/ux-for-agents-part-3</id>
            <title>针对智能体的用户体验设计，第三部分：电子表格、生成式和协作式 UI/UX [译]</title>
            <link>https://baoyu.io/translations/langchain/ux-for-agents-part-3</link>
            <guid isPermaLink="false">https://baoyu.io/translations/langchain/ux-for-agents-part-3</guid>
            <pubDate></pubDate>
            <updated>Fri, 11 Oct 2024 05:02:51 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    了解批量处理智能体工作负载的电子表格用户体验、生成式 UI 以及与智能体协作的用户体验。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/langchain/ux-for-agents-part-2-ambient</id>
            <title>针对智能体的用户体验设计，第二部分：后台运行[译]</title>
            <link>https://baoyu.io/translations/langchain/ux-for-agents-part-2-ambient</link>
            <guid isPermaLink="false">https://baoyu.io/translations/langchain/ux-for-agents-part-2-ambient</guid>
            <pubDate></pubDate>
            <updated>Fri, 11 Oct 2024 04:02:36 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    我们将讨论后台运行的智能体，它可以同时处理多个任务，并探讨它们如何应用于您的工作流程。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/langchain/ux-for-agents-part-1-chat-2</id>
            <title>针对智能体的用户体验设计，第一部分：聊天 [译]</title>
            <link>https://baoyu.io/translations/langchain/ux-for-agents-part-1-chat-2</link>
            <guid isPermaLink="false">https://baoyu.io/translations/langchain/ux-for-agents-part-1-chat-2</guid>
            <pubDate></pubDate>
            <updated>Fri, 11 Oct 2024 02:47:29 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    人与计算机的交互已经研究了很多年。我相信在未来几年，人与智能体的交互也将成为一个重要的研究领域。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/langchain/planning-for-agents</id>
            <title>为智能体进行规划 [译]</title>
            <link>https://baoyu.io/translations/langchain/planning-for-agents</link>
            <guid isPermaLink="false">https://baoyu.io/translations/langchain/planning-for-agents</guid>
            <pubDate></pubDate>
            <updated>Fri, 11 Oct 2024 02:15:20 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    智能体规划的意义以及如何提升规划能力。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/langchain/why-you-should-outsource-your-agentic-infrastructure-but-own-your-cognitive-architecture</id>
            <title>为什么你应该外包智能体基础设施，但拥有认知架构 [译]</title>
            <link>https://baoyu.io/translations/langchain/why-you-should-outsource-your-agentic-infrastructure-but-own-your-cognitive-architecture</link>
            <guid isPermaLink="false">https://baoyu.io/translations/langchain/why-you-should-outsource-your-agentic-infrastructure-but-own-your-cognitive-architecture</guid>
            <pubDate></pubDate>
            <updated>Fri, 11 Oct 2024 01:55:55 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    了解为什么你应该根据应用定制认知架构，并运行更好的智能体应用基础设施。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/langchain/what-is-a-cognitive-architecture</id>
            <title>什么是“认知架构”？[译]</title>
            <link>https://baoyu.io/translations/langchain/what-is-a-cognitive-architecture</link>
            <guid isPermaLink="false">https://baoyu.io/translations/langchain/what-is-a-cognitive-architecture</guid>
            <pubDate></pubDate>
            <updated>Fri, 11 Oct 2024 01:17:24 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    “认知架构”一词在神经科学和计算认知科学中有着 悠久的历史 。根据维基百科的定义，“认知架构”既指关于人类思维结构的理论，也指该理论的计算实现。这一定义（以及相关的研究和文章）比我在此提出的定义更全面，本篇博文应被视为我在过去一年中构建和帮助构建基于大语言模型（LLM）的应用程序经验与该研究领域的映射。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/langchain/what-is-an-agent</id>
            <title>什么是智能体？[译]</title>
            <link>https://baoyu.io/translations/langchain/what-is-an-agent</link>
            <guid isPermaLink="false">https://baoyu.io/translations/langchain/what-is-an-agent</guid>
            <pubDate></pubDate>
            <updated>Fri, 11 Oct 2024 01:06:24 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    💡智能体是一个使用大语言模型（LLM）来决定应用程序控制流的系统。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/ai/generative-ais-act-o1</id>
            <title>生成式AI 新一幕：推理模型登场 [译]</title>
            <link>https://baoyu.io/translations/ai/generative-ais-act-o1</link>
            <guid isPermaLink="false">https://baoyu.io/translations/ai/generative-ais-act-o1</guid>
            <pubDate></pubDate>
            <updated>Thu, 10 Oct 2024 14:42:55 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    本文深入探讨了生成式AI的新阶段，揭示了从“快速反应”到“深度推理”的转变趋势。随着微软、OpenAI等科技巨头在AI基础层的主导地位日益稳固，未来的焦点将转向AI推理能力的提升，比如OpenAI的最新模型o1，它具备在推理时“停下来思考”的能力，不再仅仅依赖预训练数据的模式匹配。这一推理能力的进化将引领AI进入全新的智能应用时代，帮助AI解决复杂任务，创造巨大市场机会。文章还指出，未来AI或将实现类似AlphaGo超人表现的突破，真正展现出接近人类思维的能力。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/gpt/gpt-translation-long-content-optimization</id>
            <title>GPT 无法翻译超长内容的提示词优化尝试</title>
            <link>https://baoyu.io/blog/gpt/gpt-translation-long-content-optimization</link>
            <guid isPermaLink="false">https://baoyu.io/blog/gpt/gpt-translation-long-content-optimization</guid>
            <pubDate></pubDate>
            <updated>Wed, 09 Oct 2024 22:32:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    最近科技文章翻译 GPT https://chatgpt.com/g/g-uBhKUJJTl-ke-ji-wen-zhang-fan-yi 一直有用户反馈内容长了就不翻译，变成摘要了，这是由于内容一长，GPT-4o “变懒”了，于是不翻译完整内容，只是摘要。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai-agent/what-you-need-is-ai-friendly-workflow</id>
            <title>What You Need Is Not an AI Agent, But an AI-Friendly Workflow</title>
            <link>https://baoyu.io/blog/ai-agent/what-you-need-is-ai-friendly-workflow</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai-agent/what-you-need-is-ai-friendly-workflow</guid>
            <pubDate></pubDate>
            <updated>Wed, 09 Oct 2024 16:55:16 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    The concept of AI agents is gaining popularity, and some people see them as a silver bullet for solving problems with AI. The hype around AI agents suggests that if you have one, many challenges can be easily tackled. However, there are also those who argue that AI agents are overhyped and lack real, viable applications.
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai/ai-dumbness-is-knowable-human-dumbness-is-unknowable</id>
            <title>AI 的笨是可知的，小弟的笨是不可知的</title>
            <link>https://baoyu.io/blog/ai/ai-dumbness-is-knowable-human-dumbness-is-unknowable</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai/ai-dumbness-is-knowable-human-dumbness-is-unknowable</guid>
            <pubDate></pubDate>
            <updated>Mon, 07 Oct 2024 20:41:43 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    匿名投稿：《AI 的笨是可知的，小弟的笨是不可知的》

来自一位大厂朋友的经验分享，谈他在用 AI 辅助写代码的感受
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai/reverse-engineering-openai-canvas-prompt-generation</id>
            <title>用 AI 反向代码案例：揭秘 OpenAI Canvas 如何根据用户操作拼接生成 Prompt</title>
            <link>https://baoyu.io/blog/ai/reverse-engineering-openai-canvas-prompt-generation</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai/reverse-engineering-openai-canvas-prompt-generation</guid>
            <pubDate></pubDate>
            <updated>Mon, 07 Oct 2024 16:36:21 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    用一个实例来看看如何借助 AI 来反向代码，帮助你更好的理解一些商业产品功能的实现。这里以 OpenAI 新推出的 Canvas 为例，我们看看它是如何根据用户的操作生成不同 Prompt 的。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/software-engineering/compare-two-methods-for-generating-summary-prompts</id>
            <title>对比一下两种不同生成摘要提示词的效果</title>
            <link>https://baoyu.io/blog/software-engineering/compare-two-methods-for-generating-summary-prompts</link>
            <guid isPermaLink="false">https://baoyu.io/blog/software-engineering/compare-two-methods-for-generating-summary-prompts</guid>
            <pubDate></pubDate>
            <updated>Sun, 06 Oct 2024 11:54:17 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    我分别用两种不同的提示词对前面一篇文章生成了摘要，这效果差别有点大！
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/software-engineering/escape-bad-code-trap-refactoring-best-practices</id>
            <title>如何摆脱烂代码陷阱：从重构到最佳实践的实战经验</title>
            <link>https://baoyu.io/blog/software-engineering/escape-bad-code-trap-refactoring-best-practices</link>
            <guid isPermaLink="false">https://baoyu.io/blog/software-engineering/escape-bad-code-trap-refactoring-best-practices</guid>
            <pubDate></pubDate>
            <updated>Sun, 06 Oct 2024 06:41:10 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    你是否被烂代码困扰？Martin Fowler 的代码异味理论指出，烂代码背后往往隐藏着更深层次的问题。本篇文章分享了如何通过严格的代码审查、系统设计、技术债务管理以及最佳实践，帮助团队从烂代码的泥潭中解脱出来，显著提高开发效率。学会如何有效重构老项目，如何制定最佳实践，让你的团队从“屎山”代码中脱胎换骨！
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/software-engineering/better-code-quality-control-for-growing-small-teams</id>
            <title>对于小型团队而言，当代码量逐渐变大，有什么更好的控制代码质量的方法吗？</title>
            <link>https://baoyu.io/blog/software-engineering/better-code-quality-control-for-growing-small-teams</link>
            <guid isPermaLink="false">https://baoyu.io/blog/software-engineering/better-code-quality-control-for-growing-small-teams</guid>
            <pubDate></pubDate>
            <updated>Sun, 06 Oct 2024 02:07:58 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    对于小型团队而言，当代码量逐渐变大（大至一万行左右）时，有什么更好的控制代码质量的方法吗？
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/cloudflare/cloudflare-workers-nextjs-deep-integration</id>
            <title>CloudFlare 使用 Workers 和 Nextjs 的深度集成</title>
            <link>https://baoyu.io/blog/cloudflare/cloudflare-workers-nextjs-deep-integration</link>
            <guid isPermaLink="false">https://baoyu.io/blog/cloudflare/cloudflare-workers-nextjs-deep-integration</guid>
            <pubDate></pubDate>
            <updated>Sun, 06 Oct 2024 01:02:58 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    以前 CloudFlare 只提供了 Cloudflare Pages 的方式集成 Nextjs，现在有了 OpenNext 项目后，Nextjs 也可以和 Cloudflare Workers 集成，这意味着你创建一个项目，不仅有网站，还有 Workers。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai/o1-cutting-edge-ai-use-reverse-engineering-code</id>
            <title>分享一点前沿 AI 用法：用 o1 逆向代码</title>
            <link>https://baoyu.io/blog/ai/o1-cutting-edge-ai-use-reverse-engineering-code</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai/o1-cutting-edge-ai-use-reverse-engineering-code</guid>
            <pubDate></pubDate>
            <updated>Sun, 06 Oct 2024 00:51:29 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    o1 似乎一直没啥热度，毕竟大多数人不用做数学做学术，写代码也有很多代替的。我最近倒是研究出来一个有意思的用法，就是用它逆向代码。对于 Web 应用程序，代码保护的方式就是混淆，但是混淆后的代码你是可以轻松获取到的。可以用 o1 来反向一些有价值的但是混淆保护后的代码，效果惊人。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai/use-ai-to-assist-programming-like-an-intern</id>
            <title>像用实习生一样用 AI 辅助你编程</title>
            <link>https://baoyu.io/blog/ai/use-ai-to-assist-programming-like-an-intern</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai/use-ai-to-assist-programming-like-an-intern</guid>
            <pubDate></pubDate>
            <updated>Sat, 05 Oct 2024 08:21:23 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    > 我是不敢让 ai 帮我写程序的，每回问它的问题，十次倒有八次是错的，问完之后还要自己去网上搜一遍，然后反复测试，才敢写进代码。 不知道大家怎么甩手给它的。
>
> ——响马
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/prompt-engineering/how-to-avoid-translated-content-being-treated-as-dialog</id>
            <title>在构建 Prompt 时，如何避免把翻译内容当成对话内容？</title>
            <link>https://baoyu.io/blog/prompt-engineering/how-to-avoid-translated-content-being-treated-as-dialog</link>
            <guid isPermaLink="false">https://baoyu.io/blog/prompt-engineering/how-to-avoid-translated-content-being-treated-as-dialog</guid>
            <pubDate></pubDate>
            <updated>Thu, 03 Oct 2024 23:37:18 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    这是一个常见的问题，比如我有一个翻译的 GPT 或者 LLM 应用，有以后 AI 会混淆输入的内容和指令，不清楚你说的话是要它翻译还是在跟它对话。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/prompt/openais-meta-prompt-for-optimizing-gpt-prompts</id>
            <title>OpenAI 的 PlayGround 新增加的提示词优化工具，以及它的提示词</title>
            <link>https://baoyu.io/blog/prompt/openais-meta-prompt-for-optimizing-gpt-prompts</link>
            <guid isPermaLink="false">https://baoyu.io/blog/prompt/openais-meta-prompt-for-optimizing-gpt-prompts</guid>
            <pubDate></pubDate>
            <updated>Thu, 03 Oct 2024 18:10:12 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    OpenAI's "meta" prompt for optimizing GPT prompts on the playground.
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/prompt/full-prompt-chatgpt-4o-with-canvas</id>
            <title>Full Prompt of ChatGPT 4o with canvas</title>
            <link>https://baoyu.io/blog/prompt/full-prompt-chatgpt-4o-with-canvas</link>
            <guid isPermaLink="false">https://baoyu.io/blog/prompt/full-prompt-chatgpt-4o-with-canvas</guid>
            <pubDate></pubDate>
            <updated>Thu, 03 Oct 2024 10:00:23 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Full Prompt of ChatGPT 4o with canvas and how to get the full prompt
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/tech/migrate-blog-to-cloud-flare</id>
            <title>将博客系统迁移至了 CloudFlare</title>
            <link>https://baoyu.io/blog/tech/migrate-blog-to-cloud-flare</link>
            <guid isPermaLink="false">https://baoyu.io/blog/tech/migrate-blog-to-cloud-flare</guid>
            <pubDate></pubDate>
            <updated>Wed, 02 Oct 2024 15:00:18 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    记录我将博客系统迁移到 CloudFlare 的经历。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/prompt-engineering/prompt-engineering-classification-of-techniques-and-prompt-tuning</id>
            <title>提示词工程：技术分类与提示词微调[译]</title>
            <link>https://baoyu.io/translations/prompt-engineering/prompt-engineering-classification-of-techniques-and-prompt-tuning</link>
            <guid isPermaLink="false">https://baoyu.io/translations/prompt-engineering/prompt-engineering-classification-of-techniques-and-prompt-tuning</guid>
            <pubDate></pubDate>
            <updated>Sat, 28 Sep 2024 16:08:45 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    作为一个新兴的研究领域，提示词工程尚未有明确的技术分类。当你查看各种讨论这些技术的文章和网站时，你会发现它们风格各异，且缺乏系统性。因此，实践者通常会采用最简单的方法。在本文中，我将为提示词工程技术提供一个概览，并提出一个清晰的分类，这将帮助你更好地理解这些概念并有效应用它们。此外，我还将探讨如何将提示词工程作为一个数据科学过程进行，其中包括提示词微调和评估。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/ai/why-generalists-own-the-future</id>
            <title>为什么未来属于通才[译]</title>
            <link>https://baoyu.io/translations/ai/why-generalists-own-the-future</link>
            <guid isPermaLink="false">https://baoyu.io/translations/ai/why-generalists-own-the-future</guid>
            <pubDate></pubDate>
            <updated>Sat, 28 Sep 2024 09:38:22 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    在 AI 时代，懂一点多领域知识比只懂一个领域的深度知识更有价值
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/prompt-engineering/is-prompt-engineering-dead</id>
            <title>提示工程师是最短命的职业吗？提示工程已经死了吗？</title>
            <link>https://baoyu.io/blog/prompt-engineering/is-prompt-engineering-dead</link>
            <guid isPermaLink="false">https://baoyu.io/blog/prompt-engineering/is-prompt-engineering-dead</guid>
            <pubDate></pubDate>
            <updated>Fri, 20 Sep 2024 10:55:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    随着 OpenAI 新的推理模型 o1 preview 的发布，它能自动生成高质量思维链，很简单的提示词也可以得到很不错的效果，所以很多人觉得提示工程已经死了，提示工程师是世上最短命的职业之一。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/transcript/t-mobile-capital-markets-day-2024-sam-altman</id>
            <title>Sam Altman：新发布的推理模型 o1 preview 相当于 GPT-2 时刻，但是升级曲线会很陡峭，意味着很快就会达到它的 GPT-4 时刻 [译]</title>
            <link>https://baoyu.io/translations/transcript/t-mobile-capital-markets-day-2024-sam-altman</link>
            <guid isPermaLink="false">https://baoyu.io/translations/transcript/t-mobile-capital-markets-day-2024-sam-altman</guid>
            <pubDate></pubDate>
            <updated>Thu, 19 Sep 2024 22:04:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: OpenAI, AI发展阶段, 推理模型, 通用人工智能  
<br>
<br>
总结: 在2024年T-Mobile Capital Markets Day上，OpenAI CEO Sam Altman讨论了AI的五个发展阶段，从聊天机器人到完整的组织。他指出，当前正处于推理系统阶段，预计将快速推动向AI智能体的过渡。OpenAI的成功源于坚定的信念和专注的研究方向，坚信深度学习的潜力，并努力实现通用人工智能（AGI）。同时，OpenAI会根据新知识调整研究方向，力求在医疗、教育和科学研究等领域产生积极贡献。 </div>
                        <hr>
                    
                    在 2024 年 T-Mobile Capital Markets Day 上，OpenAI CEO Sam Altman 的一段访谈。OpenAI 新发布的推理模型 o1 preview 相当于 GPT-2 时刻，但是升级曲线会很陡峭，意味着很快就会达到它的 GPT-4 时刻。AI 的五个发展阶段。第一个阶段是聊天机器人。第二个阶段，也就是我们现在刚刚达到的，是推理系统。第三阶段是 AI 智能体。第四阶段是创新者，具有发现新科学信息的能力。第五阶段是完整的组织。从第一阶段过渡到第二阶段花费了一段时间，第二阶段能相对较快地推动第三阶段 AI 智能体的发展。OpenAI 不会用 API 调用的数据后者训练的数据来训练他们的模型。OpenAI 成功的秘诀是因为有坚定的信念和保持专注，能保持研究方向的聚焦。坚信深度学习的力量，相信可以从现有的状态一路走到通用人工智能（AGI）甚至更远，尽最大努力做得最好，并试图保持研究方向的聚焦。与此同时，会根据前进过程中学到的新知识来调整方向。尽全力去完成每一个任务，随着时间的推移，就能产生积累效应。看好未来 AI 在医疗保健领域、教育领域和科学研究领域上的贡献。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/o1/reverse-engineering-openai-o1</id>
            <title>对 OpenAI o1 的逆向工程[译]</title>
            <link>https://baoyu.io/translations/o1/reverse-engineering-openai-o1</link>
            <guid isPermaLink="false">https://baoyu.io/translations/o1/reverse-engineering-openai-o1</guid>
            <pubDate></pubDate>
            <updated>Tue, 17 Sep 2024 20:40:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    通过生产化测试时间计算揭示 AI 的未来。探索已经在语言模型训练中应用。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai/o1-and-inference-scaling-law</id>
            <title>推理规模扩展定律（inference scaling law）会成为大力出奇迹的新方向吗？它能带我们走进 AGI 吗？</title>
            <link>https://baoyu.io/blog/ai/o1-and-inference-scaling-law</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai/o1-and-inference-scaling-law</guid>
            <pubDate></pubDate>
            <updated>Sun, 15 Sep 2024 12:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    OpenAI 新发布的推理模型 o1 开辟了一个新的范式，就是推理规模扩展定律（inference scaling law），它到底是什么？能带我们走进 AGI 吗？
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai/o1-and-alphago</id>
            <title>在 o1 发布后，回顾当年 Jim Fan 对 Q*的预测，他对了吗？</title>
            <link>https://baoyu.io/blog/ai/o1-and-alphago</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai/o1-and-alphago</guid>
            <pubDate></pubDate>
            <updated>Sun, 15 Sep 2024 12:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    去年 Jim Fan 曾对传闻中的 Q* 有了一些有趣的猜测，让我们回头看看是不是对的。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/translations/anthropic/how-anthropic-built-artifacts</id>
            <title>Anthropic 如何构建 Artifacts [译]</title>
            <link>https://baoyu.io/translations/anthropic/how-anthropic-built-artifacts</link>
            <guid isPermaLink="false">https://baoyu.io/translations/anthropic/how-anthropic-built-artifacts</guid>
            <pubDate></pubDate>
            <updated>Thu, 29 Aug 2024 20:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Artifacts 背后的团队——一种与 Claude 互动的新颖方式——分享了他们如何在三个月内通过分布式团队打造这一功能的独家细节。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://baoyu.io/blog/ai/big-companies-instead-of-copying-cursor-should-make-ai-email-client</id>
            <title>大厂与其山寨 Cursor，不如做个好用的 AI 邮件客户端</title>
            <link>https://baoyu.io/blog/ai/big-companies-instead-of-copying-cursor-should-make-ai-email-client</link>
            <guid isPermaLink="false">https://baoyu.io/blog/ai/big-companies-instead-of-copying-cursor-should-make-ai-email-client</guid>
            <pubDate></pubDate>
            <updated>Sun, 25 Aug 2024 10:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    大厂抄 Cursor，这样追在别人屁股后面跑是没有前途的，Cursor 已经是红海了，就算大厂又如何，微软比 Cursor 大多少？结果 GitHub Copilot 也没打过 Cursor，大厂还不如多投资几家像 Cursor 这样的公司，为什么非要抄他们呢！
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>