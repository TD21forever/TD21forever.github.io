<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>AI探索站 - 即刻圈子</title>
        <link>https://m.okjike.com/topics/63579abb6724cc583b9bba9a</link>
        
        <item>
            <id>https://m.okjike.com/originalPosts/67469876ba0429bf87824471</id>
            <title>AI探索站 11月27日</title>
            <link>https://m.okjike.com/originalPosts/67469876ba0429bf87824471</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/67469876ba0429bf87824471</guid>
            <pubDate></pubDate>
            <updated>Wed, 27 Nov 2024 03:56:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    聊几点我对 Anthropic MCP 的看法：<br /><br />1. 并没有像自媒体鼓吹的那样夸张，还不至于让 AI 行业变天，依然有很长的路要走；<br /><br />2. 可以简单理解跟大模型已经支持的 Function Calling 是同一个东西，本质是为了让大模型可以调用外挂的服务，对接更多的数据和能力，再作为补充上下文回答用户的问题；<br /><br />3. 区别点在于：Function Calling 由大模型通过 HTTP 请求第三方的外挂 API，而 MCP 是由大模型通过 RPC 请求第三方的外挂服务；<br /><br />4. 从接入方式上看，Function Calling 更简单，第三方只需要写一个 API，再在大模型配置对 API 的请求参数即可。MCP 接入起来要复杂一些，第三方需要写个服务，实现协议里定义的 RPC 方法，再在大模型里面配置服务地址和参数，大模型客户端在启动的时候需要做一次服务发现，再连接到配置的 RPC 服务，才能在后续对话过程调用；<br /><br />5. Function Calling 和 MCP 的核心和难点都在于大模型侧的意图识别，用户随机提问，如何找到匹配的外挂服务，实现 RAG，这是所有大模型面临的通用难题（比如 ChatGPT 有几百万的 GPTs 应用，如何根据用户提问路由到最匹配的那个 GPTs 来回答问题），MCP 协议并不能解决这个问题。Claude 客户端目前的实现方式，是让用户自己写个配置文件，告诉大模型有哪些可以调用的服务，再由 Claude 在对话时自动识别，跟 ChatGPT 之前让用户选择使用哪些 Plugins 的逻辑一致；<br /><br />6. MCP 的亮点是定义了一套标准且相对完善的协议，对于大模型和应用的生态协同有很大的指导意义。类似由微软提出并在 VS Code 实现的 LSP 协议一样（定义了编辑器如何与第三方语言服务交互，实现代码补全/类型约束/错误提示等功能）。MCP 协议的适用对象主要是大模型/应用客户端和第三方服务，跟 LSP 不同的是，编程语言的数量相对有限，最多几百个语言服务，社区协同下很快就能全部支持，编辑器可以根据文件的后缀快速定位到要调用的语言服务。MCP 适用的第三方服务是海量的，MCP 的发展取决于有多少第三方服务愿意基于这套协议去实现 RPC 服务，最关键的还是大模型/应用客户端对海量 MCP 服务的路由寻址问题（没有固定的后缀，只能靠意图识别或者人工配置）。<br /><br />7. OpenAI 最初开放的 API 协议已经成了一个约定俗成的标准，后来的大模型在开放自家 API 时都会选择兼容 OpenAI 的 API，主要原因有两个：一是 OpenAI 的 API 开放的早，很多应用接入了，兼容它对第三方接入友好；二是 OpenAI 的 API 实现的确实很规范，照着模范生抄作业何乐不为。MCP 会不会也跟 OpenAI 的 API 协议一样，成为行业内的新标准，这个问题取决于先有鸡还是先有蛋：如果有足够多的第三方服务基于这套协议开放了自己的服务，其他大模型/应用客户端应该会跟进；如果主流的大模型/应用客户端都支持了这套协议，那么作为一个第三方，也肯定愿意按这套协议开放自己的服务（比起为 GPTs / Coze / Dify 分别写一个 API 给智能体调用，MCP 服务只需要写一次，可以在任意支持 MCP 的客户端调用）。<br /><br />8. MCP 目前不支持 Remote Server，不能在网页版调用，只能在 Claude 桌面版使用。我写了一个用 Claude 客户端分析群聊记录的程序，结合实例来看 MCP 的应用，很好理解。MCP 的想象空间还是很大的，未来可期。<br /><br />个人经验之谈，有表达不当之处，欢迎补充讨论。🌚
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6745bbf85f3c97961e12d089</id>
            <title>AI探索站 11月26日</title>
            <link>https://m.okjike.com/originalPosts/6745bbf85f3c97961e12d089</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6745bbf85f3c97961e12d089</guid>
            <pubDate></pubDate>
            <updated>Tue, 26 Nov 2024 12:15:52 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Qwen2vl-Flux 这个模型用 Qwen2VL 替换了 FLUX 中的 T5 模型。<br /><br />让 FLUX 的多模态图像理解和提示词理解变得很强。<br /><br />- 无文本图像直接基于图像生成图像<br />- 类似 IPA 将图片和文字结合生成对应风格的图片<br />- GridDot控制面板，细致的风格提取<br />- ControlNet 集成，支持 Depth 和 canny<br /><br />模型下载：https://huggingface.co/Djrango/Qwen2vl-Flux
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6745b8908dc1346967e00edf</id>
            <title>AI探索站 11月26日</title>
            <link>https://m.okjike.com/originalPosts/6745b8908dc1346967e00edf</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6745b8908dc1346967e00edf</guid>
            <pubDate></pubDate>
            <updated>Tue, 26 Nov 2024 12:01:20 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Arcads AI 这个工具可以快速生成假的街头采访视频。<br /><br />很适合用来做广告。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6745a48453ab99f7fde103a5</id>
            <title>AI探索站 11月26日</title>
            <link>https://m.okjike.com/originalPosts/6745a48453ab99f7fde103a5</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6745a48453ab99f7fde103a5</guid>
            <pubDate></pubDate>
            <updated>Tue, 26 Nov 2024 10:35:48 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    AI带娃很有搞头。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/67448d3f8d6dd8c09c11b031</id>
            <title>AI探索站 11月25日</title>
            <link>https://m.okjike.com/originalPosts/67448d3f8d6dd8c09c11b031</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/67448d3f8d6dd8c09c11b031</guid>
            <pubDate></pubDate>
            <updated>Mon, 25 Nov 2024 14:44:15 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    卧槽，怪不得Runway要发图像模型狙击<br /><br />Luma 的这套交互流程更新太牛批了。<br /><br />将文字、图像、视频融合到一个流程中为创意服务，太强了，一定要试试。<br /><br />具体更新内容：<br /><br />- 发布ios客户端<br />- 创新的线性聊天交互页面，真正释放创意<br />- Luma Photon 图像模型<br />- 支持混合任何图片类型和风格<br />- 单张图片实现角色一致性
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6743c0b5cc17b0c5d3581360</id>
            <title>AI探索站 11月25日</title>
            <link>https://m.okjike.com/originalPosts/6743c0b5cc17b0c5d3581360</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6743c0b5cc17b0c5d3581360</guid>
            <pubDate></pubDate>
            <updated>Mon, 25 Nov 2024 00:11:33 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Claude 封号越来越凶了...<br />早晨起来群里又是一片哀嚎<br />我被封了！wc 我也被封了！我都被封麻了！<br /><br />大家都在找国产平替 Claude<br />有位群友推荐了通义<br />因为上周通义发布了最强的开源代码模型 Qwen Coder 2.5<br />这个模型不仅达到了开源代码模型的最强水平<br />而且还和4o、Claude 3.5 都打得有来有回<br />通义PC官网上线了代码模式，用的就是这个模型<br /><br />这是一个代码小白也可以用来写网页的工具，有点类似 Claude Artifact <br />输入自己的小需求，它就会自动生成相应的网页小工具<br />比如图里的这几个，计算器、单词卡<br />俄罗斯方块这样的小游戏也不在话下<br /><br />虽然目前第一版有时候还会有点小bug<br />不过毕竟免费不限量使用，未来还是值得期待一下的<br />如果需要可以去通义官网试试，APP 应该还没上<br /><br />通义官网指路<br />https://tongyi.aliyun.com/qianwen/
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6742dfe0c97cf714e207bb1d</id>
            <title>AI探索站 11月24日</title>
            <link>https://m.okjike.com/originalPosts/6742dfe0c97cf714e207bb1d</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6742dfe0c97cf714e207bb1d</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Nov 2024 08:12:16 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    AI 可能是一种新的印刷术。<br /><br />印刷术让内容复制大为便利。在15-16世纪，印刷术的崛起，打破了各大教堂对文本的控制。在印刷术崛起前的1424年，剑桥大学图书馆总共只有122本书。在印刷术崛起后的1454年至1500年的46年中，欧洲印刷了超过1200万册图书。<br /><br />AI可能是一种新的印刷术。这种印刷术，在内容压缩的基础上，让内容的remix变得极为便利。任何用户都有能力通过AI产生内容。印刷，让人人可复制内容。AI，让人人能创作内容。<br /><br />然而有意思的是，印刷术本身，并没有产生科学。但没有印刷术，科学在人类中的发展速度大概率会慢很多。AI可能也类似。AI本身产生不了创新，但AI工具可以极大帮助创新发生。本需要50-100年发生的创新，有了AI后，很可能能在接下来5-10年内发生。这非常让人激动。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6742ae53771ba3711e5f5943</id>
            <title>AI探索站 11月24日</title>
            <link>https://m.okjike.com/originalPosts/6742ae53771ba3711e5f5943</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6742ae53771ba3711e5f5943</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Nov 2024 04:40:51 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    给 Jellycat 做了再见爱人联名款。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6731edb09c3d17b69b20b79d</id>
            <title>AI探索站 11月11日</title>
            <link>https://m.okjike.com/originalPosts/6731edb09c3d17b69b20b79d</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6731edb09c3d17b69b20b79d</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Nov 2024 11:42:40 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    原来我在 GPT 眼里已经这么老了，好奇大家的<br /><br />prompt ：<br />based on what you know about me. draw a picture of what you think my current life looks like
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6724416cc5328b51c42a9f0c</id>
            <title>AI探索站 11月01日</title>
            <link>https://m.okjike.com/originalPosts/6724416cc5328b51c42a9f0c</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6724416cc5328b51c42a9f0c</guid>
            <pubDate></pubDate>
            <updated>Fri, 01 Nov 2024 02:48:12 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    🔍 ChatGPT Search 来了，初体验相当惊艳～<br /><br />看到 Sam Altman 罕见自荐了一个浏览器插件，令人感到十分好奇。 回想了下，Open AI到底还有哪些神秘产品没有发布？ <br /><br />打开ChatGPT 网页，原来Search 正式登场了。快速测试后，不得不说新产品的体验确实令人惊艳：<br /><br />-  首先是产品形态的惊喜。在输入框下方，多了个小小按钮——「搜索」。（这个登场大大超出了预期， 因为我们都是在等一个独立Search GPT） <br />- 然后，搜索的质量。快速测试一些实时性较高的搜索内容， 例如， 夏威夷冲浪🏄‍♀️，上海台风🌀 ，以及任天堂新App🎵； 每次查询的结果，都相当不错。 <br />- 即使对我这个Perplexity 深度用户来说，从性能、易用性以及美观性，ChatGPT Search都做到了一流的体验。 <br />- 最令人印象深刻的是输入框这里的设计，将聊天和搜索如此自然的融合，这种无缝感知是点睛之笔。 <br /><br />ChatGPT 再次将AI 的打开方式带到了新高度， Bravo 👏<br /><br />🧩 One More Thing：<br /><br />推荐尝试下这个Chrome小插件， ChatGPT Search 。我在随附的截图（5～6）中展示了用法：在浏览器输入框直接，输入搜索内容，直接进入结果页。 相信你多试几次，可能就会离不开了。  <br />https://chromewebstore.google.com/detail/chatgpt-search/ejcfepkfckglbgocfkanmcdngdijcgld
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>