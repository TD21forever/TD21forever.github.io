<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>AI探索站 - 即刻圈子</title>
        <link>https://m.okjike.com/topics/63579abb6724cc583b9bba9a</link>
        
        <item>
            <id>https://m.okjike.com/originalPosts/680c4ed79f9979a85a9c0875</id>
            <title>AI探索站 04月26日</title>
            <link>https://m.okjike.com/originalPosts/680c4ed79f9979a85a9c0875</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/680c4ed79f9979a85a9c0875</guid>
            <pubDate></pubDate>
            <updated>Sat, 26 Apr 2025 03:11:19 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    Devin 这事办得好啊<br /><br />推出DeepWiki，“一个涵盖所有 GitHub 代码库的免费百科全书”。<br /><br />您可以将任何公共 GitHub 代码库的 URL 替换为“ https:// deepwiki. com/org/repo ”<br /><br />即可获得类似维基百科的精准库描述<br /><br />一共索引 3 万个库，40 亿行代码<br /><br />这里尝试：https://deepwiki.com/
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/680afa8fc0d292d6fd3d4d79</id>
            <title>AI探索站 04月25日</title>
            <link>https://m.okjike.com/originalPosts/680afa8fc0d292d6fd3d4d79</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/680afa8fc0d292d6fd3d4d79</guid>
            <pubDate></pubDate>
            <updated>Fri, 25 Apr 2025 02:59:27 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    受Dan Shipper启发，也分享下我当前的模型堆栈。<br /><br /> AI带来的新世界是「非零和」的🌳
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/680aab0a9f9979a85a7f8b76</id>
            <title>AI探索站 04月24日</title>
            <link>https://m.okjike.com/originalPosts/680aab0a9f9979a85a7f8b76</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/680aab0a9f9979a85a7f8b76</guid>
            <pubDate></pubDate>
            <updated>Thu, 24 Apr 2025 21:20:10 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    ⭕ 关键概念：善用 AI 提问的四步走<br /><br />1. 明确你正在从事或想要从事的某个领域。<br />2. 列出这个领域的关键概念，先穷举，然后从中筛选出最重要的一批，比如 20 个。<br />3. 用概念 × 5W2H，生成一系列问题。<br />4. 拿这些问题挨个问 AI。其中同一个概念的问题，可以放在一组对话中，便于深入这个概念。<br /><br />举个例子：<br /><br />1. 定一个领域：个人 IP<br />2. 《纳瓦尔宝典》中提到了“杠杆”这个概念，对个人 IP 来说，属于关键概念之一。<br />3. 5W2H 中的 how much × 杠杆，可以得出一个问题“现代社会中，个体发展要学会借助杠杆，比如媒体是杠杆，代码是杠杆，还有哪些杠杆，列 30 个杠杆给我，每个简述理由”。<br />4. 拿这个问题去问 AI，开启深度思考。<br /><br />如果你不知道某个领域的关键概念有哪些，可以把领域告诉 AI，让它列一批概念，你根据自己的了解来选。<br /><br />如果你不知道自己要从事什么领域，可以把你的经历、能力、资源、梦想、目标、限制条件说给 AI 听，让它来帮你选定领域。<br /><br />这样做的好处是：领域是你在做的，概念是关键的，问题是与你息息相关的，处理问题的 AI 是强大的，所以，据此得到的答案，是强大的 AI 为你手头在做的领域生成的关键的、与你息息相关的内容。你会直接感受到 AI 对你的帮助。<br /><br />---<br /><br />⭕ 5W2H：如何对 AI 提问<br /><br />对 AI 提问，其实就是 5W2H 的排列组合。<br /><br />▪Who：你是谁？我是谁？给谁看？<br /><br />▪What：解决什么问题？生成什么类型内容？不能出现什么？<br /><br />▪Why：目的是什么？问题出在哪？为什么要你改？<br /><br />▪Where：在哪个场景用？数据来自哪？和哪个上下文关联？<br /><br />▪When：时间范围是多少？优先顺序怎么排？时间多精确？<br /><br />▪How：分几步做？用什么方式与语气表达？格式怎么规范？<br /><br />▪How Much：多少字？多详细？要几个结果（解释/方案/例子）？<br /><br />---<br /><br />⭕ IPO：如何用 AI 做方案<br /><br />利用 IPO，我负责 input（输入问题）和 output（输入模板），processing（处理问题）则交给 AI。两点连一线，我抓住开头的 input 和 结尾的 output，AI 负责 processing 这条线。<br /><br />在 input 时，先定我想解决什么事，然后围绕这件事有哪些问题，一一列下来。这时候先不急着问，先把脑子里就这件事的问题都倒出来，直到没有问题为止。然后把列出的问题排序，我觉得 AI 要先回答什么问题，后回答什么问题。<br /><br />为什么先不急着问？因为做一件事涉及到多个问题，多个问题串起来，才能搞定一件事。如果急着问，可能会陷入某个问题中，反而影响真正搞定这件事。<br /><br />比如“如何做小红书”是一件事，关于这件事可以拆为许多问题。如果陷入“如何做某种样式的图”这个问题，最后还是做不好小红书，就没有搞定事情。排在这个问题之前，还有“我做小红书是为了干什么？如果是获客，客群是谁？”、“如果涨粉了，如何引导到私域？”、“如果有人想付钱给我，我卖什么产品或服务给他？”，诸如此类都是更优先的问题。<br /><br />关于 output，就是为 AI 的回答设定一个容器，这个容器可能是一页纸清单，可能是一张商业模式画布，也可能是一份多维表格，或者是一个知识库，再或者是一门课程。总之，要给 AI 生成的内容一个去处，或者说一个容器。<br /><br />如果不设定一个去处，AI 回答了再多，也派不上用场。比如关于做小红书，你问了 30 个问题，AI 对每个问题回答了 2000 字，加起来就有 6 万字。如果把这 6 万字做成一份文档，或许可以用来引流，但是对于你做好一个小红书账号而言，是没有帮助的，因为没有形成一个适合你的可操作方案。这样的话，和买了几本教你做小红书的书放在那儿，又有什么区别？用 AI 的意义又在哪里呢？<br /><br />要指导行动，6 万字不如从 6 万字里面提取的一页纸清单有用。要想行动，得“定下来”。我有一份《1000 个项目宝典》不如一份《某个项目的行动方案》有用。为什么？因为我没有资源和时间去开干 1000 个项目，最终还是要“定下来”一个项目，并且“定下来”这个项目的操作细节。<br /><br />那么这一页纸清单是什么样的，里面应该包括什么，我得清楚。这就是事先想好容器，才能以终为始。比如说，如何做小红书的行动方案，这一页纸清单里面要包括账号名、身份标签、目标客群、内容主题、内容结构、做图风格、选题来源、热点来源、相关的小红书话题标签、引流方法、防封注意点、承接产品，等等。这些用一页或两页 A4 纸就能放得下。这一页纸清单，是给内行看的门道，而那 6 万字文档，是给外行看的热闹。<br /><br />当然，容器也不一定只有一个，至少可以有两个容器。一个容器是一份多维表格，用于记录向 AI 问过的问题与每个问题的回答，用于日后查考，一个容器是一页纸清单，用于指导行动。<br /><br />抓住这一头一尾的 input 与 output，剩下的就交给 AI 发挥了。如果不知道 input 和 output 怎么办，或者说不知道问哪些问题，也不知道最终用什么容器来装这些回答，那么可以先就这两个问题问一下 AI，让 AI 帮助你澄清全部问题，帮助你设定合适的容器。<br /><br />---<br /><br />👉 更多精华帖：https://m.okjike.com/originalPosts/65e5dbfe4ca8842da70a1059/
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/680a06ada4cf301fc47966f9</id>
            <title>AI探索站 04月24日</title>
            <link>https://m.okjike.com/originalPosts/680a06ada4cf301fc47966f9</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/680a06ada4cf301fc47966f9</guid>
            <pubDate></pubDate>
            <updated>Thu, 24 Apr 2025 09:38:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    妈的 Gemini 2.5 Pro 代码潜力无限啊<br /><br />针对性优化了一下我的提示词，看看这动画和这个排版<br /><br />是不是有苹果的味道了，还有这个数据可视化
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/68091563778b7a5d204b2848</id>
            <title>AI探索站 04月23日</title>
            <link>https://m.okjike.com/originalPosts/68091563778b7a5d204b2848</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/68091563778b7a5d204b2848</guid>
            <pubDate></pubDate>
            <updated>Wed, 23 Apr 2025 16:29:23 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    藏师傅的提示词太帅了，用Gemini试了一下，完美
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6808bfd3778b7a5d204544e8</id>
            <title>AI探索站 04月23日</title>
            <link>https://m.okjike.com/originalPosts/6808bfd3778b7a5d204544e8</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6808bfd3778b7a5d204544e8</guid>
            <pubDate></pubDate>
            <updated>Wed, 23 Apr 2025 10:24:19 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    非程序员，目前用的AI 编程工作流<br /><br />需求分析/技术方案阶段：<br />1、gpt需求分析：<br />首先发散（7个维度）：和gpt充分沟通7个维度：用户，场景，当前痛点，当前方案，频度，广度，深度，然后生成尽可能多的功能点需求<br /><br />其次收敛（33原则）：按照每次开发最多只做3个核心需求，每个功能最多只做3个功能点<br /><br />2、gpt生成文档：prd.md / erd.md / todolist.md（供 Cursor 用）<br />产品需求文档 prd.md<br />工程结构和数据结构设计文档 erd.md<br />开发代办列表 todolist.md<br /><br />正式开发阶段：<br />3、Cursor 执行开发任务 1，严格按 todolist.md 开始, 每完成一个任务后同时更新todolist.md 和cursorlog.md<br /><br />4、Cursor开发过程中，第一次要输入详细prompt，后续可以简化，每个任务开发完成后做2件事情  <br />  a，观察todolist和cursorlog是否正常更新，没有就是跑偏了，立刻回滚，然后输入详细prompt重新生成。 <br />  b，如果todolist和cursorlog正常更新，则做一下测试，验证当前完成的开发是否符合产品预期，如果符合就继续开发下一个任务，否则就回去改bug。<br />  直到全部完成<br /><br />5、全部完成后，需要的话，可以把代码打包丢给gpt，让它做code review，再看要不要继续优化下<br /><br />6、全部跑通后 输出 Changelog + Git 封版<br /><br />今天回归第一天，看到前面有评论提到这个，正好说下我目前用的办法<br /><br />还在持续迭代中，如果有更好的方式，求大佬不吝指点
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6808540594e65e6fb666a03a</id>
            <title>AI探索站 04月23日</title>
            <link>https://m.okjike.com/originalPosts/6808540594e65e6fb666a03a</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6808540594e65e6fb666a03a</guid>
            <pubDate></pubDate>
            <updated>Wed, 23 Apr 2025 02:44:21 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    没想到我新的提示词更适配 Gemini 2.5 Pro 而不是 Claude<br /><br />早上给群友的特斯拉财报分析文档做了个网页，太漂亮了<br /><br />非常惊艳
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6807a4fb833cf84bd02d1870</id>
            <title>AI探索站 04月22日</title>
            <link>https://m.okjike.com/originalPosts/6807a4fb833cf84bd02d1870</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6807a4fb833cf84bd02d1870</guid>
            <pubDate></pubDate>
            <updated>Tue, 22 Apr 2025 14:17:31 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    经常做自媒体的小伙伴们，水印移除一直是图片处理的难题，最近在 GitHub 又发现一款完全开源免费的 AI 水印移除工具：WatermarkRemover-AI。<br /><br />经常做自媒体的小伙伴们，水印移除一直是图片处理的难题，最近发现一款完全开源免费的 AI 水印移除工具：WatermarkRemover-AI。<br /><br />主要功能<br />• 支持多图批量处理：支持单张图片或整个文件夹批量去水印<br />• 提供精准水印识别：基于微软Florence-2视觉大模型，可识别各种样式水印<br />• 上下文感知修复：使用 LaMa inpainting 模型，实现“原图级”上下文感知图像填补<br />• 灵活配置支持：可设置水印最大尺寸、透明度灵敏度，适配不同图片<br />• 多格式输出：支持导出为 .png / .webp / .jpg<br />• GUI + 命令行双模式：提供图形界面操作和 CLI 脚本<br />• 无需 GPU 支持：在普通笔记本也能流畅运行，轻量级推理<br /><br />GitHub：github.com/D-Ogi/WatermarkRemover-AI
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/6800a3c87cb8c547e207ff18</id>
            <title>AI探索站 04月17日</title>
            <link>https://m.okjike.com/originalPosts/6800a3c87cb8c547e207ff18</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/6800a3c87cb8c547e207ff18</guid>
            <pubDate></pubDate>
            <updated>Thu, 17 Apr 2025 06:46:32 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    o3测试<br />视觉推理能力大幅增强<br />😅已经能从照片推理地点和拍摄时间了<br /><br />科幻片！<br /><br />询问照片几几年拍摄的整个推理思路：<br />1.先是分析推理思路，推理出出租车涂装是关键的信息点<br />2.引用Python的Pillow库对照片进行裁剪放大<br />3.有自我纠正，分析分辨率过低导致坐标有误，重新裁剪<br />4.对比出租车的涂装和推测的年代是否一致<br />5.提取出租车的色值验证猜想<br />6.通过电线杆分析建筑是否已经完工，结合出租车涂装的信息，最终推测出最后的年份。<br /><br />😅福尔摩斯复活了也要拜师<br /><br />这一系列的推理和Tools调用行云流水且速度极快，看来OpenAI是要将模型即应用践行到底了，Agent刚大火，生存位又进一步被挤压，可能还是走隐私、长期记忆这个位置更保险。
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://m.okjike.com/originalPosts/67ff2af3070109da49e33ccd</id>
            <title>AI探索站 04月16日</title>
            <link>https://m.okjike.com/originalPosts/67ff2af3070109da49e33ccd</link>
            <guid isPermaLink="false">https://m.okjike.com/originalPosts/67ff2af3070109da49e33ccd</guid>
            <pubDate></pubDate>
            <updated>Wed, 16 Apr 2025 03:58:43 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    昨天晚上去koji@杨远骋Koji 在上海漕河泾的AI Hacker House，参加小红书开发者大会之后的线下party，氛围太好了！<br /><br />认识了很多有趣的小伙伴！很荣幸「启师傅AI客厅」略微参与了一下party的筹备工作！<br /><br />这次AI聚会，良渚代表团儿的人数竟然超过了杭州代表团儿 哈哈哈 <br /><br />这个场地也超赞，湖边的独栋大house，外面的草坪可以随时席地而坐。<br /><br />看得我好想回来给良渚的乡亲们搞一个这样的AI场地！！
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>