<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>宝玉 / @dotey</title>
        <link>https://nitter.cz/dotey</link>
        
        <item>
            <id>https://nitter.cz/dotey/status/1736476171385069941#m</id>
            <title>新翻译了：OpenAI 生产环境最佳实践官方指南

这份指南全面介绍了如何将产品原型发布到生产环境的最佳实践。不论你是资深的机器学习工程师还是刚入门的技术爱好者，这份指南都能为你提供在实际生产环境中成功应用该平台所需的各种工具和知识。内容涵盖从如何保护 API 访问安全到如何构建能应对高流量的架构。参考这份指南，可以帮助你更顺畅、高效地部署应用程序到生产环境。

请求补全（Completion）的延迟主要受两个因素的影响：使用的模型和生成的 Token 数量。在这个过程中，大部分延迟通常源自 Token 生成步骤。在调用补全时，提示词（Prompt）的 Token 造成的延迟非常小。但生成这些补全用的 Token 要花费更多时间，因为它们是一个接一个产生的。生成长度越长，由于每个 Token 的生成，所累积的延迟也越多。

在考虑降低成本时，一个实用的方法是把成本看作是 Token 数量和每个 Token 成本的函数。 按照这个方法，您可以从两方面着手降低成本：一是通过使用更小的模型来降低每个 Token 的成本，二是尝试减少所需的 Token 数量。您可以通过使用更简短的提示、模型微调或缓存用户的常见查询来实现这一点，从而避免重复处理。

原始地址：https://platform.openai.com/docs/guides/production-best-practices
翻译：https://baoyu.io/translations/openai/guides-production-best-practices</title>
            <link>https://nitter.cz/dotey/status/1736476171385069941#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1736476171385069941#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Dec 2023 19:59:16 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>新翻译了：OpenAI 生产环境最佳实践官方指南<br />
<br />
这份指南全面介绍了如何将产品原型发布到生产环境的最佳实践。不论你是资深的机器学习工程师还是刚入门的技术爱好者，这份指南都能为你提供在实际生产环境中成功应用该平台所需的各种工具和知识。内容涵盖从如何保护 API 访问安全到如何构建能应对高流量的架构。参考这份指南，可以帮助你更顺畅、高效地部署应用程序到生产环境。<br />
<br />
请求补全（Completion）的延迟主要受两个因素的影响：使用的模型和生成的 Token 数量。在这个过程中，大部分延迟通常源自 Token 生成步骤。在调用补全时，提示词（Prompt）的 Token 造成的延迟非常小。但生成这些补全用的 Token 要花费更多时间，因为它们是一个接一个产生的。生成长度越长，由于每个 Token 的生成，所累积的延迟也越多。<br />
<br />
在考虑降低成本时，一个实用的方法是把成本看作是 Token 数量和每个 Token 成本的函数。 按照这个方法，您可以从两方面着手降低成本：一是通过使用更小的模型来降低每个 Token 的成本，二是尝试减少所需的 Token 数量。您可以通过使用更简短的提示、模型微调或缓存用户的常见查询来实现这一点，从而避免重复处理。<br />
<br />
原始地址：<a href="https://platform.openai.com/docs/guides/production-best-practices">platform.openai.com/docs/gui…</a><br />
翻译：<a href="https://baoyu.io/translations/openai/guides-production-best-practices">baoyu.io/translations/openai…</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/9hills/status/1736362451728494852#m</id>
            <title>RT by @dotey: 尝试用 Gemini Pro Vision 来解决目前 RAG 的核心问题之一：OCR 转 Markdown（带表格）。

结论：
1. 正文效果还行。
2. 表格效果一般。

Prompt 和转换不出来的表格如图。</title>
            <link>https://nitter.cz/9hills/status/1736362451728494852#m</link>
            <guid isPermaLink="false">https://nitter.cz/9hills/status/1736362451728494852#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Dec 2023 12:27:23 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>尝试用 Gemini Pro Vision 来解决目前 RAG 的核心问题之一：OCR 转 Markdown（带表格）。<br />
<br />
结论：<br />
1. 正文效果还行。<br />
2. 表格效果一般。<br />
<br />
Prompt 和转换不出来的表格如图。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JqTVFMb2JZQUE0VXdVLmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JqTVk4VmFjQUVDclp3LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/pirrer/status/1736339550459646195#m</id>
            <title>RT by @dotey: 如何追求真確性</title>
            <link>https://nitter.cz/pirrer/status/1736339550459646195#m</link>
            <guid isPermaLink="false">https://nitter.cz/pirrer/status/1736339550459646195#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Dec 2023 10:56:23 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>如何追求真確性</p>
<img src="https://nitter.cz/pic/enc/YW1wbGlmeV92aWRlb190aHVtYi8xNzM2MzM5MzU4MzM5NTE4NDY0L2ltZy9CREI5a0dseTkyb014clpJLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1736311102122733912#m</id>
            <title>翻译这篇文章的时候，里面有一句话：“The river that carves the deepest valley flows from a modest spring; the grandest symphony originates from a single note; the most intricate tapestry begins with a solitary thread.”

大意就是："The river that carves the deepest valley flows from a modest spring" 指的是即使是最深的峡谷，也是由一个不起眼的小泉水开始侵蚀形成的。
"The grandest symphony originates from a single note" 意味着即使是最宏伟的交响乐，也是从一个简单的音符开始构建的。
"The most intricate tapestry begins with a solitary thread" 表示即使是最复杂的挂毯，也是从一根孤单的线开始编织的。

但是结合上下文，得翻译的禅意一点，装逼一点，我就让 GPT 先给我解释，然后翻译，提供若干选项，结果我选了这句：“深谷自浅泉，宏曲生寂音，繁绣始孤线。” 感觉比较有逼格！

当然我文化水平不高，大家别笑话我😄

https://chat.openai.com/share/2dd0df13-7ad2-4677-9c26-9231871942ad</title>
            <link>https://nitter.cz/dotey/status/1736311102122733912#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1736311102122733912#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Dec 2023 09:03:20 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>翻译这篇文章的时候，里面有一句话：“The river that carves the deepest valley flows from a modest spring; the grandest symphony originates from a single note; the most intricate tapestry begins with a solitary thread.”<br />
<br />
大意就是："The river that carves the deepest valley flows from a modest spring" 指的是即使是最深的峡谷，也是由一个不起眼的小泉水开始侵蚀形成的。<br />
"The grandest symphony originates from a single note" 意味着即使是最宏伟的交响乐，也是从一个简单的音符开始构建的。<br />
"The most intricate tapestry begins with a solitary thread" 表示即使是最复杂的挂毯，也是从一根孤单的线开始编织的。<br />
<br />
但是结合上下文，得翻译的禅意一点，装逼一点，我就让 GPT 先给我解释，然后翻译，提供若干选项，结果我选了这句：“深谷自浅泉，宏曲生寂音，繁绣始孤线。” 感觉比较有逼格！<br />
<br />
当然我文化水平不高，大家别笑话我😄<br />
<br />
<a href="https://chat.openai.com/share/2dd0df13-7ad2-4677-9c26-9231871942ad">chat.openai.com/share/2dd0df…</a></p>
<p><a href="https://nitter.cz/dotey/status/1736304093621047351#m">nitter.cz/dotey/status/1736304093621047351#m</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JpZHN3d1hJQUFzdkVyLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1736304560669356127#m</id>
            <title>看来我在用4.5？！</title>
            <link>https://nitter.cz/dotey/status/1736304560669356127#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1736304560669356127#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Dec 2023 08:37:20 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>看来我在用4.5？！</p>
<p><a href="https://nitter.cz/xiaohuggg/status/1736276218574754249#m">nitter.cz/xiaohuggg/status/1736276218574754249#m</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JpWHl0VVdvQUFhVFdwLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1736304093621047351#m</id>
            <title>今天花了点时间翻译了一下 OpenAI 发布的提示工程指南，这份指南分享了如何更有效地利用像如 GPT-4 这样的大语言模型（有时候也叫 GPT 模型）来获得更好的结果。介绍的方法可以相互结合，以发挥更大的作用。希望你也可以从中学习到适合你的技巧。

另外，这份指南的示例主要针对 GPT-4 模型，但理论上来说也适用其他模型。

其中主要有六个策略，每个策略下再有具体的技巧。

策略一：撰写清晰的指令

这些模型并不会读心术，无法猜到你的想法。如果模型的输出内容过长，你可以要求它简短回答。如果模型输出内容过于简单，你可以要求使用更专业的水平写作。如果你对输出格式不满意，可以直接展示你期望的格式。最好就是让模型不需要去猜你想要什么，这样你最有可能获得想要的结果。

技巧：
- 在查询中添加详细信息，以获得更准确的答案
- 请求模型扮演特定角色
- 使用分隔符来清晰区分输入的不同部分
- 明确指出完成任务需要的步骤
- 提供实例作为参考
- 明确指定希望输出的长度

策略二：提供参考文本

语言模型可能会自信地编造出虚假答案，特别是当回应一些深奥主题或被要求提供引文和 URLs 时。就像学生在考试中借助笔记能够帮助其取得更好的成绩一样，为这类模型提供参考文本也可减少其制造虚假信息的情况。

技巧：
- 引导模型根据参考文本回答问题
- 引导模型根据参考文本中的引用信息回答问题

策略三：把复杂的任务拆分成简单的子任务

就像在软件工程中，我们会习惯于把复杂的系统分解成一套模块化的组件，对于提交给语言模型的任务也是同样的道理。相较于简单的任务，复杂任务的错误率往往会更高。而更进一步，我们常常可以把这些复杂任务重新设定为一系列的工作流程，每一个流程就是一个更简单的任务，而且这些任务之间是相互联系的，前一个任务的输出会作为后一个任务的输入。

技巧：

- 利用意图分类识别用户查询中最相关的指令
- 对于需要长时间对话的对话应用，总结或筛选先前的对话内容
- 分步总结长文档，并递归地构建完整的总结

策略四：给模型更多时间“思考”

如果被要求计算 17 乘以 28，我们可能不能立即给出答案，但可以花一些时间逐步计算出结果。同样，在 AI 模型试图立刻回答问题时，往往比理性思考后再做出回答更容易出错。所以，在模型给出答案之前，要求其展示一下"思考过程"，有助于模型更可靠地推导出正确的答案。

技巧：
- 在仓促做出结论前，指导模型自己寻找解决方法
- 通过内心独白或连串问题来掩盖模型的思考过程
- 问模型在之前的步骤中是否有遗漏

策略五：运用外部工具

为了弥补模型的不足，我们可以利用其他工具的输出作为输入。例如，文本检索系统（有时被称为 RAG 或检索增强生成系统）可以向模型提供相关文档的信息。像 OpenAI 的代码执行引擎这样的工具，可以帮助模型进行数学运算和代码执行。如果某项任务通过工具来完成能比通过语言模型更可靠或更高效，那么就把任务交给这个工具处理，这样就能结合两者长处，达到最佳效果。

技巧：
- 运用基于嵌入的搜索来高效实现知识检索
- 利用代码执行进行更精确的计算或调用外部 API
- 使模型能够访问特定功能

策略六：系统地对变更进行测试

如果能对性能进行量化，那么就能更好地提高性能。有时，对提示词的修改在少数特定例子上可能表现更佳，但在更具普遍性的样本集上可能会导致整体性能下降。因此，为了确保改动对总体性能产生积极的影响，可能需要设计一份全方位的测试（也被称为"评估"）。

技巧：
- 根据标准答案的参考评估模型输出效果

对于上面提到的每一种技巧，都有非常详细的参考示例。

官网链接：https://platform.openai.com/docs/guides/prompt-engineering
中文翻译：https://baoyu.io/translations/openai/openai-prompt-engineering-guides</title>
            <link>https://nitter.cz/dotey/status/1736304093621047351#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1736304093621047351#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Dec 2023 08:35:29 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>今天花了点时间翻译了一下 OpenAI 发布的提示工程指南，这份指南分享了如何更有效地利用像如 GPT-4 这样的大语言模型（有时候也叫 GPT 模型）来获得更好的结果。介绍的方法可以相互结合，以发挥更大的作用。希望你也可以从中学习到适合你的技巧。<br />
<br />
另外，这份指南的示例主要针对 GPT-4 模型，但理论上来说也适用其他模型。<br />
<br />
其中主要有六个策略，每个策略下再有具体的技巧。<br />
<br />
策略一：撰写清晰的指令<br />
<br />
这些模型并不会读心术，无法猜到你的想法。如果模型的输出内容过长，你可以要求它简短回答。如果模型输出内容过于简单，你可以要求使用更专业的水平写作。如果你对输出格式不满意，可以直接展示你期望的格式。最好就是让模型不需要去猜你想要什么，这样你最有可能获得想要的结果。<br />
<br />
技巧：<br />
- 在查询中添加详细信息，以获得更准确的答案<br />
- 请求模型扮演特定角色<br />
- 使用分隔符来清晰区分输入的不同部分<br />
- 明确指出完成任务需要的步骤<br />
- 提供实例作为参考<br />
- 明确指定希望输出的长度<br />
<br />
策略二：提供参考文本<br />
<br />
语言模型可能会自信地编造出虚假答案，特别是当回应一些深奥主题或被要求提供引文和 URLs 时。就像学生在考试中借助笔记能够帮助其取得更好的成绩一样，为这类模型提供参考文本也可减少其制造虚假信息的情况。<br />
<br />
技巧：<br />
- 引导模型根据参考文本回答问题<br />
- 引导模型根据参考文本中的引用信息回答问题<br />
<br />
策略三：把复杂的任务拆分成简单的子任务<br />
<br />
就像在软件工程中，我们会习惯于把复杂的系统分解成一套模块化的组件，对于提交给语言模型的任务也是同样的道理。相较于简单的任务，复杂任务的错误率往往会更高。而更进一步，我们常常可以把这些复杂任务重新设定为一系列的工作流程，每一个流程就是一个更简单的任务，而且这些任务之间是相互联系的，前一个任务的输出会作为后一个任务的输入。<br />
<br />
技巧：<br />
<br />
- 利用意图分类识别用户查询中最相关的指令<br />
- 对于需要长时间对话的对话应用，总结或筛选先前的对话内容<br />
- 分步总结长文档，并递归地构建完整的总结<br />
<br />
策略四：给模型更多时间“思考”<br />
<br />
如果被要求计算 17 乘以 28，我们可能不能立即给出答案，但可以花一些时间逐步计算出结果。同样，在 AI 模型试图立刻回答问题时，往往比理性思考后再做出回答更容易出错。所以，在模型给出答案之前，要求其展示一下"思考过程"，有助于模型更可靠地推导出正确的答案。<br />
<br />
技巧：<br />
- 在仓促做出结论前，指导模型自己寻找解决方法<br />
- 通过内心独白或连串问题来掩盖模型的思考过程<br />
- 问模型在之前的步骤中是否有遗漏<br />
<br />
策略五：运用外部工具<br />
<br />
为了弥补模型的不足，我们可以利用其他工具的输出作为输入。例如，文本检索系统（有时被称为 RAG 或检索增强生成系统）可以向模型提供相关文档的信息。像 OpenAI 的代码执行引擎这样的工具，可以帮助模型进行数学运算和代码执行。如果某项任务通过工具来完成能比通过语言模型更可靠或更高效，那么就把任务交给这个工具处理，这样就能结合两者长处，达到最佳效果。<br />
<br />
技巧：<br />
- 运用基于嵌入的搜索来高效实现知识检索<br />
- 利用代码执行进行更精确的计算或调用外部 API<br />
- 使模型能够访问特定功能<br />
<br />
策略六：系统地对变更进行测试<br />
<br />
如果能对性能进行量化，那么就能更好地提高性能。有时，对提示词的修改在少数特定例子上可能表现更佳，但在更具普遍性的样本集上可能会导致整体性能下降。因此，为了确保改动对总体性能产生积极的影响，可能需要设计一份全方位的测试（也被称为"评估"）。<br />
<br />
技巧：<br />
- 根据标准答案的参考评估模型输出效果<br />
<br />
对于上面提到的每一种技巧，都有非常详细的参考示例。<br />
<br />
官网链接：<a href="https://platform.openai.com/docs/guides/prompt-engineering">platform.openai.com/docs/gui…</a><br />
中文翻译：<a href="https://baoyu.io/translations/openai/openai-prompt-engineering-guides">baoyu.io/translations/openai…</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JpWFZDNVhFQUFBZGVJLnBuZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1735950361352163570#m</id>
            <title>RT by @dotey: Midjourney憋了半年的大招V6模型将在下周发布，今天正式开始了社区风格评价，我从社区评价里找了一些图片做了个视频，可以大概看一下V6模型的质量。

从我的观察来看，V6对于画面中复杂信息和内容的还原度大幅提高，模型也更敢于绘制更复杂的内容。

模型评价每次会随机展示两张V6模型生成的图片，然后你选择自己觉得好看的一张。虽然这些图片是随机生成的但也可以看出一些V6的模型质量。

点击链接进行评价：https://www.midjourney.com/rank-v6</title>
            <link>https://nitter.cz/op7418/status/1735950361352163570#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1735950361352163570#m</guid>
            <pubDate></pubDate>
            <updated>Sat, 16 Dec 2023 09:09:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>Midjourney憋了半年的大招V6模型将在下周发布，今天正式开始了社区风格评价，我从社区评价里找了一些图片做了个视频，可以大概看一下V6模型的质量。<br />
<br />
从我的观察来看，V6对于画面中复杂信息和内容的还原度大幅提高，模型也更敢于绘制更复杂的内容。<br />
<br />
模型评价每次会随机展示两张V6模型生成的图片，然后你选择自己觉得好看的一张。虽然这些图片是随机生成的但也可以看出一些V6的模型质量。<br />
<br />
点击链接进行评价：<a href="https://www.midjourney.com/rank-v6">midjourney.com/rank-v6</a></p>
<img src="https://nitter.cz/pic/enc/ZXh0X3R3X3ZpZGVvX3RodW1iLzE3MzU5NTAyNzIyODE5NDgxNjIvcHUvaW1nL2VoXzhmd0RqNF9qTERCQlYuanBn" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/vista8/status/1736041266897686725#m</id>
            <title>RT by @dotey: 花两个小时看完Lex Fridman访谈亚马逊创始人贝佐斯（Jeff bezos）
https://www.youtube.com/watch?v=DcWqzZ3I2cY

总结如下：

童年生活
他母亲17岁时生的贝佐斯，4岁到16岁跟祖父在牧场生活。

祖父动手能力很强（修好几乎报废的推土机），对他影响最大。

干完牧场各种活儿，下午和祖父一起看肥皂剧《The Days of Our Lives》（我们的生活）

自我认知
来自斯里兰卡天才同学Yosanta，用10s解出困扰他和另外一个同学3小时的难题。（Youtube评论区此同学大神现身）

这让贝索斯意识到，即使再努力，他未来也只是一名平庸的物理学家，立马转学计算机科学专业。

著名传记作家Walter Isaacson 认为贝佐斯在“思想实验”水平上与爱因斯坦一个级别。

而贝佐斯对自己的认知：“我就是一个发明家。我善于观察事物。”

蓝色起源
尤里·阿列克谢耶维奇·加加林（Yuri Alekseyevich Gagarin）是苏联的一名宇航员，也是人类历史上第一个进入太空的人。

他在1961年4月12日进行了一次为期108分钟的太空旅行，以此完成了对地球的一次全轨道飞行。

加加林据说在太空看到地球时，说： "my God, it's blue."
贝佐斯的火箭公司“Blue Origin”的名字由来于此。

Day One思想
贝佐斯的Day One思想，应该是被字节直接copy了。

核心理念：每天都像公司成立的第一天那样，带着重新开始的创业精神，快速迭代和革新，不被过往路径依赖或自我一致性限制，保持开放思维，与时俱进。

如何避免Day two（停滞/衰退）：
① 保持对客户的痴迷；

② 批判看待代理变量（不被过时的运营指标束缚）；积极重用外部新趋势；

③  保持高速决策（150w人的亚马逊，行动依然迅速）

六页纸开会
贝索斯在Amazon和Blue Origin开会，都使用6页纸memo，为什么不用PPT？

用PPT开会的问题：
① PPT是一种说服工具，不利于“寻求真理”。
② 只给要点，容易藏匿模糊的思考。
③ 对演示者友好，对听众困难。
④ 中途容易打断提问，讨论低效。

六页纸开会好处：
① 写6页memo需要投入大量时间和精力，迫使作者做系统思考。
② memo以逻辑叙述方式展开，思考更明晰和严谨，不能藏匿思维漏洞。
③ 开会前阅读或开会时一起读，确保与会人在同一个起点，真正讨论问题、激发思考。
④ 部分疑问能随着阅读Memo得到解答，避免无效提问，节省时间。

字节跳动的“飞阅会”，也源于亚马逊的这套方法论，确实好用！

决策技巧
贝佐斯非常善于决策，比如蓝色起源的目标是成为世界上"最具决策力的公司"。

最出名的是“单向门”和“双向门”决策：难逆转的重大决策是“单向门”，慎重决策；大多数决策是“双向门”决策，要快速决策。

除此之外，还有很多有趣的原则：
① “不同意但执行”原则：当团队成员意见跟他不一致，他会说自己不同意，但全力支持执行。

② 不要妥协，要寻求真理：妥协带不来真知，决策尽可能追求事物的本质真理。

③ 当数据和叙事不一致时，相信叙事。（如客户抱怨时，即使数据正常，也要相信客户视角）

最后一条原则，有个小故事：
亚马逊指标显示客服电话平均等待时间少于60秒，但客户抱怨明显要久得多。

在一次业务回顾会上，贝佐斯当场打客服电话，全场高管沉默等待，发现等待时间远超10分钟。

另外，贝佐斯提到人是社会动物，而非理性动物。真相难听，但组织高绩效需要truth telling机制，明确告诉员工这不舒服很正常，鼓励大家直言不讳。

他一般在会议中最后发言，让大家客观表达自己的观点，不会被他的意见所影响。

Papercut问题

“papercut”指微小但令人烦恼的问题或困扰。就像一个纸割伤虽然看起来不大，却能引起不成比例的疼痛或不适，一些看似微不足道的问题或困扰也可能给人带来相当大的困扰或不便。

贝佐斯的做法：安排专门团队致力于修复小的缺陷（Papercut问题），其他人专注于大的改进。

他对AI的一些观点
贝佐斯认为 ChatGPT 这样的大语言模型更像是"发现"而不是"发明"。

AI模型不是设计完成的工程对象。我们仍不断被它们的新能力所惊讶。

他对AI 模型更有可能帮助人类而不是伤害我们持乐观态度。</title>
            <link>https://nitter.cz/vista8/status/1736041266897686725#m</link>
            <guid isPermaLink="false">https://nitter.cz/vista8/status/1736041266897686725#m</guid>
            <pubDate></pubDate>
            <updated>Sat, 16 Dec 2023 15:11:06 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>花两个小时看完Lex Fridman访谈亚马逊创始人贝佐斯（Jeff bezos）<br />
<a href="https://www.youtube.com/watch?v=DcWqzZ3I2cY">youtube.com/watch?v=DcWqzZ3I…</a><br />
<br />
总结如下：<br />
<br />
童年生活<br />
他母亲17岁时生的贝佐斯，4岁到16岁跟祖父在牧场生活。<br />
<br />
祖父动手能力很强（修好几乎报废的推土机），对他影响最大。<br />
<br />
干完牧场各种活儿，下午和祖父一起看肥皂剧《The Days of Our Lives》（我们的生活）<br />
<br />
自我认知<br />
来自斯里兰卡天才同学Yosanta，用10s解出困扰他和另外一个同学3小时的难题。（Youtube评论区此同学大神现身）<br />
<br />
这让贝索斯意识到，即使再努力，他未来也只是一名平庸的物理学家，立马转学计算机科学专业。<br />
<br />
著名传记作家Walter Isaacson 认为贝佐斯在“思想实验”水平上与爱因斯坦一个级别。<br />
<br />
而贝佐斯对自己的认知：“我就是一个发明家。我善于观察事物。”<br />
<br />
蓝色起源<br />
尤里·阿列克谢耶维奇·加加林（Yuri Alekseyevich Gagarin）是苏联的一名宇航员，也是人类历史上第一个进入太空的人。<br />
<br />
他在1961年4月12日进行了一次为期108分钟的太空旅行，以此完成了对地球的一次全轨道飞行。<br />
<br />
加加林据说在太空看到地球时，说： "my God, it's blue."<br />
贝佐斯的火箭公司“Blue Origin”的名字由来于此。<br />
<br />
Day One思想<br />
贝佐斯的Day One思想，应该是被字节直接copy了。<br />
<br />
核心理念：每天都像公司成立的第一天那样，带着重新开始的创业精神，快速迭代和革新，不被过往路径依赖或自我一致性限制，保持开放思维，与时俱进。<br />
<br />
如何避免Day two（停滞/衰退）：<br />
① 保持对客户的痴迷；<br />
<br />
② 批判看待代理变量（不被过时的运营指标束缚）；积极重用外部新趋势；<br />
<br />
③  保持高速决策（150w人的亚马逊，行动依然迅速）<br />
<br />
六页纸开会<br />
贝索斯在Amazon和Blue Origin开会，都使用6页纸memo，为什么不用PPT？<br />
<br />
用PPT开会的问题：<br />
① PPT是一种说服工具，不利于“寻求真理”。<br />
② 只给要点，容易藏匿模糊的思考。<br />
③ 对演示者友好，对听众困难。<br />
④ 中途容易打断提问，讨论低效。<br />
<br />
六页纸开会好处：<br />
① 写6页memo需要投入大量时间和精力，迫使作者做系统思考。<br />
② memo以逻辑叙述方式展开，思考更明晰和严谨，不能藏匿思维漏洞。<br />
③ 开会前阅读或开会时一起读，确保与会人在同一个起点，真正讨论问题、激发思考。<br />
④ 部分疑问能随着阅读Memo得到解答，避免无效提问，节省时间。<br />
<br />
字节跳动的“飞阅会”，也源于亚马逊的这套方法论，确实好用！<br />
<br />
决策技巧<br />
贝佐斯非常善于决策，比如蓝色起源的目标是成为世界上"最具决策力的公司"。<br />
<br />
最出名的是“单向门”和“双向门”决策：难逆转的重大决策是“单向门”，慎重决策；大多数决策是“双向门”决策，要快速决策。<br />
<br />
除此之外，还有很多有趣的原则：<br />
① “不同意但执行”原则：当团队成员意见跟他不一致，他会说自己不同意，但全力支持执行。<br />
<br />
② 不要妥协，要寻求真理：妥协带不来真知，决策尽可能追求事物的本质真理。<br />
<br />
③ 当数据和叙事不一致时，相信叙事。（如客户抱怨时，即使数据正常，也要相信客户视角）<br />
<br />
最后一条原则，有个小故事：<br />
亚马逊指标显示客服电话平均等待时间少于60秒，但客户抱怨明显要久得多。<br />
<br />
在一次业务回顾会上，贝佐斯当场打客服电话，全场高管沉默等待，发现等待时间远超10分钟。<br />
<br />
另外，贝佐斯提到人是社会动物，而非理性动物。真相难听，但组织高绩效需要truth telling机制，明确告诉员工这不舒服很正常，鼓励大家直言不讳。<br />
<br />
他一般在会议中最后发言，让大家客观表达自己的观点，不会被他的意见所影响。<br />
<br />
Papercut问题<br />
<br />
“papercut”指微小但令人烦恼的问题或困扰。就像一个纸割伤虽然看起来不大，却能引起不成比例的疼痛或不适，一些看似微不足道的问题或困扰也可能给人带来相当大的困扰或不便。<br />
<br />
贝佐斯的做法：安排专门团队致力于修复小的缺陷（Papercut问题），其他人专注于大的改进。<br />
<br />
他对AI的一些观点<br />
贝佐斯认为 ChatGPT 这样的大语言模型更像是"发现"而不是"发明"。<br />
<br />
AI模型不是设计完成的工程对象。我们仍不断被它们的新能力所惊讶。<br />
<br />
他对AI 模型更有可能帮助人类而不是伤害我们持乐观态度。</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczNTM1Nzg2ODMxNDk0MzQ4OC93Ul9oTXVGaj9mb3JtYXQ9anBnJm5hbWU9ODAweDMyMF8x" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/yihong0618/status/1736197207253242080#m</id>
            <title>RT by @dotey: 建议所有做 Python 相关项目的朋友把这篇文章收藏，以后遇到关于 Python 包的 issue 或者问题，直接把这篇文章丢过去。能解决 80% 以上的问题。
https://frostming.com/2019/03-13/where-do-your-packages-go/</title>
            <link>https://nitter.cz/yihong0618/status/1736197207253242080#m</link>
            <guid isPermaLink="false">https://nitter.cz/yihong0618/status/1736197207253242080#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Dec 2023 01:30:45 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>建议所有做 Python 相关项目的朋友把这篇文章收藏，以后遇到关于 Python 包的 issue 或者问题，直接把这篇文章丢过去。能解决 80% 以上的问题。<br />
<a href="https://frostming.com/2019/03-13/where-do-your-packages-go/">frostming.com/2019/03-13/whe…</a></p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczNDg5MDM1NDA3MDIwODUxMi9tQ0x4Tnc1RD9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1736196810899611654#m</id>
            <title>OpenRouter 推出的免费的 Mixtral 8x7B Instruct API

https://openrouter.ai/models/fireworks/mixtral-8x7b-fw-chat</title>
            <link>https://nitter.cz/dotey/status/1736196810899611654#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1736196810899611654#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Dec 2023 01:29:11 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>OpenRouter 推出的免费的 Mixtral 8x7B Instruct API<br />
<br />
<a href="https://openrouter.ai/models/fireworks/mixtral-8x7b-fw-chat">openrouter.ai/models/firewor…</a></p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczMzk0NDU3MTE2NjQyMDk5Mi9kUnVvVzBjWT9mb3JtYXQ9cG5nJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1736195731269022150#m</id>
            <title>#AI开源项目推荐： Novel

Novel 是一款 Notion 风格的所见即所得编辑器，集成了 AI ，可以借助 AI 自动写作内容。

https://github.com/steven-tey/novel</title>
            <link>https://nitter.cz/dotey/status/1736195731269022150#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1736195731269022150#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 17 Dec 2023 01:24:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p><a href="https://nitter.cz/search?q=%23AI开源项目推荐">#AI开源项目推荐</a>： Novel<br />
<br />
Novel 是一款 Notion 风格的所见即所得编辑器，集成了 AI ，可以借助 AI 自动写作内容。<br />
<br />
<a href="https://github.com/steven-tey/novel">github.com/steven-tey/novel</a></p>
<img src="https://nitter.cz/pic/enc/ZXh0X3R3X3ZpZGVvX3RodW1iLzE3MzYxOTU0OTYxNTMxMDAyODgvcHUvaW1nL0xvMkJ0NHBLT3B2Sjk4ZUEuanBn" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1736117089121743125#m</id>
            <title>推荐阅读：《提升软件工程效率的小技巧：留点悬念，让工作更流畅 [译]》

4 个改变我工作效率的编程习惯
“你的成果是你习惯的反映。” - James Clear

当我逐渐成长为一名优秀的软件工程师时，我发现自己日常工作中的四个关键习惯极大地提升了我的效率。

1. 留下部分未完工作，为次日顺利开展打下基础
2. 提高键盘与鼠标快捷键的使用技巧
3. 随手准备一份可搜索的命令和链接清单
4. 学会拒绝

原文：https://read.engineerscodex.com/p/simple-software-engineering-habits
翻译：https://baoyu.io/translations/software-engineering/simple-software-engineering-habits</title>
            <link>https://nitter.cz/dotey/status/1736117089121743125#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1736117089121743125#m</guid>
            <pubDate></pubDate>
            <updated>Sat, 16 Dec 2023 20:12:24 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>推荐阅读：《提升软件工程效率的小技巧：留点悬念，让工作更流畅 [译]》<br />
<br />
4 个改变我工作效率的编程习惯<br />
“你的成果是你习惯的反映。” - James Clear<br />
<br />
当我逐渐成长为一名优秀的软件工程师时，我发现自己日常工作中的四个关键习惯极大地提升了我的效率。<br />
<br />
1. 留下部分未完工作，为次日顺利开展打下基础<br />
2. 提高键盘与鼠标快捷键的使用技巧<br />
3. 随手准备一份可搜索的命令和链接清单<br />
4. 学会拒绝<br />
<br />
原文：<a href="https://read.engineerscodex.com/p/simple-software-engineering-habits">read.engineerscodex.com/p/si…</a><br />
翻译：<a href="https://baoyu.io/translations/software-engineering/simple-software-engineering-habits">baoyu.io/translations/softwa…</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JmdE9fX1hjQUFVbW9ILmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JmdFFHc1hVQUFLSml6LnBuZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JmdFNiWVdjQUFYY0xkLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1736116191851069614#m</id>
            <title>推荐阅读来自桥水（bridgewater）的报告：《探讨人工智能对经济的影响》

从历史来看，像电力和计算机这样能广泛应用于整个经济的通用技术，通常在诞生后一到三十年后开始显著影响生产力。

AI 对生产力的提升速度将超过过去的通用技术，但真正的高峰期仍然遥远。

原文：https://www.bridgewater.com/research-and-insights/exploring-how-ai-will-impact-the-economy
翻译：https://baoyu.io/translations/ai/exploring-how-ai-will-impact-the-economy</title>
            <link>https://nitter.cz/dotey/status/1736116191851069614#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1736116191851069614#m</guid>
            <pubDate></pubDate>
            <updated>Sat, 16 Dec 2023 20:08:50 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>推荐阅读来自桥水（bridgewater）的报告：《探讨人工智能对经济的影响》<br />
<br />
从历史来看，像电力和计算机这样能广泛应用于整个经济的通用技术，通常在诞生后一到三十年后开始显著影响生产力。<br />
<br />
AI 对生产力的提升速度将超过过去的通用技术，但真正的高峰期仍然遥远。<br />
<br />
原文：<a href="https://www.bridgewater.com/research-and-insights/exploring-how-ai-will-impact-the-economy">bridgewater.com/research-and…</a><br />
翻译：<a href="https://baoyu.io/translations/ai/exploring-how-ai-will-impact-the-economy">baoyu.io/translations/ai/exp…</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0Jmc2QyZFhFQUFfbU85LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1735935483463467125#m</id>
            <title>微软出的 GitHub Copilot 教程，只有 6 堂课，会教你如何有效利用 GitHub Copilot 以及与 AI 结对编程。

课程一共 10 小时，可以体验如何通过 VSCode 和 GitHub Copilot Chat 进行实时协作，学习如何使用 GitHub Copilot 自动补全代码，处理错误和写单元测试，尽可能教会你使用 GitHub Copilot 的最佳实践，让你可以提升写代码的效率和质量。

https://github.com/microsoft/Mastering-GitHub-Copilot-for-Paired-Programming</title>
            <link>https://nitter.cz/dotey/status/1735935483463467125#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1735935483463467125#m</guid>
            <pubDate></pubDate>
            <updated>Sat, 16 Dec 2023 08:10:46 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>微软出的 GitHub Copilot 教程，只有 6 堂课，会教你如何有效利用 GitHub Copilot 以及与 AI 结对编程。<br />
<br />
课程一共 10 小时，可以体验如何通过 VSCode 和 GitHub Copilot Chat 进行实时协作，学习如何使用 GitHub Copilot 自动补全代码，处理错误和写单元测试，尽可能教会你使用 GitHub Copilot 的最佳实践，让你可以提升写代码的效率和质量。<br />
<br />
<a href="https://github.com/microsoft/Mastering-GitHub-Copilot-for-Paired-Programming">github.com/microsoft/Masteri…</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JkSERXdFdvQUFNWi1QLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/HiTw93/status/1735908538134958187#m</id>
            <title>RT by @dotey: 全世界前端里最潮流的乐队，全世界乐队里最会写前端的，牛逼牛逼牛逼！
🤟https://996.band/</title>
            <link>https://nitter.cz/HiTw93/status/1735908538134958187#m</link>
            <guid isPermaLink="false">https://nitter.cz/HiTw93/status/1735908538134958187#m</guid>
            <pubDate></pubDate>
            <updated>Sat, 16 Dec 2023 06:23:41 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>全世界前端里最潮流的乐队，全世界乐队里最会写前端的，牛逼牛逼牛逼！<br />
🤟<a href="https://996.band/">996.band/</a></p>
<img src="https://nitter.cz/pic/enc/YW1wbGlmeV92aWRlb190aHVtYi8xNzM1OTA4MzM0MTcwMjEwMzA0L2ltZy80UzBsUF9uRkwzQWVzVFJTLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1735919965822235043#m</id>
            <title>😲</title>
            <link>https://nitter.cz/dotey/status/1735919965822235043#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1735919965822235043#m</guid>
            <pubDate></pubDate>
            <updated>Sat, 16 Dec 2023 07:09:06 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>😲</p>
<p><a href="https://nitter.cz/WutalkWu/status/1735918653164675505#m">nitter.cz/WutalkWu/status/1735918653164675505#m</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1735878580943335679#m</id>
            <title>字节跳动秘密使用 OpenAI 技术打造竞争产品

“他们只是不想暴露行踪。” 在激烈的生成式 AI 竞赛中，连业界巨头也在寻找捷径。

TikTok 的“为你推荐”功能魅力无比，使得其母公司字节跳动在全球范围内站在了 AI 领导者的位置。然而，现在这家公司在生成式 AI 竞赛中的表现却距离领先有一大段距离，以至于它不得不秘密地运用 OpenAI 的技术，以开发出自家的大语言模型，以此来与市场上的其他大语言模型竞争。

在 AI 界，这样的做法备受非议。这还直接违反了 OpenAI 的服务条款中的一项规定，即禁止将其模型的输出用来“开发与我们的产品和服务有竞争关系的任何人工智能模型。” 字节跳动是通过购买 Microsoft 的 OpenAI 使用权来使用 OpenAI 的，但 Microsoft 也有着同样的规定。尽管如此，字节跳动在与我分享的内部文件中确认，他们有依赖 OpenAI API 在开发其基础大语言模型的各个阶段，包括训练和评估模型，这个模型被代号为 Project Seed。

涉及此事的员工深知其后果；我在字节跳动的内部沟通平台 Lark 上看到了他们讨论如何通过“数据脱敏”来掩盖这一行为的对话。这种滥用程度如此严重，以至于 Project Seed 的员工经常达到他们 API 使用的上限。

在 OpenAI 平台的早期阶段，Project Seed 计划的使用更为大胆。几个月前，字节跳动命令其团队停止在模型开发的任何阶段使用 GPT 生成的文本，这一指示来自内部文件。就在这个时期，该公司在中国获得了监管批准，通过一个叫做 Doubao 的聊天机器人平台发布 Project Seed。

然而，据我了解，这个 API 依旧在违反 OpenAI 和 Microsoft 的服务条款中被使用，其中包括评估字节跳动在 Doubao 背后的模型性能。一位对字节跳动内部情况有直接了解的人表示：“他们声称要确保一切合法，但实际上他们只是不想被发现。”

对于本故事中提及的详细事实，字节跳动的发言人 Jodi Seth 表示，在 Project Seed 的初期开发中，确实使用了 GPT 生成的数据来标注模型，并在今年中期左右将其从训练数据中移除。“字节跳动得到了 Microsoft 的授权，可以使用 GPT API，”她在声明中说。“我们在非中国市场利用 GPT 支持我们的产品和特性，但在中国市场，则是使用我们自研的模型来支持 Doubao。”

“像 Azure OpenAI 服务这样的 Microsoft AI 解决方案属于我们的有限访问框架的一部分，意味着所有客户都必须申请并得到 Microsoft 的批准，”Microsoft 的发言人 Frank Shaw 在一份声明中说。“我们还制定了标准，并提供资源帮助客户负责任地使用这些技术，并符合我们的服务条款。我们有流程来检测滥用，并在发现违反行为准则的公司时，将停止他们的访问权限。”

更新 12月15日，下午6:40东部时间: 在这篇报道发布后，OpenAI 的发言人 Niko Felix 向我确认，字节跳动的账户已被暂停使用：“所有使用我们 API 的客户必须遵守我们的使用政策，确保技术被用于正当目的。尽管字节跳动对我们的 API 使用很少，但我们正在进一步调查期间已暂停他们的账户。如果我们发现他们的使用不符合这些政策，我们将要求他们进行必要的调整，或终止他们的账户。”

虽然鲜少公开讨论，但小型公司普遍利用专有的人工智能模型，尤其是 OpenAI 的模型，来开发与之竞争的产品。由于 OpenAI 和 Microsoft 还没有以某个违规案例为鉴，这种做法目前仍处于法律上的灰色地带。“许多初创企业现在都在冒这个风险，”Databricks 的生成式 AI 副总裁 Naveen Rao 表示。

不过，从我在采访中了解到的情况来看，像 ByteDance 这样规模和资源雄厚的公司采取这种行为是极为罕见的。这似乎表明 Project Seed 团队面临着巨大的压力，必须迅速交付成果。“我经常收到 ByteDance 发来的招聘邮件，”一位在美国大型科技公司的 AI 研究员说，“我通常不予理会。但这件事让我想把这些邮件直接标为垃圾邮件。”

其他公司也遇到了类似的问题，担心自己的 GPT 输出被用来发展竞争对手。比如，Google 有研究员因为一些同事试图利用包含 ChatGPT 对话内容的网站数据而选择辞职。这一事件并未涉及滥用 OpenAI 的 API，但在内部引起了不小的尴尬，涉事员工也受到了轻微的惩戒。

自从大约一年前 ByteDance 启动了 Project Seed，这个项目就成了一个高优先级且高度保密的任务。参与其中的员工需要签署特别的保密协议，项目内部的信息获取也变得愈发隔离。ByteDance 的亿万富翁联合创始人、前 CEO 张一鸣 密切关注项目的进展。

Project Seed 目前主要研发两个产品：Doubao，这是一个已在中国上线的消费者聊天机器人平台（似乎在国外也可以访问）；另一个是针对商业用户的聊天机器人平台，目前正在开发中，计划通过 ByteDance 的云服务部门销售。

虽然告知员工 Project Seed 的目标是为了像 OpenAI 那样，最终发展出通用人工智能（AGI），但其实质目标似乎更倾向于尽快成为中国版的 ChatGPT。该项目团队已被指令在今年年底之前实现与 GPT-3.5 相同的性能，并在 2024 年年中前达到 GPT-4 的水平。目前 Seed 模型的参数大约为 2000 亿，而 GPT-3.5 的参数为 1750 亿。（OpenAI 尚未公布 GPT-4 的参数数量。）

目前，Project Seed 与 TikTok 没有关联，主要在中国服务器上进行开发。团队成员大多位于中国，但也有驻美国的成员。项目的主导者是字节跳动搜索部门负责人 Zhu Wenjia，他向公司高级工程领导 Yang Zhenyuan 汇报工作。项目的其他关键领导人包括 Qiao Mu（隶属于 Wenjia）和负责应用机器学习团队的 Xiang Liang。

据我所知，OpenAI 正在研究如何识别其 API 输出以预防潜在的误用问题，但看来问题已经显露。目前还不清楚 ByteDance 的此类行为是否会加剧美中两国之间已经存在的紧张局势，两国都将 AI 视为国家安全的重要议题。

另一个引人关注的问题是，当大量的大语言模型（LLM）开始参与构建其他 LLM 时，网络信息质量会发生何种变化。由于这些基础模型本身就是在非真实、人工制造的数据上训练的，用它们来构建更多 LLM 可能会进一步放大错误信息的传播。正如 Databricks 的 Rao 向我表述的那样：“这最终可能导致我们与现实世界的脱节。”

https://www.theverge.com/2023/12/15/24003151/bytedance-china-openai-microsoft-competitor-llm</title>
            <link>https://nitter.cz/dotey/status/1735878580943335679#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1735878580943335679#m</guid>
            <pubDate></pubDate>
            <updated>Sat, 16 Dec 2023 04:24:39 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>字节跳动秘密使用 OpenAI 技术打造竞争产品<br />
<br />
“他们只是不想暴露行踪。” 在激烈的生成式 AI 竞赛中，连业界巨头也在寻找捷径。<br />
<br />
TikTok 的“为你推荐”功能魅力无比，使得其母公司字节跳动在全球范围内站在了 AI 领导者的位置。然而，现在这家公司在生成式 AI 竞赛中的表现却距离领先有一大段距离，以至于它不得不秘密地运用 OpenAI 的技术，以开发出自家的大语言模型，以此来与市场上的其他大语言模型竞争。<br />
<br />
在 AI 界，这样的做法备受非议。这还直接违反了 OpenAI 的服务条款中的一项规定，即禁止将其模型的输出用来“开发与我们的产品和服务有竞争关系的任何人工智能模型。” 字节跳动是通过购买 Microsoft 的 OpenAI 使用权来使用 OpenAI 的，但 Microsoft 也有着同样的规定。尽管如此，字节跳动在与我分享的内部文件中确认，他们有依赖 OpenAI API 在开发其基础大语言模型的各个阶段，包括训练和评估模型，这个模型被代号为 Project Seed。<br />
<br />
涉及此事的员工深知其后果；我在字节跳动的内部沟通平台 Lark 上看到了他们讨论如何通过“数据脱敏”来掩盖这一行为的对话。这种滥用程度如此严重，以至于 Project Seed 的员工经常达到他们 API 使用的上限。<br />
<br />
在 OpenAI 平台的早期阶段，Project Seed 计划的使用更为大胆。几个月前，字节跳动命令其团队停止在模型开发的任何阶段使用 GPT 生成的文本，这一指示来自内部文件。就在这个时期，该公司在中国获得了监管批准，通过一个叫做 Doubao 的聊天机器人平台发布 Project Seed。<br />
<br />
然而，据我了解，这个 API 依旧在违反 OpenAI 和 Microsoft 的服务条款中被使用，其中包括评估字节跳动在 Doubao 背后的模型性能。一位对字节跳动内部情况有直接了解的人表示：“他们声称要确保一切合法，但实际上他们只是不想被发现。”<br />
<br />
对于本故事中提及的详细事实，字节跳动的发言人 Jodi Seth 表示，在 Project Seed 的初期开发中，确实使用了 GPT 生成的数据来标注模型，并在今年中期左右将其从训练数据中移除。“字节跳动得到了 Microsoft 的授权，可以使用 GPT API，”她在声明中说。“我们在非中国市场利用 GPT 支持我们的产品和特性，但在中国市场，则是使用我们自研的模型来支持 Doubao。”<br />
<br />
“像 Azure OpenAI 服务这样的 Microsoft AI 解决方案属于我们的有限访问框架的一部分，意味着所有客户都必须申请并得到 Microsoft 的批准，”Microsoft 的发言人 Frank Shaw 在一份声明中说。“我们还制定了标准，并提供资源帮助客户负责任地使用这些技术，并符合我们的服务条款。我们有流程来检测滥用，并在发现违反行为准则的公司时，将停止他们的访问权限。”<br />
<br />
更新 12月15日，下午6:40东部时间: 在这篇报道发布后，OpenAI 的发言人 Niko Felix 向我确认，字节跳动的账户已被暂停使用：“所有使用我们 API 的客户必须遵守我们的使用政策，确保技术被用于正当目的。尽管字节跳动对我们的 API 使用很少，但我们正在进一步调查期间已暂停他们的账户。如果我们发现他们的使用不符合这些政策，我们将要求他们进行必要的调整，或终止他们的账户。”<br />
<br />
虽然鲜少公开讨论，但小型公司普遍利用专有的人工智能模型，尤其是 OpenAI 的模型，来开发与之竞争的产品。由于 OpenAI 和 Microsoft 还没有以某个违规案例为鉴，这种做法目前仍处于法律上的灰色地带。“许多初创企业现在都在冒这个风险，”Databricks 的生成式 AI 副总裁 Naveen Rao 表示。<br />
<br />
不过，从我在采访中了解到的情况来看，像 ByteDance 这样规模和资源雄厚的公司采取这种行为是极为罕见的。这似乎表明 Project Seed 团队面临着巨大的压力，必须迅速交付成果。“我经常收到 ByteDance 发来的招聘邮件，”一位在美国大型科技公司的 AI 研究员说，“我通常不予理会。但这件事让我想把这些邮件直接标为垃圾邮件。”<br />
<br />
其他公司也遇到了类似的问题，担心自己的 GPT 输出被用来发展竞争对手。比如，Google 有研究员因为一些同事试图利用包含 ChatGPT 对话内容的网站数据而选择辞职。这一事件并未涉及滥用 OpenAI 的 API，但在内部引起了不小的尴尬，涉事员工也受到了轻微的惩戒。<br />
<br />
自从大约一年前 ByteDance 启动了 Project Seed，这个项目就成了一个高优先级且高度保密的任务。参与其中的员工需要签署特别的保密协议，项目内部的信息获取也变得愈发隔离。ByteDance 的亿万富翁联合创始人、前 CEO 张一鸣 密切关注项目的进展。<br />
<br />
Project Seed 目前主要研发两个产品：Doubao，这是一个已在中国上线的消费者聊天机器人平台（似乎在国外也可以访问）；另一个是针对商业用户的聊天机器人平台，目前正在开发中，计划通过 ByteDance 的云服务部门销售。<br />
<br />
虽然告知员工 Project Seed 的目标是为了像 OpenAI 那样，最终发展出通用人工智能（AGI），但其实质目标似乎更倾向于尽快成为中国版的 ChatGPT。该项目团队已被指令在今年年底之前实现与 GPT-3.5 相同的性能，并在 2024 年年中前达到 GPT-4 的水平。目前 Seed 模型的参数大约为 2000 亿，而 GPT-3.5 的参数为 1750 亿。（OpenAI 尚未公布 GPT-4 的参数数量。）<br />
<br />
目前，Project Seed 与 TikTok 没有关联，主要在中国服务器上进行开发。团队成员大多位于中国，但也有驻美国的成员。项目的主导者是字节跳动搜索部门负责人 Zhu Wenjia，他向公司高级工程领导 Yang Zhenyuan 汇报工作。项目的其他关键领导人包括 Qiao Mu（隶属于 Wenjia）和负责应用机器学习团队的 Xiang Liang。<br />
<br />
据我所知，OpenAI 正在研究如何识别其 API 输出以预防潜在的误用问题，但看来问题已经显露。目前还不清楚 ByteDance 的此类行为是否会加剧美中两国之间已经存在的紧张局势，两国都将 AI 视为国家安全的重要议题。<br />
<br />
另一个引人关注的问题是，当大量的大语言模型（LLM）开始参与构建其他 LLM 时，网络信息质量会发生何种变化。由于这些基础模型本身就是在非真实、人工制造的数据上训练的，用它们来构建更多 LLM 可能会进一步放大错误信息的传播。正如 Databricks 的 Rao 向我表述的那样：“这最终可能导致我们与现实世界的脱节。”<br />
<br />
<a href="https://www.theverge.com/2023/12/15/24003151/bytedance-china-openai-microsoft-competitor-llm">theverge.com/2023/12/15/2400…</a></p>
<p><a href="https://nitter.cz/xiaohuggg/status/1735876029552718213#m">nitter.cz/xiaohuggg/status/1735876029552718213#m</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JjVHdFY1hRQUFSMk9zLnBuZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1735868760957845761#m</id>
            <title>#开源项目推荐：Halo
一个强大易用的开源建站工具。

https://github.com/halo-dev/halo</title>
            <link>https://nitter.cz/dotey/status/1735868760957845761#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1735868760957845761#m</guid>
            <pubDate></pubDate>
            <updated>Sat, 16 Dec 2023 03:45:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p><a href="https://nitter.cz/search?q=%23开源项目推荐">#开源项目推荐</a>：Halo<br />
一个强大易用的开源建站工具。<br />
<br />
<a href="https://github.com/halo-dev/halo">github.com/halo-dev/halo</a></p>
<img src="https://nitter.cz/pic/enc/ZXh0X3R3X3ZpZGVvX3RodW1iLzE3MzU4Njg2ODA4NjMzNTA3ODQvcHUvaW1nL1JSMVBUTHlHY21JUW95NmguanBn" />
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>