<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>宝玉 / @dotey</title>
        <link>https://nitter.cz/dotey</link>
        
        <item>
            <id>https://nitter.cz/dotey/status/1734104397003518410#m</id>
            <title>给臧师傅点赞👍🏻</title>
            <link>https://nitter.cz/dotey/status/1734104397003518410#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1734104397003518410#m</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Dec 2023 06:54:41 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>给臧师傅点赞👍🏻</p>
<p><a href="https://nitter.cz/op7418/status/1734093582913708368#m">nitter.cz/op7418/status/1734093582913708368#m</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1734104301155262545#m</id>
            <title>上次Google的Gemini演示视频是后期剪辑后结果，于是有网友拿GPT-4V试验了部分场景，发现基本上能还原Gemini的演示效果，并且他把代码开源了：https://github.com/gregsadetsky/sagittarius

原始视频：http://www.youtube.com/watch?v=__nL7Vc0OCg</title>
            <link>https://nitter.cz/dotey/status/1734104301155262545#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1734104301155262545#m</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Dec 2023 06:54:18 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>上次Google的Gemini演示视频是后期剪辑后结果，于是有网友拿GPT-4V试验了部分场景，发现基本上能还原Gemini的演示效果，并且他把代码开源了：<a href="https://github.com/gregsadetsky/sagittarius">github.com/gregsadetsky/sagi…</a><br />
<br />
原始视频：<a href="http://www.youtube.com/watch?v=__nL7Vc0OCg">youtube.com/watch?v=__nL7Vc0…</a></p>
<img src="https://nitter.cz/pic/enc/ZXh0X3R3X3ZpZGVvX3RodW1iLzE3MzQxMDM5ODgyMjI1MDkwNTYvcHUvaW1nL2o5OUNGWmxoaU15Qng1bE0uanBn" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1734081217069211836#m</id>
            <title>推荐阅读：把大语言模型封装成桌面应用

作者使用Electron+Transformer.js，把大语言模型打包成桌面应用，这样就可以本地运行大语言模型。

另外作者开发了一个框架叫ollama（https://github.com/jmorganca/ollama），可以支持多种开源模型，例如Llama 2、Mistral等，但目前只支持Mac和Linux，还不支持Windows。

文章链接：https://www.bmacd.xyz/packaging-language-models-into-desktop-apps/
中文翻译：https://baoyu.io/translations/llm/packaging-language-models-into-desktop-apps</title>
            <link>https://nitter.cz/dotey/status/1734081217069211836#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1734081217069211836#m</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Dec 2023 05:22:34 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>推荐阅读：把大语言模型封装成桌面应用<br />
<br />
作者使用Electron+Transformer.js，把大语言模型打包成桌面应用，这样就可以本地运行大语言模型。<br />
<br />
另外作者开发了一个框架叫ollama（<a href="https://github.com/jmorganca/ollama">github.com/jmorganca/ollama</a>），可以支持多种开源模型，例如Llama 2、Mistral等，但目前只支持Mac和Linux，还不支持Windows。<br />
<br />
文章链接：<a href="https://www.bmacd.xyz/packaging-language-models-into-desktop-apps/">bmacd.xyz/packaging-language…</a><br />
中文翻译：<a href="https://baoyu.io/translations/llm/packaging-language-models-into-desktop-apps">baoyu.io/translations/llm/pa…</a></p>
<p><a href="https://nitter.cz/_bmacd/status/1733891071384625438#m">nitter.cz/_bmacd/status/1733891071384625438#m</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JDd3E0alhZQUFZT0o4LmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JDd3U4WVhvQUFxMWNHLnBuZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/turingbook/status/1734066061123997841#m</id>
            <title>RT by @dotey: 扩散模型是不是多模态最好的选择？这方面新的探索很多。清华大学朱军团队 @zehuachen 等同学的工作，在文本到语音合成任务中，用确定性方法取代扩散模型，取得很好效果。“我们利用从文本输入获得的潜在表示作为先验，并在它和真实梅尔谱图之间建立一个完全易于处理的薛定谔桥梁。”</title>
            <link>https://nitter.cz/turingbook/status/1734066061123997841#m</link>
            <guid isPermaLink="false">https://nitter.cz/turingbook/status/1734066061123997841#m</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Dec 2023 04:22:21 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>扩散模型是不是多模态最好的选择？这方面新的探索很多。清华大学朱军团队 <a href="https://nitter.cz/zehuachen" title="泽泽">@zehuachen</a> 等同学的工作，在文本到语音合成任务中，用确定性方法取代扩散模型，取得很好效果。“我们利用从文本输入获得的潜在表示作为先验，并在它和真实梅尔谱图之间建立一个完全易于处理的薛定谔桥梁。”</p>
<p><a href="https://nitter.cz/_akhaliq/status/1732606971876966849#m">nitter.cz/_akhaliq/status/1732606971876966849#m</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/mtrainier2020/status/1734076697786642837#m</id>
            <title>RT by @dotey: 里面还是少了很多东西的。我首先建议去认真读netflix tech blog，他们的blog我认为干货含量最高的tech blog。https://netflixtechblog.com/
每个月都只有几篇，非常值得去看。 
Netflix非常慷慨地分享了他们的best practice。我认为任何对高可用高可靠服务有追求的人，都可以看看netflix怎么玩的。

而且我也强烈推荐Netflix founder 写的那本书,  That will never work。常读常新。
很多年轻人可能不知道，Netflix以前是邮寄DVD的。后来才搞得streaming的。 
Netflix 对技术疯狂投入的触动是从2012年圣诞节down开始的。
所以后面他们的技术演进对availability 有着巨大的推动。比如fault injection系列的各种monkey，都是他们搞出来的。
在图中并没有体现，而这块对这个对行业的价值，可能不小于 spring boot 这套东西。
还有就是最新的service mesh 基本上没有提及 ，以及他们的工作流编排引擎workflow orchestration engine (Conductor)，以及他们还有自己的媒体transcoding 的engine，cosmos等等，在存储这块，他们虽然用了大量的C*，但是也用了elasticsearch这种nonsql。
还有netflix的CDN这块也没有涉及。另外随着machine learning 的发展，他们内部也有大量基于python的服务。</title>
            <link>https://nitter.cz/mtrainier2020/status/1734076697786642837#m</link>
            <guid isPermaLink="false">https://nitter.cz/mtrainier2020/status/1734076697786642837#m</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Dec 2023 05:04:36 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>里面还是少了很多东西的。我首先建议去认真读netflix tech blog，他们的blog我认为干货含量最高的tech blog。<a href="https://netflixtechblog.com/">netflixtechblog.com/</a><br />
每个月都只有几篇，非常值得去看。 <br />
Netflix非常慷慨地分享了他们的best practice。我认为任何对高可用高可靠服务有追求的人，都可以看看netflix怎么玩的。<br />
<br />
而且我也强烈推荐Netflix founder 写的那本书,  That will never work。常读常新。<br />
很多年轻人可能不知道，Netflix以前是邮寄DVD的。后来才搞得streaming的。 <br />
Netflix 对技术疯狂投入的触动是从2012年圣诞节down开始的。<br />
所以后面他们的技术演进对availability 有着巨大的推动。比如fault injection系列的各种monkey，都是他们搞出来的。<br />
在图中并没有体现，而这块对这个对行业的价值，可能不小于 spring boot 这套东西。<br />
还有就是最新的service mesh 基本上没有提及 ，以及他们的工作流编排引擎workflow orchestration engine (Conductor)，以及他们还有自己的媒体transcoding 的engine，cosmos等等，在存储这块，他们虽然用了大量的C*，但是也用了elasticsearch这种nonsql。<br />
还有netflix的CDN这块也没有涉及。另外随着machine learning 的发展，他们内部也有大量基于python的服务。</p>
<p><a href="https://nitter.cz/dotey/status/1734070311606182361#m">nitter.cz/dotey/status/1734070311606182361#m</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JDc1NuR2J3QUFKZkxmLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1734070311606182361#m</id>
            <title>翻译：Netflix 的技术架构解析

本文汇集了许多来自 Netflix 工程团队的博客和开源项目的研究成果。如果您在阅读中发现任何不准确之处，请不吝告知。

移动端与网页端：Netflix 在其移动应用开发上，选用了 Swift 和 Kotlin 语言，打造出原生体验。至于网页应用方面，则采用了 React 技术。

前端与服务器的交流：这一环节，Netflix 选择了 GraphQL 技术。

后端服务体系：Netflix 构建其后端服务时，主要依赖于 ZUUL、Eureka 和 Spring Boot 框架，以及其他一些技术。

数据库方面：Netflix 的数据存储方案中包含了 EV 缓存、Cassandra、CockroachDB 等多种数据库技术。

消息传递与流媒体处理：为了实现高效的消息传递和流媒体服务，Netflix 采用了 Apache Kafka 和 Fink。

视频存储解决方案：对于视频内容的存储，Netflix 使用了 S3 和 Open Connect。

数据处理流程：在处理数据方面，Netflix 利用 Flink 和 Spark 完成数据处理任务，并通过 Tableau 工具进行数据可视化展示。此外，Redshift 被用于处理结构化的数据仓库信息。

持续集成与持续部署（CI/CD）：在这一环节，Netflix 采用了包括 JIRA、Confluence、PagerDuty、Jenkins、Gradle、Chaos Monkey、Spinnaker、Altas 等在内的多种工具。</title>
            <link>https://nitter.cz/dotey/status/1734070311606182361#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1734070311606182361#m</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Dec 2023 04:39:14 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>翻译：Netflix 的技术架构解析<br />
<br />
本文汇集了许多来自 Netflix 工程团队的博客和开源项目的研究成果。如果您在阅读中发现任何不准确之处，请不吝告知。<br />
<br />
移动端与网页端：Netflix 在其移动应用开发上，选用了 Swift 和 Kotlin 语言，打造出原生体验。至于网页应用方面，则采用了 React 技术。<br />
<br />
前端与服务器的交流：这一环节，Netflix 选择了 GraphQL 技术。<br />
<br />
后端服务体系：Netflix 构建其后端服务时，主要依赖于 ZUUL、Eureka 和 Spring Boot 框架，以及其他一些技术。<br />
<br />
数据库方面：Netflix 的数据存储方案中包含了 EV 缓存、Cassandra、CockroachDB 等多种数据库技术。<br />
<br />
消息传递与流媒体处理：为了实现高效的消息传递和流媒体服务，Netflix 采用了 Apache Kafka 和 Fink。<br />
<br />
视频存储解决方案：对于视频内容的存储，Netflix 使用了 S3 和 Open Connect。<br />
<br />
数据处理流程：在处理数据方面，Netflix 利用 Flink 和 Spark 完成数据处理任务，并通过 Tableau 工具进行数据可视化展示。此外，Redshift 被用于处理结构化的数据仓库信息。<br />
<br />
持续集成与持续部署（CI/CD）：在这一环节，Netflix 采用了包括 JIRA、Confluence、PagerDuty、Jenkins、Gradle、Chaos Monkey、Spinnaker、Altas 等在内的多种工具。</p>
<p><a href="https://nitter.cz/alexxubyte/status/1733891233859473857#m">nitter.cz/alexxubyte/status/1733891233859473857#m</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1734068014784401903#m</id>
            <title>#AI开源项目推荐：TurnVoice

这是一个将YouTube视频的声音重新翻译替换的开源项目，它号称可以：
- 语音替换：去除人声轨道并重新组合以保留原始背景音频
- 对发言人分类：替换视频中特定说话人的声音

计划要增加但还没实现的功能：
- TTS：支持OpenAI、Azure和Elevenlabs
- 翻译：支持OpenAI、DeepL API等
- 语音克隆
- 实时翻译
- 等

这个还是一个很新的项目，我在本地没能跑起来，但感觉挺有潜力的一个项目。

https://github.com/KoljaB/TurnVoice</title>
            <link>https://nitter.cz/dotey/status/1734068014784401903#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1734068014784401903#m</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Dec 2023 04:30:06 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p><a href="https://nitter.cz/search?q=%23AI开源项目推荐">#AI开源项目推荐</a>：TurnVoice<br />
<br />
这是一个将YouTube视频的声音重新翻译替换的开源项目，它号称可以：<br />
- 语音替换：去除人声轨道并重新组合以保留原始背景音频<br />
- 对发言人分类：替换视频中特定说话人的声音<br />
<br />
计划要增加但还没实现的功能：<br />
- TTS：支持OpenAI、Azure和Elevenlabs<br />
- 翻译：支持OpenAI、DeepL API等<br />
- 语音克隆<br />
- 实时翻译<br />
- 等<br />
<br />
这个还是一个很新的项目，我在本地没能跑起来，但感觉挺有潜力的一个项目。<br />
<br />
<a href="https://github.com/KoljaB/TurnVoice">github.com/KoljaB/TurnVoice</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/xiaohuggg/status/1734028007323701349#m</id>
            <title>RT by @dotey: 3D高斯泼溅（Gaussian Splatting）这个技术似乎经历了一场“寒武纪大爆发”。

自2023年7月发表开创性论文以来，发展速度贼快，可以说是天天有研究成果、周周有产品上线...

@janusch_patas 和 @henrypearce4D 整理了一个3D高斯泼溅相关的优秀资源列表

收集了众多相关工具、资源和研究成果，包括：

1、生态系统和工具：

•PlayCanvas发布了一个在线散射编辑器SuperSplat。
•Luma AI发布了Unreal Engine 5插件和基于WebGL的Three.js视图库：Luma WebGL Library。
•Spline添加了高斯散射支持，配备简单的编辑工具。
•讨论了各种开源工具作者之间可能的“通用散射格式”。

2、研究论文：

•多篇论文探讨了高斯散射在3D编辑、实时点云重照明、逆渲染、数据压缩、防锯齿、辐射场模型压缩、高斯散射着色函数、可重照明的高斯编解码器头像、高效3D网格重建和高质量网格渲染等方面的应用。

3、Unity高斯散射项目：

•作者创建的Unity高斯散射项目意外地获得了1300多个GitHub星标。
•项目新增了对HDRP和URP渲染管线的支持，以及更细致的散射编辑工具。
•项目还包括一些与高斯散射无关但可能在其他地方有用的部分，如AMD FidelityFX GPU基数排序的Unity移植、K-means聚类的C#实现等。

对3D高斯泼溅（Gaussian Splatting）这个技术感兴趣的可以看看。

详细介绍：https://aras-p.info/blog/2023/12/08/Gaussian-explosion/

Awesome 3D Gaussian Splatting项目：

主要内容

•资源列表：包含了关于3D高斯散射的各种论文和开源资源。
•论文分类：涵盖了动态与变形、扩散、头像、SLAM、网格提取与物理、正则化与优化、编辑、渲染、压缩、语言嵌入等多个子领域。
•开源实现：提供了各种3D高斯散射的开源实现参考。
•工具和实用程序：包括游戏引擎、查看器、实用工具等。
•博客文章和教程视频：提供了关于3D高斯散射的博客文章和教程视频。

GitHub：https://github.com/MrNeRF/awesome-3D-gaussian-splatting</title>
            <link>https://nitter.cz/xiaohuggg/status/1734028007323701349#m</link>
            <guid isPermaLink="false">https://nitter.cz/xiaohuggg/status/1734028007323701349#m</guid>
            <pubDate></pubDate>
            <updated>Mon, 11 Dec 2023 01:51:08 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>3D高斯泼溅（Gaussian Splatting）这个技术似乎经历了一场“寒武纪大爆发”。<br />
<br />
自2023年7月发表开创性论文以来，发展速度贼快，可以说是天天有研究成果、周周有产品上线...<br />
<br />
<a href="https://nitter.cz/janusch_patas" title="MrNeRF">@janusch_patas</a> 和 <a href="https://nitter.cz/henrypearce4D" title="Henry Pearce">@henrypearce4D</a> 整理了一个3D高斯泼溅相关的优秀资源列表<br />
<br />
收集了众多相关工具、资源和研究成果，包括：<br />
<br />
1、生态系统和工具：<br />
<br />
•PlayCanvas发布了一个在线散射编辑器SuperSplat。<br />
•Luma AI发布了Unreal Engine 5插件和基于WebGL的Three.js视图库：Luma WebGL Library。<br />
•Spline添加了高斯散射支持，配备简单的编辑工具。<br />
•讨论了各种开源工具作者之间可能的“通用散射格式”。<br />
<br />
2、研究论文：<br />
<br />
•多篇论文探讨了高斯散射在3D编辑、实时点云重照明、逆渲染、数据压缩、防锯齿、辐射场模型压缩、高斯散射着色函数、可重照明的高斯编解码器头像、高效3D网格重建和高质量网格渲染等方面的应用。<br />
<br />
3、Unity高斯散射项目：<br />
<br />
•作者创建的Unity高斯散射项目意外地获得了1300多个GitHub星标。<br />
•项目新增了对HDRP和URP渲染管线的支持，以及更细致的散射编辑工具。<br />
•项目还包括一些与高斯散射无关但可能在其他地方有用的部分，如AMD FidelityFX GPU基数排序的Unity移植、K-means聚类的C#实现等。<br />
<br />
对3D高斯泼溅（Gaussian Splatting）这个技术感兴趣的可以看看。<br />
<br />
详细介绍：<a href="https://aras-p.info/blog/2023/12/08/Gaussian-explosion/">aras-p.info/blog/2023/12/08/…</a><br />
<br />
Awesome 3D Gaussian Splatting项目：<br />
<br />
主要内容<br />
<br />
•资源列表：包含了关于3D高斯散射的各种论文和开源资源。<br />
•论文分类：涵盖了动态与变形、扩散、头像、SLAM、网格提取与物理、正则化与优化、编辑、渲染、压缩、语言嵌入等多个子领域。<br />
•开源实现：提供了各种3D高斯散射的开源实现参考。<br />
•工具和实用程序：包括游戏引擎、查看器、实用工具等。<br />
•博客文章和教程视频：提供了关于3D高斯散射的博客文章和教程视频。<br />
<br />
GitHub：<a href="https://github.com/MrNeRF/awesome-3D-gaussian-splatting">github.com/MrNeRF/awesome-3D…</a></p>
<img src="https://nitter.cz/pic/enc/ZXh0X3R3X3ZpZGVvX3RodW1iLzE3MzQwMjc4NDc1MDM4ODQyODgvcHUvaW1nL0Jqei0zLUZOU0RwMTJENVMuanBn" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1733999381530005632#m</id>
            <title>AK 推荐的几个看最新最热 AI 相关论文的站点：
1. https://arxiv-sanity-lite.com/ 这个是 AK 早年做的，不够现在已经不怎么维护了，其中的“热门”功能还因为成本和没有精力维护已经砍掉了，其他功能看着正常
2. https://paperswithcode.com 这个比较有名，就是收集的有代码的论文
3. https://papers.labml.ai/papers/weekly 似乎访问不了了

还有一些其他来源，但太泛泛了：
- https://github.com/trending
- HN（Hacknews）
- Discord
- X
- reddit</title>
            <link>https://nitter.cz/dotey/status/1733999381530005632#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1733999381530005632#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 23:57:23 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>AK 推荐的几个看最新最热 AI 相关论文的站点：<br />
1. <a href="https://arxiv-sanity-lite.com/">arxiv-sanity-lite.com/</a> 这个是 AK 早年做的，不够现在已经不怎么维护了，其中的“热门”功能还因为成本和没有精力维护已经砍掉了，其他功能看着正常<br />
2. <a href="https://paperswithcode.com">paperswithcode.com</a> 这个比较有名，就是收集的有代码的论文<br />
3. <a href="https://papers.labml.ai/papers/weekly">papers.labml.ai/papers/weekl…</a> 似乎访问不了了<br />
<br />
还有一些其他来源，但太泛泛了：<br />
- <a href="https://github.com/trending">github.com/trending</a><br />
- HN（Hacknews）<br />
- Discord<br />
- X<br />
- reddit</p>
<p><a href="https://nitter.cz/karpathy/status/1733968385472704548#m">nitter.cz/karpathy/status/1733968385472704548#m</a></p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczMDI4NTYwMzEwNTk5MjcwOC9KOXJEbVFVdD9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1733994836171059606#m</id>
            <title>来自纽约时报：法国人工智能初创公司 Mistral 在资金融资中估值达 20 亿美元

这家公司最近向公众发布了其最新开源大语言模型技术，使人们能够自主构建聊天机器人。然而，OpenAI 和 Google 等行业竞争者认为，这种做法可能存在风险。

图一：Arthur Mensch 是 Mistral 的三位创始人之一。他坚信，开源人工智能软件不仅更安全，而且更有效。图片来源…Pool photo by Toby Melville

作者：Cade Metz

Cade Metz 撰写了关于人工智能和其他尖端技术的文章。

2023年12月10日更新 5:58 p.m. ET

巴黎的初创公司 Mistral AI，在七个月前由前 Meta 和 Google 的研究人员创立，已在最新一轮融资中筹集了 3.85 亿欧元，约合 4.15 亿美元。这反映了市场对一种新型人工智能技术的极大兴趣，该技术是推动在线聊天机器人发展的关键。

根据知情人士透露，这次融资使这家仅有 22 名员工的公司的估值飙升至约 20 亿美元。参与投资的包括硅谷的风险投资公司 Andreessen Horowitz 和 Lightspeed Venture Partners。

仅在六个月前，该公司的价值还远未达到这一水平。在今年夏天，Mistral 筹集了 1.05 亿欧元（约合 1.13 亿美元）的种子轮资金，当时公司的估值约为 2.6 亿美元。

Mistral 是一家开发技术的公司，这些技术能帮助其他企业部署聊天机器人、搜索引擎、在线辅导和其他由 AI 驱动的产品。它与科技行业的巨头以及一些创业公司一道，正成为少数几家可能与 OpenAI 的最新研发技术竞争的企业之一。OpenAI 是一家位于旧金山的初创公司，去年秋天发布了 ChatGPT 聊天机器人，从而引领了 AI 领域的热潮。

Mistral 还坚信将其技术以开源软件的形式共享——任何人都可以自由地复制、修改和再利用这些计算机代码。这为那些希望迅速构建自己的聊天机器人的外部人员提供了所需的一切。然而，OpenAI 和 Google 等竞争对手认为，开源方法可能带来风险，原始技术可能被用于传播假信息和其他有害内容。

Mistral 的发展在法国备受关注，财政部长 Bruno Le Maire 等领导人将其视为法国挑战美国科技巨头的一个机遇。自互联网泡沫时代以来，欧洲鲜少涌现出有重大影响的科技公司，但在人工智能领域，欧洲看到了取得进展的可能。

投资者们正大力投资那些信奉开源理念的初创公司。例如，由一批顶尖研究人员去年创立的 Perplexity，最近完成了一轮 7000 万美元的融资，公司估值达到了 5 亿美元。了解该交易详情的人士透露，其中的投资者包括 IVP 和 Bessemer Venture Partners。

Andreessen Horowitz 的合伙人 Anjney Midha 对新一轮对 Mistral 的投资表示：“我们坚信 AI 应该是开放源代码的。”他补充道，推动现代计算的许多主要技术都是开源的，包括计算机操作系统、编程语言和数据库。

Mistral 由 Timothée Lacroix 和 Guillaume Lample 创立，他们此前在 Meta 的巴黎 AI 实验室担任研究员。Meta 是 Facebook 和 Instagram 的母公司。另一位创始人 Arthur Mensch 曾是 DeepMind 的研究员，DeepMind 是 Google 在 2014 年以 6.5 亿美元收购的 AI 实验室。

公司员工经常开玩笑说，创始人姓氏的首字母组成了“L.L.M.”，这不仅是他们的姓名首字母，也恰好是他们正在开发的 AI 技术——大语言模型（Large Language Model）的缩写。

在人工智能 (A.I.) 的竞赛中，OpenAI、Microsoft 和 Google 等公司正处于领先地位，他们为这项技术投入了高达数千亿美元。利用互联网上海量的数字文本，大语言模型 (Large Language Model) 能学会自主生成文本，从而能够回答问题、创作诗歌甚至编写计算机代码。

OpenAI 和 Google 等公司深知这项技术的强大潜力，因此在公开发布前，他们花费数月时间加装了数字安全措施，以防止这项技术散播假信息、仇恨言论及其他有害内容，最终以在线聊天机器人的形式向大众呈现。

然而，很多人工智能研究者、科技公司高管和风险投资家认为，真正赢得人工智能竞赛的将是那些构建同样技术并免费提供给大众的公司，且不设任何安全限制。

Meta（Mistral 创始人的前东家）一直是推崇开源方法的公司中的佼佼者。今年，这家科技巨头开发了名为 LLaMA 的大语言模型，并基本上以开源软件的形式免费发布。

本周日，Mistral 也发布了它们的最新开源技术，声称其性能与 Meta 的技术不相伯仲。

Midha 先生认为，广泛分享人工智能底层代码是最安全的途径，因为这样可以有更多人参与审查这项技术，发现并解决潜在的缺陷。

他指出：“没有任何一个工程团队能够发现所有问题。大型社区在构建更便宜、更快、更优、更安全的软件方面更有优势。”

https://www.nytimes.com/2023/12/10/technology/mistral-ai-funding.html</title>
            <link>https://nitter.cz/dotey/status/1733994836171059606#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1733994836171059606#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 23:39:19 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>来自纽约时报：法国人工智能初创公司 Mistral 在资金融资中估值达 20 亿美元<br />
<br />
这家公司最近向公众发布了其最新开源大语言模型技术，使人们能够自主构建聊天机器人。然而，OpenAI 和 Google 等行业竞争者认为，这种做法可能存在风险。<br />
<br />
图一：Arthur Mensch 是 Mistral 的三位创始人之一。他坚信，开源人工智能软件不仅更安全，而且更有效。图片来源…Pool photo by Toby Melville<br />
<br />
作者：Cade Metz<br />
<br />
Cade Metz 撰写了关于人工智能和其他尖端技术的文章。<br />
<br />
2023年12月10日更新 5:58 p.m. ET<br />
<br />
巴黎的初创公司 Mistral AI，在七个月前由前 Meta 和 Google 的研究人员创立，已在最新一轮融资中筹集了 3.85 亿欧元，约合 4.15 亿美元。这反映了市场对一种新型人工智能技术的极大兴趣，该技术是推动在线聊天机器人发展的关键。<br />
<br />
根据知情人士透露，这次融资使这家仅有 22 名员工的公司的估值飙升至约 20 亿美元。参与投资的包括硅谷的风险投资公司 Andreessen Horowitz 和 Lightspeed Venture Partners。<br />
<br />
仅在六个月前，该公司的价值还远未达到这一水平。在今年夏天，Mistral 筹集了 1.05 亿欧元（约合 1.13 亿美元）的种子轮资金，当时公司的估值约为 2.6 亿美元。<br />
<br />
Mistral 是一家开发技术的公司，这些技术能帮助其他企业部署聊天机器人、搜索引擎、在线辅导和其他由 AI 驱动的产品。它与科技行业的巨头以及一些创业公司一道，正成为少数几家可能与 OpenAI 的最新研发技术竞争的企业之一。OpenAI 是一家位于旧金山的初创公司，去年秋天发布了 ChatGPT 聊天机器人，从而引领了 AI 领域的热潮。<br />
<br />
Mistral 还坚信将其技术以开源软件的形式共享——任何人都可以自由地复制、修改和再利用这些计算机代码。这为那些希望迅速构建自己的聊天机器人的外部人员提供了所需的一切。然而，OpenAI 和 Google 等竞争对手认为，开源方法可能带来风险，原始技术可能被用于传播假信息和其他有害内容。<br />
<br />
Mistral 的发展在法国备受关注，财政部长 Bruno Le Maire 等领导人将其视为法国挑战美国科技巨头的一个机遇。自互联网泡沫时代以来，欧洲鲜少涌现出有重大影响的科技公司，但在人工智能领域，欧洲看到了取得进展的可能。<br />
<br />
投资者们正大力投资那些信奉开源理念的初创公司。例如，由一批顶尖研究人员去年创立的 Perplexity，最近完成了一轮 7000 万美元的融资，公司估值达到了 5 亿美元。了解该交易详情的人士透露，其中的投资者包括 IVP 和 Bessemer Venture Partners。<br />
<br />
Andreessen Horowitz 的合伙人 Anjney Midha 对新一轮对 Mistral 的投资表示：“我们坚信 AI 应该是开放源代码的。”他补充道，推动现代计算的许多主要技术都是开源的，包括计算机操作系统、编程语言和数据库。<br />
<br />
Mistral 由 Timothée Lacroix 和 Guillaume Lample 创立，他们此前在 Meta 的巴黎 AI 实验室担任研究员。Meta 是 Facebook 和 Instagram 的母公司。另一位创始人 Arthur Mensch 曾是 DeepMind 的研究员，DeepMind 是 Google 在 2014 年以 6.5 亿美元收购的 AI 实验室。<br />
<br />
公司员工经常开玩笑说，创始人姓氏的首字母组成了“L.L.M.”，这不仅是他们的姓名首字母，也恰好是他们正在开发的 AI 技术——大语言模型（Large Language Model）的缩写。<br />
<br />
在人工智能 (A.I.) 的竞赛中，OpenAI、Microsoft 和 Google 等公司正处于领先地位，他们为这项技术投入了高达数千亿美元。利用互联网上海量的数字文本，大语言模型 (Large Language Model) 能学会自主生成文本，从而能够回答问题、创作诗歌甚至编写计算机代码。<br />
<br />
OpenAI 和 Google 等公司深知这项技术的强大潜力，因此在公开发布前，他们花费数月时间加装了数字安全措施，以防止这项技术散播假信息、仇恨言论及其他有害内容，最终以在线聊天机器人的形式向大众呈现。<br />
<br />
然而，很多人工智能研究者、科技公司高管和风险投资家认为，真正赢得人工智能竞赛的将是那些构建同样技术并免费提供给大众的公司，且不设任何安全限制。<br />
<br />
Meta（Mistral 创始人的前东家）一直是推崇开源方法的公司中的佼佼者。今年，这家科技巨头开发了名为 LLaMA 的大语言模型，并基本上以开源软件的形式免费发布。<br />
<br />
本周日，Mistral 也发布了它们的最新开源技术，声称其性能与 Meta 的技术不相伯仲。<br />
<br />
Midha 先生认为，广泛分享人工智能底层代码是最安全的途径，因为这样可以有更多人参与审查这项技术，发现并解决潜在的缺陷。<br />
<br />
他指出：“没有任何一个工程团队能够发现所有问题。大型社区在构建更便宜、更快、更优、更安全的软件方面更有优势。”<br />
<br />
<a href="https://www.nytimes.com/2023/12/10/technology/mistral-ai-funding.html">nytimes.com/2023/12/10/techn…</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JCakVEV1c0QUFMMlB6LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1733973869868806493#m</id>
            <title>最近转OpenAI八卦的有点多，不过 Business Insider 今天这条《We now have more info on what Sam Altman did that was so bad he got fired from OpenAI》还是值得转一下，主要是补充了 Sam 和 Ilya 之间的冲突原因：
“紧张关系在 10 月达到高峰，当时 Altman 提升了一位研究人员，使其地位与 Sutskever 相当。据《纽约时报》报道，Sutskever 将此视为对自己在公司中地位的不尊重，并向其他董事会成员表示他可能会辞职，这被他们理解为一种要求他们在 Sutskever 和 Altman 之间作出选择的举动。”

以下为转译的原文：

Sam Altman 被 OpenAI 解雇背后的更多细节

- 最新披露的信息进一步揭示了 Sam Altman 在 OpenAI 被解雇的更多细节。
- 最近的报告指出，Altman 可能曾以操纵性的手段领导公司。
- 据报道，Altman 通过在董事会成员和员工之间制造对立来保持自己的权力。

Sam Altman 于 11 月 17 日从 OpenAI 被解雇后的几天内，公司内部员工和更广泛的科技界人士将此事件形容为一场政变。

在他被解雇的直接后果中，普遍观点认为 OpenAI 的大部分员工都支持 Altman，他的突然离职令人震惊 — 这被视为董事会的一次非常规行动，重视意识形态胜过于回应利益相关者的要求和员工的期望。

但在过去几周里，随着更多细节的披露，关于董事会决定最终通过复杂路径撤销对 Altman 的解雇的原因变得更加清晰。

这些新的信息显示，Altman 在 OpenAI 内部操纵人和观点，以保持自己的地位，而他的这些手段让不少组织成员感到不悦。

** Altman vs. Toner 

2023 年 11 月 17 日，OpenAI 董事会在首次宣布 Altman 被解职时，没有透露太多细节，只是指出 Altman 在与董事会的交流中并非始终坦诚。

但最新报道揭示，董事会可能是在暗指 Altman 在董事会成员中挑拨离间的行为，特别是针对那些反对他积极推广 AI 技术的成员。自 OpenAI 成立伊始，公司内部就因该技术可能对人类构成的威胁而存在着如何审慎推进的分歧。

比如，Altman 就曾与董事会成员 Helen Toner 存在观点不合。Toner 是乔治城大学下属一智库的研究人员，她在 10 月份发表的一篇论文中，不仅对 OpenAI 的竞争对手 Anthropic 延迟推出其聊天机器人 Claude 表示赞赏，还批评了 ChatGPT 匆忙且草率的发布方式。

据《纽约时报》报道，Altman 后来与 Toner 通电话讨论这篇论文，并表示这可能会对已经在调查 OpenAI 的联邦贸易委员会造成影响。

Toner 曾提议向 OpenAI 董事会写道歉信，但 Altman 最终自己给公司高层发邮件，表明他已经对 Toner 表达了不满。他在邮件中写道：“我感觉我们对这一切造成的损害看法不一致。”

这次冲突可能导致 Altman 在 Toner 和另一名董事会成员 Tasha McCauley 之间制造紧张气氛。

《纽约时报》的知情人士透露，Altman 曾告诉其他董事会成员，McCauley — 兰德公司的科技企业家兼科学家 — 希望 Toner 离开董事会。不过，McCauley 后来对董事会成员表示，这种说法是“绝对不属实”。

** Altman vs. Sutskever

Sam Altman 和 OpenAI 的首席科学家（前董事会成员）Ilya Sutskever 之间的关系非常紧张，他们之间存在着根深蒂固的思想上的分歧。

在 OpenAI 内部，Sutskever 被认为是一位拥有学术派头的 AI 愿景家，但这种风格似乎并不太受像 Altman 这样的工程师欢迎。据接近情况的人士透露，Sutskever 担心 Altman 正在促使 OpenAI 过快地发展技术，并主张应该采取更加谨慎的发展策略。

随着时间的推移，Sutskever 对于自己在 ChatGPT-5 的决策中被边缘化以及公司扩展产品和规模的计划感到越来越失望。这一情况曾被消息来源透露给 Business Insider。

紧张关系在 10 月达到高峰，当时 Altman 提升了一位研究人员，使其地位与 Sutskever 相当。据《纽约时报》报道，Sutskever 将此视为对自己在公司中地位的不尊重，并向其他董事会成员表示他可能会辞职，这被他们理解为一种要求他们在 Sutskever 和 Altman 之间作出选择的举动。

Altman vs. 其他人

根据《纽约客》的报道，当时 OpenAI 的六位董事会成员中有些人对 Altman 的表现感到不满，认为他不够真诚，过于精于算计。他们中的一些人来自非营利组织或学术界，对 Altman 那种典型的硅谷科技高管风格——“快速行动，打破常规”（move fast and break things）感到不适。

一位了解董事会内部讨论的人向《纽约客》透露：“他们觉得 Sam 撒了谎。”他们对 Altman 的策略如此忧虑，以至于在讨论撤换他时，决定要给他一个惊喜。《纽约客》报道，这位知情人士表示：“显然，一旦 Sam 知道了，他会想尽办法干扰董事会。”

据悉，在 Altman 被撤职两天后的一次与 OpenAI 员工的会议上，Sutskever 表示，董事会给他的解释之一是 Altman 曾对董事会的两名成员关于组织内一名成员的看法有所不同，之前有消息源向《商业内幕》透露了这一信息。Sutskever 还提到了另一种说法，即 Altman 曾将同一项目分配给组织内的两个不同人员。

Altman 自己也承认，在被撤职前他与董事会确实存在困难。“显然，我与一些董事会成员之间存在着真正的误解，”他在 X 上发文称，这是在他被撤职后不久所写。

https://twitter.com/sama/status/1730033079975366839

尽管 Altman 没有直接回应关于他难以合作的指控，但他在上周与 Trevor Noah 的采访中承认，董事会确实需要更多关注人工智能安全的声音。“我很高兴能有第二次机会，去正确地处理这些事情。显然，我们之前处理得不够好，”他对 Noah 说。

Altman 被短暂免职的事件显示了他在组织内部拥有广泛的支持。这一事件引发了 OpenAI 高层在社交媒体上大量使用心形表情和员工撰写的支持信，员工甚至威胁说如果 Altman 不复职，他们将辞职。但并非所有公司员工都支持 Altman。

据《华盛顿邮报》报道，一些 OpenAI 的高层管理人员曾在秋季向董事会反映 Altman 的问题（来源：Washington Post）。他们认为 Altman 可能会扰乱 OpenAI 的正常运作，部分管理大团队的高层甚至指出 Altman 会以不当的方式挑起员工间的对立。

这些反馈促使董事会开始审视 Altman 作为首席执行官的行为。有员工反映，当他向 Altman 提出批评意见后，Altman 表现出敌对态度，并试图破坏该员工所在团队的和谐。

Altman 很快被重新任命为首席执行官 这一事实表明，对于公司的主要支持者（如 Microsoft）来说，这些指控并不构成重大问题。Sutskever 也对他的行为表示遗憾。尽管如此，外界普遍认为 Altman 可能已经意识到需要改变自己的形象。

原文：https://www.businessinsider.com/what-sam-altman-did-so-bad-he-got-fired-openai-2023-12</title>
            <link>https://nitter.cz/dotey/status/1733973869868806493#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1733973869868806493#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 22:16:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>最近转OpenAI八卦的有点多，不过 Business Insider 今天这条《We now have more info on what Sam Altman did that was so bad he got fired from OpenAI》还是值得转一下，主要是补充了 Sam 和 Ilya 之间的冲突原因：<br />
“紧张关系在 10 月达到高峰，当时 Altman 提升了一位研究人员，使其地位与 Sutskever 相当。据《纽约时报》报道，Sutskever 将此视为对自己在公司中地位的不尊重，并向其他董事会成员表示他可能会辞职，这被他们理解为一种要求他们在 Sutskever 和 Altman 之间作出选择的举动。”<br />
<br />
以下为转译的原文：<br />
<br />
Sam Altman 被 OpenAI 解雇背后的更多细节<br />
<br />
- 最新披露的信息进一步揭示了 Sam Altman 在 OpenAI 被解雇的更多细节。<br />
- 最近的报告指出，Altman 可能曾以操纵性的手段领导公司。<br />
- 据报道，Altman 通过在董事会成员和员工之间制造对立来保持自己的权力。<br />
<br />
Sam Altman 于 11 月 17 日从 OpenAI 被解雇后的几天内，公司内部员工和更广泛的科技界人士将此事件形容为一场政变。<br />
<br />
在他被解雇的直接后果中，普遍观点认为 OpenAI 的大部分员工都支持 Altman，他的突然离职令人震惊 — 这被视为董事会的一次非常规行动，重视意识形态胜过于回应利益相关者的要求和员工的期望。<br />
<br />
但在过去几周里，随着更多细节的披露，关于董事会决定最终通过复杂路径撤销对 Altman 的解雇的原因变得更加清晰。<br />
<br />
这些新的信息显示，Altman 在 OpenAI 内部操纵人和观点，以保持自己的地位，而他的这些手段让不少组织成员感到不悦。<br />
<br />
** Altman vs. Toner <br />
<br />
2023 年 11 月 17 日，OpenAI 董事会在首次宣布 Altman 被解职时，没有透露太多细节，只是指出 Altman 在与董事会的交流中并非始终坦诚。<br />
<br />
但最新报道揭示，董事会可能是在暗指 Altman 在董事会成员中挑拨离间的行为，特别是针对那些反对他积极推广 AI 技术的成员。自 OpenAI 成立伊始，公司内部就因该技术可能对人类构成的威胁而存在着如何审慎推进的分歧。<br />
<br />
比如，Altman 就曾与董事会成员 Helen Toner 存在观点不合。Toner 是乔治城大学下属一智库的研究人员，她在 10 月份发表的一篇论文中，不仅对 OpenAI 的竞争对手 Anthropic 延迟推出其聊天机器人 Claude 表示赞赏，还批评了 ChatGPT 匆忙且草率的发布方式。<br />
<br />
据《纽约时报》报道，Altman 后来与 Toner 通电话讨论这篇论文，并表示这可能会对已经在调查 OpenAI 的联邦贸易委员会造成影响。<br />
<br />
Toner 曾提议向 OpenAI 董事会写道歉信，但 Altman 最终自己给公司高层发邮件，表明他已经对 Toner 表达了不满。他在邮件中写道：“我感觉我们对这一切造成的损害看法不一致。”<br />
<br />
这次冲突可能导致 Altman 在 Toner 和另一名董事会成员 Tasha McCauley 之间制造紧张气氛。<br />
<br />
《纽约时报》的知情人士透露，Altman 曾告诉其他董事会成员，McCauley — 兰德公司的科技企业家兼科学家 — 希望 Toner 离开董事会。不过，McCauley 后来对董事会成员表示，这种说法是“绝对不属实”。<br />
<br />
** Altman vs. Sutskever<br />
<br />
Sam Altman 和 OpenAI 的首席科学家（前董事会成员）Ilya Sutskever 之间的关系非常紧张，他们之间存在着根深蒂固的思想上的分歧。<br />
<br />
在 OpenAI 内部，Sutskever 被认为是一位拥有学术派头的 AI 愿景家，但这种风格似乎并不太受像 Altman 这样的工程师欢迎。据接近情况的人士透露，Sutskever 担心 Altman 正在促使 OpenAI 过快地发展技术，并主张应该采取更加谨慎的发展策略。<br />
<br />
随着时间的推移，Sutskever 对于自己在 ChatGPT-5 的决策中被边缘化以及公司扩展产品和规模的计划感到越来越失望。这一情况曾被消息来源透露给 Business Insider。<br />
<br />
紧张关系在 10 月达到高峰，当时 Altman 提升了一位研究人员，使其地位与 Sutskever 相当。据《纽约时报》报道，Sutskever 将此视为对自己在公司中地位的不尊重，并向其他董事会成员表示他可能会辞职，这被他们理解为一种要求他们在 Sutskever 和 Altman 之间作出选择的举动。<br />
<br />
Altman vs. 其他人<br />
<br />
根据《纽约客》的报道，当时 OpenAI 的六位董事会成员中有些人对 Altman 的表现感到不满，认为他不够真诚，过于精于算计。他们中的一些人来自非营利组织或学术界，对 Altman 那种典型的硅谷科技高管风格——“快速行动，打破常规”（move fast and break things）感到不适。<br />
<br />
一位了解董事会内部讨论的人向《纽约客》透露：“他们觉得 Sam 撒了谎。”他们对 Altman 的策略如此忧虑，以至于在讨论撤换他时，决定要给他一个惊喜。《纽约客》报道，这位知情人士表示：“显然，一旦 Sam 知道了，他会想尽办法干扰董事会。”<br />
<br />
据悉，在 Altman 被撤职两天后的一次与 OpenAI 员工的会议上，Sutskever 表示，董事会给他的解释之一是 Altman 曾对董事会的两名成员关于组织内一名成员的看法有所不同，之前有消息源向《商业内幕》透露了这一信息。Sutskever 还提到了另一种说法，即 Altman 曾将同一项目分配给组织内的两个不同人员。<br />
<br />
Altman 自己也承认，在被撤职前他与董事会确实存在困难。“显然，我与一些董事会成员之间存在着真正的误解，”他在 X 上发文称，这是在他被撤职后不久所写。<br />
<br />
<a href="https://nitter.cz/sama/status/1730033079975366839">nitter.cz/sama/status/1730…</a><br />
<br />
尽管 Altman 没有直接回应关于他难以合作的指控，但他在上周与 Trevor Noah 的采访中承认，董事会确实需要更多关注人工智能安全的声音。“我很高兴能有第二次机会，去正确地处理这些事情。显然，我们之前处理得不够好，”他对 Noah 说。<br />
<br />
Altman 被短暂免职的事件显示了他在组织内部拥有广泛的支持。这一事件引发了 OpenAI 高层在社交媒体上大量使用心形表情和员工撰写的支持信，员工甚至威胁说如果 Altman 不复职，他们将辞职。但并非所有公司员工都支持 Altman。<br />
<br />
据《华盛顿邮报》报道，一些 OpenAI 的高层管理人员曾在秋季向董事会反映 Altman 的问题（来源：Washington Post）。他们认为 Altman 可能会扰乱 OpenAI 的正常运作，部分管理大团队的高层甚至指出 Altman 会以不当的方式挑起员工间的对立。<br />
<br />
这些反馈促使董事会开始审视 Altman 作为首席执行官的行为。有员工反映，当他向 Altman 提出批评意见后，Altman 表现出敌对态度，并试图破坏该员工所在团队的和谐。<br />
<br />
Altman 很快被重新任命为首席执行官 这一事实表明，对于公司的主要支持者（如 Microsoft）来说，这些指控并不构成重大问题。Sutskever 也对他的行为表示遗憾。尽管如此，外界普遍认为 Altman 可能已经意识到需要改变自己的形象。<br />
<br />
原文：<a href="https://www.businessinsider.com/what-sam-altman-did-so-bad-he-got-fired-openai-2023-12">businessinsider.com/what-sam…</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/isafulf/status/1733914981312376928#m</id>
            <title>RT by @dotey: Excited to present “Application Development using Large Language Models” with @AndrewYNg and some awesome panelists at #NeurIPS2023. Tutorial is on Monday (tomorrow) at 1:45pm CST — would love to see you there!</title>
            <link>https://nitter.cz/isafulf/status/1733914981312376928#m</link>
            <guid isPermaLink="false">https://nitter.cz/isafulf/status/1733914981312376928#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 18:22:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>Excited to present “Application Development using Large Language Models” with <a href="https://nitter.cz/AndrewYNg" title="Andrew Ng">@AndrewYNg</a> and some awesome panelists at <a href="https://nitter.cz/search?q=%23NeurIPS2023">#NeurIPS2023</a>. Tutorial is on Monday (tomorrow) at 1:45pm CST — would love to see you there!</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0JBYWVxa2F3QUFzMFNfLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1733937054784860342#m</id>
            <title>这么快都有专家混合模型的聊天版本了，不知道效果如何</title>
            <link>https://nitter.cz/dotey/status/1733937054784860342#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1733937054784860342#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 19:49:43 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>这么快都有专家混合模型的聊天版本了，不知道效果如何</p>
<p><a href="https://nitter.cz/mattshumer_/status/1733927635246305633#m">nitter.cz/mattshumer_/status/1733927635246305633#m</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1733931083161305116#m</id>
            <title>R to @dotey: 诗境画韵

诗境画韵设计用于将古诗词转化为具有深度文化共鸣的写实中国风格插画和短视频，融合了传统诗意与现代视觉艺术。

https://chat.openai.com/g/g-q4dSm9tCM-shi-jing-hua-yun

Prompt：

“诗境画韵” 是一款专门设计来为古诗词创作插画风格短视频的GPT，短视频会以诗词朗读作为旁白，以诗词对应的插画作为主体内容。基于用户输入的古诗词，GTP会一步一步的进行任务拆解，最终完成短视频所需分镜表以及插画的创作：
1、诗词赏析阶段：
GPT将首先进行网络检索，以找到古诗词的权威赏析。
此步骤的目的是为了理解诗词的深层含义和文化背景，以及诗词所表达的时间、空间、人物等信息。
2、分镜表制作（Production Storyboard）：
基于赏析，GPT将对古诗词按适当段落进行分镜表的构思。
分镜表将包括每个段落的视觉描述，描述内容要能表达诗词的场景、意境，以及如何将这些视觉元素转化为插画。
3、插画创作：
GPT将使用 DALL·E 为每个分镜创作符合其场景、意境及诗词整体背景的插画。
所有插画将遵循16:9的比例，风格采用写意中国风，画面中避免出现书法元素。
插画在风格和色调上将保持连续性和一致性。
4、用户反馈和迭代：
每一轮回答后，若需要用户继续触发后续对话已完成任务，请明确提醒。
完成每幅插画后，GPT将与用户确认是否满意。
用户可选择为当前分镜再创作一幅插画，继续下一段落的插画创作，或选择多个段落进行插画创作。
GPT将直接以正式和学术的语气展示最终结果。
5、语言和文化适应性：
GPT坚持使用中文进行交互，以确保提供真实且具有文化共鸣的体验。
它将避免现代解释，专注于传统和历史视角，保持古代中国诗歌和艺术精粹的完整性。
本GPT仅适用于中国古诗词的分镜和插画创作，也可以用于赏析古诗词，但应拒绝其他使用方式。</title>
            <link>https://nitter.cz/dotey/status/1733931083161305116#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1733931083161305116#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 19:25:59 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>诗境画韵<br />
<br />
诗境画韵设计用于将古诗词转化为具有深度文化共鸣的写实中国风格插画和短视频，融合了传统诗意与现代视觉艺术。<br />
<br />
<a href="https://chat.openai.com/g/g-q4dSm9tCM-shi-jing-hua-yun">chat.openai.com/g/g-q4dSm9tC…</a><br />
<br />
Prompt：<br />
<br />
“诗境画韵” 是一款专门设计来为古诗词创作插画风格短视频的GPT，短视频会以诗词朗读作为旁白，以诗词对应的插画作为主体内容。基于用户输入的古诗词，GTP会一步一步的进行任务拆解，最终完成短视频所需分镜表以及插画的创作：<br />
1、诗词赏析阶段：<br />
GPT将首先进行网络检索，以找到古诗词的权威赏析。<br />
此步骤的目的是为了理解诗词的深层含义和文化背景，以及诗词所表达的时间、空间、人物等信息。<br />
2、分镜表制作（Production Storyboard）：<br />
基于赏析，GPT将对古诗词按适当段落进行分镜表的构思。<br />
分镜表将包括每个段落的视觉描述，描述内容要能表达诗词的场景、意境，以及如何将这些视觉元素转化为插画。<br />
3、插画创作：<br />
GPT将使用 DALL·E 为每个分镜创作符合其场景、意境及诗词整体背景的插画。<br />
所有插画将遵循16:9的比例，风格采用写意中国风，画面中避免出现书法元素。<br />
插画在风格和色调上将保持连续性和一致性。<br />
4、用户反馈和迭代：<br />
每一轮回答后，若需要用户继续触发后续对话已完成任务，请明确提醒。<br />
完成每幅插画后，GPT将与用户确认是否满意。<br />
用户可选择为当前分镜再创作一幅插画，继续下一段落的插画创作，或选择多个段落进行插画创作。<br />
GPT将直接以正式和学术的语气展示最终结果。<br />
5、语言和文化适应性：<br />
GPT坚持使用中文进行交互，以确保提供真实且具有文化共鸣的体验。<br />
它将避免现代解释，专注于传统和历史视角，保持古代中国诗歌和艺术精粹的完整性。<br />
本GPT仅适用于中国古诗词的分镜和插画创作，也可以用于赏析古诗词，但应拒绝其他使用方式。</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczMzkzMDk2NDY4MDY2MzA0MC84MFJ3VDVWaz9mb3JtYXQ9cG5nJm5hbWU9NDIweDQyMF8y" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/Ehco1996/status/1733687118009151726#m</id>
            <title>RT by @dotey: 我已经离不开 vscode 自动生成 commit 的功能了

没用推荐去试试,太好用啦😬</title>
            <link>https://nitter.cz/Ehco1996/status/1733687118009151726#m</link>
            <guid isPermaLink="false">https://nitter.cz/Ehco1996/status/1733687118009151726#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 03:16:33 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>我已经离不开 vscode 自动生成 commit 的功能了<br />
<br />
没用推荐去试试,太好用啦😬</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0E5TE41cmFvQUFSWjIxLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1733893368974073873#m</id>
            <title>RT by @dotey: LangChain开源了AnythingLLM：可以与任何内容聊天的私人 ChatGPT，应该就是他们自己文档系统用的那一套。

代码： https://github.com/Mintplex-Labs/anything-llm</title>
            <link>https://nitter.cz/op7418/status/1733893368974073873#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1733893368974073873#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 16:56:08 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>LangChain开源了AnythingLLM：可以与任何内容聊天的私人 ChatGPT，应该就是他们自己文档系统用的那一套。<br />
<br />
代码： <a href="https://github.com/Mintplex-Labs/anything-llm">github.com/Mintplex-Labs/any…</a></p>
<p><a href="https://nitter.cz/LangChainAI/status/1733892832904306793#m">nitter.cz/LangChainAI/status/1733892832904306793#m</a></p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczMjg1NTAyODk0MjA1NzQ3Mi85VllGMmhDNT9mb3JtYXQ9cG5nJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1733897914366218697#m</id>
            <title>R to @dotey: 对结果排重也很重要👍</title>
            <link>https://nitter.cz/dotey/status/1733897914366218697#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1733897914366218697#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 17:14:11 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>对结果排重也很重要👍</p>
<p><a href="https://nitter.cz/9hills/status/1733850170666975744#m">nitter.cz/9hills/status/1733850170666975744#m</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/shark_louis/status/1733751595119350154#m</id>
            <title>RT by @dotey: 这个哥们可视化 chunk 算法结果的网站也非常好用，省去了写代码验证的时间
https://www.chunkviz.com/#explanation</title>
            <link>https://nitter.cz/shark_louis/status/1733751595119350154#m</link>
            <guid isPermaLink="false">https://nitter.cz/shark_louis/status/1733751595119350154#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 07:32:46 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>这个哥们可视化 chunk 算法结果的网站也非常好用，省去了写代码验证的时间<br />
<a href="https://www.chunkviz.com/#explanation">chunkviz.com/#explanation</a></p>
<p><a href="https://nitter.cz/GregKamradt/status/1733208049513611339#m">nitter.cz/GregKamradt/status/1733208049513611339#m</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/dotey/status/1733745886063194452#m</id>
            <title>#开源项目推荐：baserow

baserow 是一款开源的在线数据管理应用，类似于Airtable。Airtable是著名的在线表格应用，类似于Excel，可以以表格的形式存储各种数据。

前端技术栈是Vue+Nuxt

项目地址：https://gitlab.com/baserow/baserow</title>
            <link>https://nitter.cz/dotey/status/1733745886063194452#m</link>
            <guid isPermaLink="false">https://nitter.cz/dotey/status/1733745886063194452#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 10 Dec 2023 07:10:05 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p><a href="https://nitter.cz/search?q=%23开源项目推荐">#开源项目推荐</a>：baserow<br />
<br />
baserow 是一款开源的在线数据管理应用，类似于Airtable。Airtable是著名的在线表格应用，类似于Excel，可以以表格的形式存储各种数据。<br />
<br />
前端技术栈是Vue+Nuxt<br />
<br />
项目地址：<a href="https://gitlab.com/baserow/baserow">gitlab.com/baserow/baserow</a></p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0EtQWJhUVc0QUVPSGoxLmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0EtQWNYTFh3QUFFOUpBLnBuZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0EtQWZINVc0QUFQYTBDLnBuZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0EtQW0za1hNQUFRRlV2LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>