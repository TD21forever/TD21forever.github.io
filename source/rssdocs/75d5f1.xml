<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>豌豆花下猫 / @chinesehuazhou</title>
        <link>https://nitter.cz/chinesehuazhou</link>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1739087735523258553#m</id>
            <title>授人予鱼，授人予渔。我的周刊从很多信息源中取材，其它周刊是很重要的来源。先给大家分享这类信息密度高+更新频率固定的信源，后续还会分享其它。如果你知道同类的内容，欢迎补充！</title>
            <link>https://nitter.cz/chinesehuazhou/status/1739087735523258553#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1739087735523258553#m</guid>
            <pubDate></pubDate>
            <updated>Mon, 25 Dec 2023 00:56:41 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>授人予鱼，授人予渔。我的周刊从很多信息源中取材，其它周刊是很重要的来源。先给大家分享这类信息密度高+更新频率固定的信源，后续还会分享其它。如果你知道同类的内容，欢迎补充！</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0NKN0VxemFnQUFPczRKLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746241994117466#m</id>
            <title>R to @chinesehuazhou: 欢迎关注 Python 潮流周刊！

本期周刊全文：https://pythoncat.top/posts/2023-12-23-weekly</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746241994117466#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746241994117466#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:43 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>欢迎关注 Python 潮流周刊！<br />
<br />
本期周刊全文：<a href="https://pythoncat.top/posts/2023-12-23-weekly">pythoncat.top/posts/2023-12-…</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746238844186672#m</id>
            <title>R to @chinesehuazhou: 3、Requests vs Httpx vs Aiohttp 该选哪一个呢？ https://www.youtube.com/watch?v=OPyoXx0yA0I

视频比较了使用 requests、httpx 和 aiohttp 的情况，讨论了异步请求的使用等话题。</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746238844186672#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746238844186672#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:42 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>3、Requests vs Httpx vs Aiohttp 该选哪一个呢？ <a href="https://www.youtube.com/watch?v=OPyoXx0yA0I">youtube.com/watch?v=OPyoXx0y…</a><br />
<br />
视频比较了使用 requests、httpx 和 aiohttp 的情况，讨论了异步请求的使用等话题。</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczODc0NjI0MjIwMzg2OTE4NC9Uc1ZPRnJ6RD9mb3JtYXQ9anBnJm5hbWU9ODAweDMyMF8x" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746235430097312#m</id>
            <title>R to @chinesehuazhou: 2、Episode #184：PyCoder's Weekly 的 2023 年总结 https://realpython.com/podcasts/rpp/184/

PyCoder's Weekly 是我长期在看的周刊，这期播客聊了它的一些总结性话题，比如点击量前 5 的链接、今年一些重要的新闻、今年的重要主题和趋势、有意思的项目，等等。</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746235430097312#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746235430097312#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:41 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>2、Episode #184：PyCoder's Weekly 的 2023 年总结 <a href="https://realpython.com/podcasts/rpp/184/">realpython.com/podcasts/rpp/…</a><br />
<br />
PyCoder's Weekly 是我长期在看的周刊，这期播客聊了它的一些总结性话题，比如点击量前 5 的链接、今年一些重要的新闻、今年的重要主题和趋势、有意思的项目，等等。</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczODE3MzIxMzg2MTk2MTcyOC9pSmtndzN6Xz9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746232296837190#m</id>
            <title>R to @chinesehuazhou: 🐢播客&amp;视频

1、PyConChina 2023 的演讲视频 https://space.bilibili.com/474764697/video

今年 PyConChina 活动的一部分视频已发布了，可在 B 站上观看。</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746232296837190#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746232296837190#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:40 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>🐢播客&amp;视频<br />
<br />
1、PyConChina 2023 的演讲视频 <a href="https://space.bilibili.com/474764697/video">space.bilibili.com/474764697…</a><br />
<br />
今年 PyConChina 活动的一部分视频已发布了，可在 B 站上观看。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746229096665280#m</id>
            <title>R to @chinesehuazhou: 10、Amphion：用于音频、音乐和语音生成的工具包 https://github.com/open-mmlab/Amphion

它的目标是提供一个平台来研究将任意输入转换为音频。已支持 TTS 文本转语音、SVC 歌声转换、TTA 文本到音频，支持广泛使用的神经声码器。（star 2.2K）</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746229096665280#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746229096665280#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:40 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>10、Amphion：用于音频、音乐和语音生成的工具包 <a href="https://github.com/open-mmlab/Amphion">github.com/open-mmlab/Amphio…</a><br />
<br />
它的目标是提供一个平台来研究将任意输入转换为音频。已支持 TTS 文本转语音、SVC 歌声转换、TTA 文本到音频，支持广泛使用的神经声码器。（star 2.2K）</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczNzg5MTM5NDM1Njc2MDU3Ni82TFFxVVIyVT9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746225908998429#m</id>
            <title>R to @chinesehuazhou: 9、project-based-learning：精选的基于项目的教程列表 https://github.com/practical-tutorials/project-based-learning

星星数超多的资源收集类项目，分不同编程语言和技术领域，收集了很多实战项目类的教程。（star 142K）</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746225908998429#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746225908998429#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:39 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>9、project-based-learning：精选的基于项目的教程列表 <a href="https://github.com/practical-tutorials/project-based-learning">github.com/practical-tutoria…</a><br />
<br />
星星数超多的资源收集类项目，分不同编程语言和技术领域，收集了很多实战项目类的教程。（star 142K）</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczNjk3MTI5ODk0ODIzOTM2MC8yamd6SHF4UD9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746222729728156#m</id>
            <title>R to @chinesehuazhou: 8、Qexo：快速、强大且漂亮的 Hexo 编辑器 https://github.com/Qexo/Qexo

Hexo 博客后台管理，自定义图床上传图片、在线页面管理、开放 API、一键更新、快速接入友情链接。（star 1.2K）</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746222729728156#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746222729728156#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>8、Qexo：快速、强大且漂亮的 Hexo 编辑器 <a href="https://github.com/Qexo/Qexo">github.com/Qexo/Qexo</a><br />
<br />
Hexo 博客后台管理，自定义图床上传图片、在线页面管理、开放 API、一键更新、快速接入友情链接。（star 1.2K）</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczODc0NjIyNjEyMjg1MDMwNC9HcUdEaTR3bT9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746219441336784#m</id>
            <title>R to @chinesehuazhou: 7、django-cast：基于 Django 和 Wagtail 的博客/播客项目 https://github.com/ephes/django-cast

使用 Django 快速搭建个人博客和播客网站，Wagtail 作为 CMS 可方便管理文章和播客节目。支持播放播客和视频，支持评论和垃圾邮件过滤，可自定义网站主题。</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746219441336784#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746219441336784#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:37 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>7、django-cast：基于 Django 和 Wagtail 的博客/播客项目 <a href="https://github.com/ephes/django-cast">github.com/ephes/django-cast</a><br />
<br />
使用 Django 快速搭建个人博客和播客网站，Wagtail 作为 CMS 可方便管理文章和播客节目。支持播放播客和视频，支持评论和垃圾邮件过滤，可自定义网站主题。</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczODc0NjIyMTM3OTA3NjA5Ni96bmstc09uVT9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746216190714347#m</id>
            <title>R to @chinesehuazhou: 6、Osprey：通过视觉指导微调实现对像素的理解 https://github.com/CircleRadon/Osprey

这是一个靠演示效果把我惊艳到的项目！直接看下方的演示图吧：</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746216190714347#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746216190714347#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:36 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>6、Osprey：通过视觉指导微调实现对像素的理解 <a href="https://github.com/CircleRadon/Osprey">github.com/CircleRadon/Ospre…</a><br />
<br />
这是一个靠演示效果把我惊艳到的项目！直接看下方的演示图吧：</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczNzAwMzM1MTY3MjU3ODA0OC9MNGFFZTgxNz9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746212789190830#m</id>
            <title>R to @chinesehuazhou: 5、TikTokDownloader: TikTok 和抖音数据采集工具 https://github.com/JoeanAmier/TikTokDownloader

基于 Requests 模块实现的数据采集工具，功能非常齐全！支持命令行模式、Web UI 模式和接口调用模式。（star 1.5K）（附：第 24 期分享过作者的小红书采集工具 XHS_Downloader）</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746212789190830#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746212789190830#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:36 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>5、TikTokDownloader: TikTok 和抖音数据采集工具 <a href="https://github.com/JoeanAmier/TikTokDownloader">github.com/JoeanAmier/TikTok…</a><br />
<br />
基于 Requests 模块实现的数据采集工具，功能非常齐全！支持命令行模式、Web UI 模式和接口调用模式。（star 1.5K）（附：第 24 期分享过作者的小红书采集工具 XHS_Downloader）</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczODE3MjA5MjM0MjgyMDg2NC9OUndlS0NlaT9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746209526059239#m</id>
            <title>R to @chinesehuazhou: 4、sqlmap：SQL 注入和渗透测试工具 https://github.com/sqlmapproject/sqlmap

可自动检测和利用 SQL 注入缺陷而入侵数据库。具有强大的检测引擎、数据库指纹识别、从数据库查询数据、访问底层文件系统、在操作系统上执行命令等。（star 29.4K）</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746209526059239#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746209526059239#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:35 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>4、sqlmap：SQL 注入和渗透测试工具 <a href="https://github.com/sqlmapproject/sqlmap">github.com/sqlmapproject/sql…</a><br />
<br />
可自动检测和利用 SQL 注入缺陷而入侵数据库。具有强大的检测引擎、数据库指纹识别、从数据库查询数据、访问底层文件系统、在操作系统上执行命令等。（star 29.4K）</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczODU4NDkzNDY0NDg1ODg4MS9sR0VmWFJTYz9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746206053146872#m</id>
            <title>R to @chinesehuazhou: 3、python-guide-for-javascript-engineers：开源电子书《JavaScript工程师的Python指南》 https://github.com/luckrnx09/python-guide-for-javascript-engineers

基于 abook 编写的电子书，涵盖了从环境安装到项目开发的方方面面。通过大量案例对比 JavaScript 和 Python 语言的异同，助 JavaScript 工程师快速掌握 Python。（投稿自@luckrnx09）</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746206053146872#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746206053146872#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:34 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>3、python-guide-for-javascript-engineers：开源电子书《JavaScript工程师的Python指南》 <a href="https://github.com/luckrnx09/python-guide-for-javascript-engineers">github.com/luckrnx09/python-…</a><br />
<br />
基于 abook 编写的电子书，涵盖了从环境安装到项目开发的方方面面。通过大量案例对比 JavaScript 和 Python 语言的异同，助 JavaScript 工程师快速掌握 Python。（投稿自@luckrnx09）</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczODc0NjIwOTMzMzA4NDE2MC9HS0V0Qm9CMz9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746202781552855#m</id>
            <title>R to @chinesehuazhou: 2、generative-ai-python：用 Google AI SDK，开发 Gemini 和 PaLM 应用 https://github.com/google/generative-ai-python

Google 推出的生成式 AI 开发工具，可快速基于 Gemini 和 PaLM 大模型开发 AI 应用。支持文本生成、多轮对话、嵌入等。</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746202781552855#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746202781552855#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:33 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>2、generative-ai-python：用 Google AI SDK，开发 Gemini 和 PaLM 应用 <a href="https://github.com/google/generative-ai-python">github.com/google/generative…</a><br />
<br />
Google 推出的生成式 AI 开发工具，可快速基于 Gemini 和 PaLM 大模型开发 AI 应用。支持文本生成、多轮对话、嵌入等。</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczNzAyMjMzMTQzNDc2NjMzNi9HeF9VV3ZNdD9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746199472279608#m</id>
            <title>R to @chinesehuazhou: 🐿️项目&amp;资源

1、feedi：打造个人的新闻聚合阅读器 https://github.com/facundoolano/feedi

想不想拥有个人定制化的内容阅读器？它支持解析 RSS 源、拉取 Mastodon 消息、阅读标记、本地文章阅读和预览、支持发送到 Kindle。（附：作者为什么以及如何开发这个项目 Reclaiming the Web with a Personal Reader）</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746199472279608#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746199472279608#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:32 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>🐿️项目&amp;资源<br />
<br />
1、feedi：打造个人的新闻聚合阅读器 <a href="https://github.com/facundoolano/feedi">github.com/facundoolano/feed…</a><br />
<br />
想不想拥有个人定制化的内容阅读器？它支持解析 RSS 源、拉取 Mastodon 消息、阅读标记、本地文章阅读和预览、支持发送到 Kindle。（附：作者为什么以及如何开发这个项目 Reclaiming the Web with a Personal Reader）</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczNzI3OTQ4MTM5MDE4NjQ5Ni8xclRCNWJ3RD9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746196204917112#m</id>
            <title>R to @chinesehuazhou: 10、从 Python 数据类中消除状态突变方法 https://rednafi.com/python/dataclasses_and_methods/

Python 使用`@dataclass` 装饰器来定义数据类，自动添加 `__init__`、`__repr__`、`__eq__` 等魔术方法。作者建议定义不可变的数据类，不用将它像普通类一样作变更属性的操作，如果在普通类中用`__repr__` 等方法，建议是手写实现。</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746196204917112#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746196204917112#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:32 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>10、从 Python 数据类中消除状态突变方法 <a href="https://rednafi.com/python/dataclasses_and_methods/">rednafi.com/python/dataclass…</a><br />
<br />
Python 使用`<a href="https://nitter.cz/dataclass" title="DataClass">@dataclass</a>` 装饰器来定义数据类，自动添加 `__init__`、`__repr__`、`__eq__` 等魔术方法。作者建议定义不可变的数据类，不用将它像普通类一样作变更属性的操作，如果在普通类中用`__repr__` 等方法，建议是手写实现。</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczNjU0MzAwOTE0MTkxMTU1Mi9mOG9wRjBNOD9mb3JtYXQ9anBnJm5hbWU9NDIweDQyMF8y" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746192992112988#m</id>
            <title>R to @chinesehuazhou: 9、Python 中的“key”参数的关键 https://www.thepythoncodingstack.com/p/the-key-to-the-key-parameter-in-python

你也许在 sorted() 和 list.sort() 函数中看到过“key”参数，除此之外，还有很多函数带有这个参数，比如 max() 和 min()，文章介绍了相关函数中对这个参数的用法</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746192992112988#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746192992112988#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:31 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>9、Python 中的“key”参数的关键 <a href="https://www.thepythoncodingstack.com/p/the-key-to-the-key-parameter-in-python">thepythoncodingstack.com/p/t…</a><br />
<br />
你也许在 sorted() 和 list.sort() 函数中看到过“key”参数，除此之外，还有很多函数带有这个参数，比如 max() 和 min()，文章介绍了相关函数中对这个参数的用法</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746189649158179#m</id>
            <title>R to @chinesehuazhou: 8、为什么 Python、Go 和 Rust 都不支持三元运算符？ https://pythoncat.top/posts/2023-04-03-condition

Python 不支持三元运算符，但它有一个很特殊的条件选择语法 ，为什么会这样设计呢？文章梳理了 Python 波折的语法设计故事，同时介绍了 Go 和 Rust 不谋而合的做法，让人思考什么才是编程语言中更好的语法设计？</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746189649158179#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746189649158179#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:30 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>8、为什么 Python、Go 和 Rust 都不支持三元运算符？ <a href="https://pythoncat.top/posts/2023-04-03-condition">pythoncat.top/posts/2023-04-…</a><br />
<br />
Python 不支持三元运算符，但它有一个很特殊的条件选择语法 ，为什么会这样设计呢？文章梳理了 Python 波折的语法设计故事，同时介绍了 Go 和 Rust 不谋而合的做法，让人思考什么才是编程语言中更好的语法设计？</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746186293776657#m</id>
            <title>R to @chinesehuazhou: 7、优化 Python 的 Flask、Django 和 FastAPI 程序 https://tonybaloney.github.io/posts/fine-tuning-wsgi-and-asgi-applications.html

文章介绍了一些配置 Web 服务器的最佳实践（涉及 Gunicorn、Uvicorn 和 Hypercorn）。针对 ASGI 和 WSGI 两类标准接口的差异，如何设置 worker 数和线程数，如何使用 Locust 等工具来作测试，不同 Web 开发框架用什么方案？</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746186293776657#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746186293776657#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:29 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>7、优化 Python 的 Flask、Django 和 FastAPI 程序 <a href="https://tonybaloney.github.io/posts/fine-tuning-wsgi-and-asgi-applications.html">tonybaloney.github.io/posts/…</a><br />
<br />
文章介绍了一些配置 Web 服务器的最佳实践（涉及 Gunicorn、Uvicorn 和 Hypercorn）。针对 ASGI 和 WSGI 两类标准接口的差异，如何设置 worker 数和线程数，如何使用 Locust 等工具来作测试，不同 Web 开发框架用什么方案？</p>
<img src="https://nitter.cz/pic/enc/Y2FyZF9pbWcvMTczNzM0MTEwMjI0MjU0NTY2NC9iS1NNTHFhMj9mb3JtYXQ9anBnJm5hbWU9ODAweDQxOQ==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/chinesehuazhou/status/1738746183026438587#m</id>
            <title>R to @chinesehuazhou: 6、Python 项目中的配置：没有魔法，只是必要的实践 https://robertrode.com/2023/10/02/configuration-in-python-applications-no-magic-just-necessary-practice.html

我们通常将可变或敏感的参数放到配置文件中，可以使用哪些方式呢？有 ini、json、toml、yaml 等文件，也有环境变量等方式。在什么时候做配置的初始化呢？测试时如何修改配置呢？文章分享了一些使用技巧。</title>
            <link>https://nitter.cz/chinesehuazhou/status/1738746183026438587#m</link>
            <guid isPermaLink="false">https://nitter.cz/chinesehuazhou/status/1738746183026438587#m</guid>
            <pubDate></pubDate>
            <updated>Sun, 24 Dec 2023 02:19:29 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>6、Python 项目中的配置：没有魔法，只是必要的实践 <a href="https://robertrode.com/2023/10/02/configuration-in-python-applications-no-magic-just-necessary-practice.html">robertrode.com/2023/10/02/co…</a><br />
<br />
我们通常将可变或敏感的参数放到配置文件中，可以使用哪些方式呢？有 ini、json、toml、yaml 等文件，也有环境变量等方式。在什么时候做配置的初始化呢？测试时如何修改配置呢？文章分享了一些使用技巧。</p>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>