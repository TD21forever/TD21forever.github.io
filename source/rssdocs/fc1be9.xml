<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>歸藏 / @op7418</title>
        <link>https://nitter.cz/op7418</link>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866539233579170#m</id>
            <title>R to @op7418: 之后我们还需要从Animatediff Loader节点的输入拉一个上下文节点（Context_options）出来，这是因为Animatediff的视频模型一次只能生成16帧的视频，如果我们想要生成更长的视频就需要把上一次生成的16帧变成输入的帧继续生成。
连接好上下文和Animatediff模型加载节点后就是这样子的。</title>
            <link>https://nitter.cz/op7418/status/1729866539233579170#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866539233579170#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:56 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>之后我们还需要从Animatediff Loader节点的输入拉一个上下文节点（Context_options）出来，这是因为Animatediff的视频模型一次只能生成16帧的视频，如果我们想要生成更长的视频就需要把上一次生成的16帧变成输入的帧继续生成。<br />
连接好上下文和Animatediff模型加载节点后就是这样子的。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNGNYLWE4QUE2NWFiLmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNGNzcWFjQUFPVXhtLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866524037665277#m</id>
            <title>R to @op7418: 然后我们来看一下视频生成的部分其实视频生成我们只需要在 KSampler和 Load Checkpoint 之间增加一个Animatediff的动画节点就行，你可以右键在Animatediff的分类里面找到这个节点，也可以鼠标双击搜索节点名称来找到对应的节点。</title>
            <link>https://nitter.cz/op7418/status/1729866524037665277#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866524037665277#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:53 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>然后我们来看一下视频生成的部分其实视频生成我们只需要在 KSampler和 Load Checkpoint 之间增加一个Animatediff的动画节点就行，你可以右键在Animatediff的分类里面找到这个节点，也可以鼠标双击搜索节点名称来找到对应的节点。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNGJ6MWFZQUEyV3B0LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866513572835691#m</id>
            <title>R to @op7418: 最后我们教一下怎么使用别人的工作流，你在获得别人的工作流之后一般是一个 Json 文件或者一张保存着工作流的图片，直接把文件拖到界面上就可以打开了。或者你也可以点击右边的这个Load 来选择对应的文件加载，右边的 Save 按钮可以保存你现在的工作流。</title>
            <link>https://nitter.cz/op7418/status/1729866513572835691#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866513572835691#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:50 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>最后我们教一下怎么使用别人的工作流，你在获得别人的工作流之后一般是一个 Json 文件或者一张保存着工作流的图片，直接把文件拖到界面上就可以打开了。或者你也可以点击右边的这个Load 来选择对应的文件加载，右边的 Save 按钮可以保存你现在的工作流。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNGJMc2JBQUVueEx1LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866503523373448#m</id>
            <title>R to @op7418: 之后我们给VAE Decode节点输出的 IMAGE一个图像预览节点（Preview Image）。

到这里普通的图像生成流程就结束了，你可以点击 Queue Prompt 来试试自己生成的图片。</title>
            <link>https://nitter.cz/op7418/status/1729866503523373448#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866503523373448#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:48 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>之后我们给VAE Decode节点输出的 IMAGE一个图像预览节点（Preview Image）。<br />
<br />
到这里普通的图像生成流程就结束了，你可以点击 Queue Prompt 来试试自己生成的图片。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNGFtY2FZQUFLZWZxLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866493805183079#m</id>
            <title>R to @op7418: 之后来看一下KSampler的输出触点，这里我们需要一个 VAE 解码的节点。也就是VAE Decode，然后我们发现VAE Decode还需要连接一下 VAE 的模型，这里我们可以直接连接 Load Checkpoint 这个节点的 VAE 触点就行。他会使用 CKPT 模型自带的 VAE 。</title>
            <link>https://nitter.cz/op7418/status/1729866493805183079#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866493805183079#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:46 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>之后来看一下KSampler的输出触点，这里我们需要一个 VAE 解码的节点。也就是VAE Decode，然后我们发现VAE Decode还需要连接一下 VAE 的模型，这里我们可以直接连接 Load Checkpoint 这个节点的 VAE 触点就行。他会使用 CKPT 模型自带的 VAE 。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNGFDN2FFQUFRMm5tLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866483705291193#m</id>
            <title>R to @op7418: 接下来我们发现KSampler输入的触点还剩一个latent image没有被连接，那这里我们需要连接一个Empty Latent Image节点来控制生成图片的大小和数量。</title>
            <link>https://nitter.cz/op7418/status/1729866483705291193#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866483705291193#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:43 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>接下来我们发现KSampler输入的触点还剩一个latent image没有被连接，那这里我们需要连接一个Empty Latent Image节点来控制生成图片的大小和数量。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFpjbWE0QUVzcUZuLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866473487896981#m</id>
            <title>R to @op7418: 然后我们继续从Load Checkpoint节点中链接 CLIP 的节点，选择CLIP Text Encode （Prompt）这个节点就可以了，这里的提示词节点是不分正反的。

提示词的正反取决于CLIP Text Encode这个节点输出链接的是Load Checkpoint节点的positive还是negative，positive的就是正向提示词，连接negative的就是反向</title>
            <link>https://nitter.cz/op7418/status/1729866473487896981#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866473487896981#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:41 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>然后我们继续从Load Checkpoint节点中链接 CLIP 的节点，选择CLIP Text Encode （Prompt）这个节点就可以了，这里的提示词节点是不分正反的。<br />
<br />
提示词的正反取决于CLIP Text Encode这个节点输出链接的是Load Checkpoint节点的positive还是negative，positive的就是正向提示词，连接negative的就是反向</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFkxTmFVQVF0VnI3LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866463002145092#m</id>
            <title>R to @op7418: 接下来的节点我们可以用刚才直接鼠标右键的方式添加也可以，鼠标选中输出点的 MODEL 拖出一条线去松手就能看到这个点可以链接的节点了。我们在里面选择 KSampler 也就是采样器节点。

如果你对 WebUI 熟悉的话可以发现采样器节点的很多选项都很熟悉比如 Steps、 CFG 、采样器名称等。</title>
            <link>https://nitter.cz/op7418/status/1729866463002145092#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866463002145092#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:38 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>接下来的节点我们可以用刚才直接鼠标右键的方式添加也可以，鼠标选中输出点的 MODEL 拖出一条线去松手就能看到这个点可以链接的节点了。我们在里面选择 KSampler 也就是采样器节点。<br />
<br />
如果你对 WebUI 熟悉的话可以发现采样器节点的很多选项都很熟悉比如 Steps、 CFG 、采样器名称等。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFg5Y2JNQUE4V2hnLmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFlRdGFVQUEwQXdlLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866447898472923#m</id>
            <title>R to @op7418: 然后我们看一下节点的结构，一般一个节点主要有三部分构成左边的输入触点，Load Checkpoint 这个节点没有输入触点，右边的输出触点，这个节点上就是右边的 Model Clip 和 VAE 三个。

还有就是节点中间的选项部分，Load Checkpoint这里就是用来选择 CKPT 模型的。</title>
            <link>https://nitter.cz/op7418/status/1729866447898472923#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866447898472923#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:35 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>然后我们看一下节点的结构，一般一个节点主要有三部分构成左边的输入触点，Load Checkpoint 这个节点没有输入触点，右边的输出触点，这个节点上就是右边的 Model Clip 和 VAE 三个。<br />
<br />
还有就是节点中间的选项部分，Load Checkpoint这里就是用来选择 CKPT 模型的。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFhZb2FzQUVGSG16LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866438146687337#m</id>
            <title>R to @op7418: 首先我们需要一个加载 Checkpoint 模型的节点，鼠标右键选择 Add Node 然后选择 loaders 分类里面的 Load Checkpoint 。</title>
            <link>https://nitter.cz/op7418/status/1729866438146687337#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866438146687337#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:32 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>首先我们需要一个加载 Checkpoint 模型的节点，鼠标右键选择 Add Node 然后选择 loaders 分类里面的 Load Checkpoint 。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFd4cWFjQU0zMk94LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866428088787400#m</id>
            <title>R to @op7418: 现在我们Ctrl + A全选这些节点都删掉，重新自己搭建一个图片生成流程顺便熟悉一下ComfyUI的操作和一些概念。

ComfyUI 和 WebUI 根本不同就是节点，Stable Diffusion 的每个部分都变成了对应的节点这意味着你可以自由组合你的工作流，只选择你需要的节点。</title>
            <link>https://nitter.cz/op7418/status/1729866428088787400#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866428088787400#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:30 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>现在我们Ctrl + A全选这些节点都删掉，重新自己搭建一个图片生成流程顺便熟悉一下ComfyUI的操作和一些概念。<br />
<br />
ComfyUI 和 WebUI 根本不同就是节点，Stable Diffusion 的每个部分都变成了对应的节点这意味着你可以自由组合你的工作流，只选择你需要的节点。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866423265263903#m</id>
            <title>R to @op7418: 运行的时候就会发现，ComfyUI 在运行到对应节点的时候那个节点会有个绿色的描边，同时ComfyUI还有一个特性就是再重新运行的时候他只会运行发生更改的节点，如果节点内容没有变化就不会重新运行，这样会节省很多时间。</title>
            <link>https://nitter.cz/op7418/status/1729866423265263903#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866423265263903#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:29 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>运行的时候就会发现，ComfyUI 在运行到对应节点的时候那个节点会有个绿色的描边，同时ComfyUI还有一个特性就是再重新运行的时候他只会运行发生更改的节点，如果节点内容没有变化就不会重新运行，这样会节省很多时间。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFY3aGJVQUFzRzFCLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866414406996248#m</id>
            <title>R to @op7418: 启动服务之后我们开始正式的教程部分，教大家搭建一个基础的图像生成工作流：
点击点链接之后经过一个中转页面我们就可以看到熟悉的 ComfyUI 界面了，默认页面会有一个已经准备好的工作流，我们可以点击右边的 Queue Prompt 运行一下试试。</title>
            <link>https://nitter.cz/op7418/status/1729866414406996248#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866414406996248#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:27 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>启动服务之后我们开始正式的教程部分，教大家搭建一个基础的图像生成工作流：<br />
点击点链接之后经过一个中转页面我们就可以看到熟悉的 ComfyUI 界面了，默认页面会有一个已经准备好的工作流，我们可以点击右边的 Queue Prompt 运行一下试试。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866409721864537#m</id>
            <title>R to @op7418: 然后就可以启动我们的笔记了，点击笔记前的三角图标就行。（这里注意不使用的时候需要关掉项目。每个人每个月就 30 小时免费 GPU 时间。）

然后就是等待运行，直到出现下图中的链接就是完成了，点击链接就可以了。</title>
            <link>https://nitter.cz/op7418/status/1729866409721864537#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866409721864537#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:26 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>然后就可以启动我们的笔记了，点击笔记前的三角图标就行。（这里注意不使用的时候需要关掉项目。每个人每个月就 30 小时免费 GPU 时间。）<br />
<br />
然后就是等待运行，直到出现下图中的链接就是完成了，点击链接就可以了。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFV1T2FrQUFja1lnLmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFZHamJjQUFTcjRYLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866392051359942#m</id>
            <title>R to @op7418: 然后在导入的笔记里面找到下图中 ngrok_token 这个字段将“YOUR_NGROK”替换为你的 Token 。

然后我们来调整一下我们的环境配置，在页面右侧的 Notebook options 中选择 GPUT4X2 、 Python 、 No persistence 、Always use latest environment 和 Internet on。</title>
            <link>https://nitter.cz/op7418/status/1729866392051359942#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866392051359942#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:21 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>然后在导入的笔记里面找到下图中 ngrok_token 这个字段将“YOUR_NGROK”替换为你的 Token 。<br />
<br />
然后我们来调整一下我们的环境配置，在页面右侧的 Notebook options 中选择 GPUT4X2 、 Python 、 No persistence 、Always use latest environment 和 Internet on。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFRzb2F3QUVZbGFyLmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFVGM2FzQUFnRjVaLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866374414217228#m</id>
            <title>R to @op7418: 进入到创建笔记的页面后，我们点击 Flie 按钮选择 Improt Notebook 来导入笔记。笔记可以从这里下载：https://pan.quark.cn/s/57005d867688

接下来我们需要去注册一个 https://ngrok.com/ 账号，注册完成之后在，网站左侧导航的 Your Authtoken 选项里面复制你的 Token 。</title>
            <link>https://nitter.cz/op7418/status/1729866374414217228#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866374414217228#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:17 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>进入到创建笔记的页面后，我们点击 Flie 按钮选择 Improt Notebook 来导入笔记。笔记可以从这里下载：<a href="https://pan.quark.cn/s/57005d867688">pan.quark.cn/s/57005d867688</a><br />
<br />
接下来我们需要去注册一个 <a href="https://ngrok.com/">ngrok.com/</a> 账号，注册完成之后在，网站左侧导航的 Your Authtoken 选项里面复制你的 Token 。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFN1Z2JrQUFXZGF2LmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFRHMGFnQUVjZVNVLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866358391988328#m</id>
            <title>R to @op7418: 这是第一部分ComfyUI部署的部分

首先来看部署的部分，首先我们访问 https://www.kaggle.com/ 注册一个账号，注册之后需要去设置里面进行一下电话的认证，这里我试了一下国内的电话也可以。

之后在网站左上角点击这个 Create 里面的 New Notebook 。</title>
            <link>https://nitter.cz/op7418/status/1729866358391988328#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866358391988328#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:13 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>这是第一部分ComfyUI部署的部分<br />
<br />
首先来看部署的部分，首先我们访问 <a href="https://www.kaggle.com/">kaggle.com/</a> 注册一个账号，注册之后需要去设置里面进行一下电话的认证，这里我试了一下国内的电话也可以。<br />
<br />
之后在网站左上角点击这个 Create 里面的 New Notebook 。</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFIyQ2JJQUFhVzAyLmpwZw==" />
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFNJRWJRQUExeEZ0LmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866343514870012#m</id>
            <title>R to @op7418: 长篇的完整内容我在公众号放了一份，要是喜欢看完整的和收藏的也可以看这里：https://mp.weixin.qq.com/s/NMX6pLmFA3AR3paOBAB6eA</title>
            <link>https://nitter.cz/op7418/status/1729866343514870012#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866343514870012#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:10 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>长篇的完整内容我在公众号放了一份，要是喜欢看完整的和收藏的也可以看这里：<a href="https://mp.weixin.qq.com/s/NMX6pLmFA3AR3paOBAB6eA">mp.weixin.qq.com/s/NMX6pLmFA…</a></p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729866338519351662#m</id>
            <title>来辣！最近很多 SD 的内容比如 LCM Animatediff 等项目，首先都是在 ComfyUI 支持的，但是 ComfyUI 又比较复杂，环境配置和安装也很复杂。

所以就找了一个ComfyUI 的笔记来教一下大家免费部署 ComfyUI，同时这节课也会教一些 ComfyUI 的基本操作，带大家生成一张图片和一段 Animatediff 视频🧵：</title>
            <link>https://nitter.cz/op7418/status/1729866338519351662#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729866338519351662#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 14:14:09 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>来辣！最近很多 SD 的内容比如 LCM Animatediff 等项目，首先都是在 ComfyUI 支持的，但是 ComfyUI 又比较复杂，环境配置和安装也很复杂。<br />
<br />
所以就找了一个ComfyUI 的笔记来教一下大家免费部署 ComfyUI，同时这节课也会教一些 ComfyUI 的基本操作，带大家生成一张图片和一段 Animatediff 视频🧵：</p>
<img src="https://nitter.cz/pic/enc/bWVkaWEvR0FHNFE0YWFvQUU5SlFkLmpwZw==" />
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://nitter.cz/op7418/status/1729854183929491811#m</id>
            <title>damo也快速卷了一个SDXL Turbo的图像生成站点，试了一下速度非常快，自己懒得搭建的可以去体验试试：https://sdxlturbo.ai</title>
            <link>https://nitter.cz/op7418/status/1729854183929491811#m</link>
            <guid isPermaLink="false">https://nitter.cz/op7418/status/1729854183929491811#m</guid>
            <pubDate></pubDate>
            <updated>Wed, 29 Nov 2023 13:25:51 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                    <p>damo也快速卷了一个SDXL Turbo的图像生成站点，试了一下速度非常快，自己懒得搭建的可以去体验试试：<a href="https://sdxlturbo.ai">sdxlturbo.ai</a></p>
<p><a href="https://nitter.cz/zengdamo2014/status/1729822838549340265#m">nitter.cz/zengdamo2014/status/1729822838549340265#m</a></p>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>