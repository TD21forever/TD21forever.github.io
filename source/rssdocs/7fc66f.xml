<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>少数派 -- 首页</title>
        <link>https://sspai.com</link>
        
        <item>
            <id>https://sspai.com/post/95558</id>
            <title>年度计划完不成，可能是好事</title>
            <link>https://sspai.com/post/95558</link>
            <guid isPermaLink="false">https://sspai.com/post/95558</guid>
            <pubDate></pubDate>
            <updated>Wed, 22 Jan 2025 03:30:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: <年度计划, 复杂性系统, 敏捷开发, 正反馈>
<br>
<br>
总结: 文章探讨了年度计划的局限性，指出生活是一个复杂性系统，难以通过传统的线性思维进行预测。作者提倡放弃对目标的执念，采用敏捷开发的方法，通过快速迭代和灵活调整来应对变化。同时，强调正反馈的重要性，关注每一个小进步，而不是仅仅追求完成计划。最终，作者认为未完成的计划可能是生活的礼物，帮助我们找到更适合自己的节奏。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>又到了晒年度计划的时节。我的朋友圈被两种帖子刷屏：</p><p>一种在信心满满地分享明年的目标清单，另一种在自嘲地回顾今年未完成的心愿。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/12/a5fcf449c7ce06856e305a8387e40d15.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>你们梗图也太过分了，时间改改就继续发</figcaption></figure><p>看着自己 2024 年的成果清单，还算满意：</p><figure class="image ss-img-wrapper image_resized" style="width: 524px;"><img src="https://cdnfile.sspai.com/2025/01/12/92a1361fdeb5bed3ae6893dc178d7600.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>2024 年的事项总结</figcaption></figure><p>我也有了一个意外的发现。作为一个曾经研究过各种效率方法论的时间管理工具控，今年最大的突破，恰恰来自于一次彻底的「放手」。</p><h2>我们的年度计划注定失败</h2><p>生活本质上其实是一个<strong>复杂性系统</strong>。</p><p>这不是一个简单的比喻，复杂性系统（Complex System）是一个专业术语，它描述的是由大量相互作用的组成部分构成的系统，这些系统通常表现出非线性、多样性、涌现性、自组织、自适应等特征，其行为和性质难以通过传统的线性思维方式进行预测和解释。</p><p>简单来说，我们的生活其实不完全属于自己，而是由无数变量相互作用产生的涌现结果。</p><p>当我们制定年度计划时，追求的必然是改变和突破。毕竟这是许愿的范畴，谁会许愿「明年要过得和今年一模一样」？</p><p><strong>许愿大家都要求个大的，复杂性系统算什么，我要逆天改命！</strong></p><p>我们在计划里勾画新的领域、新的技能、新的突破。这意味着要去做自己不熟悉甚至完全不擅长的事情。为了获得掌控感，我们按照季度、月份写下里程碑。</p><p>这本身没有错，旧世界没有新故事。但写一个完善的年度计划并拿它检视自己本身就很「学生思维」。这个词如今听起来有点像骂人，放在这里是贴切的：因为我们试图用一张妥帖的课程表去对应混沌的未知。</p><p><strong>生活很复杂，目标很伟大，方法很固化，我看结局已经注定：年底拿试卷哭着回家。</strong></p><p>我之前做过一家公司的总经理，后面就特别关注各大企业家的预测和规划。这些年经济的剧烈波动让我们见到了无数「大佬失灵」的案例——这些曾被奉为商业先知的顶尖企业家，他们的年度预判往往在第二年就被现实完全推翻。这些大佬背后都有着强大的智库和研究团队，掌握着最全面的数据，拥有最专业的分析工具，可以调动最权威的咨询资源。</p><p>但即便如此，他们仍然无法与<strong>复杂性</strong>相抗衡。</p><h2>﻿面对复杂性，不要预测，而是演进</h2><p>生物学告诉我们，在环境剧烈变化的时期，存活下来的往往不是最强壮的物种，而是最能适应变化的物种。在意识到这一点后，我开始思考：既然复杂系统不可能被完全控制，那我们需要的是一种更灵活的方式。</p><p>这不就是<strong>敏捷开发</strong>的方法论吗？</p><p>面对复杂性，不要预测，要演进：</p><p><strong>快速迭代，持续交付：</strong>以短周期的迭代为核心，每次迭代都交付一个可用的产品增量。通过频繁的交付和测试，快速发现问题并优化产品，确保持续为客户创造价值。</p><p><strong>拥抱变化，灵活调整：</strong>将需求变化视为提升产品质量的机会，而不是障碍。根据用户反馈和环境变化不断调整计划和开发方向，保持对市场需求的敏捷响应，通过试错来跑通数据的正反馈。</p><p><strong>以人为本，高效协作：</strong>强调团队成员之间的沟通与合作，信任自组织团队的能力。与客户紧密合作，确保产品开发始终围绕用户需求，简化流程，专注核心目标。</p><h2>一种极简而可持续的方式</h2><p>基于这种认识，我开始尝试一种全新的实践方式。这种方法主要包含三个核心要素：</p><p><strong>一个允许自己完不成的经常调整的目标。</strong>它的目的是仅仅是指明大方向，是我知道在什么领域发力的线索，毕竟出来混最重要的是出来。如果我们太过执着于完成原定计划，反而可能错过计划之外的可能性。</p><p>另外，计划不要一上来就大开大合，不如先想想第一个产品原型多久可以跑出来，只在大方向上做短期的可以快速验证的计划。</p><p>不用一上来就想自己年底要达到日语 n2，先想想 50 音什么时候能背完。</p><p><strong>一个特别重视正反馈的心态</strong>。不要用完成计划与否来评判自己，而是关注每一个进步，哪怕是微小的。这种善待自己的态度，反而能带来持续的动力。</p><p><strong>最重要的是：</strong></p><p><strong>一种极简形式的日记方式。</strong>不再追求格式完整，也不在意错别字。每天就用流水账的形式记录今天的进展，聚焦于几个想要发展的关键领域，比如健康、编程、学习、工作等，采用粗略的分类而不是过于精细的划分。</p><p>每天的记录不求完整，能记多少是多少。关键是要降低记录的门槛，减轻认知负担。主要是聚焦于自己今天完成了什么。这种轻量级的记录方式不仅降低了维护成本，更重要的是保护了宝贵的心理资源。按照这种只记录进展的简单方式，我不需要纠结于每天是否都有内容可写，也不用担心错过了某个环节。</p><figure class="image ss-img-wrapper image_resized" style="width: 443px;"><img src="https://cdnfile.sspai.com/2025/01/12/2c0b1f96723be732969a5a1ec2d77fad.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>就是这么记的</figcaption></figure><p><strong>我会定期把日记交给 AI 大模型去总结，重点关注在各个领域取得的重要进展，然后对目标进行调整，形成闭环。</strong>AI 的分析帮助我把那些零散的日常进步串联成一个更有意义的故事。它不仅能看到我做了什么，还能理解这些行动背后的逻辑和价值。它经常会让我发现一些意想不到的收获。有时候我以为自己在某个领域毫无进展，但 AI 的分析会指出一些微小但持续的改变。有时候我觉得某个月过得很糟糕，但数据分析显示那恰恰是一个重要的转折点。</p><figure class="image ss-img-wrapper image_resized" style="width: 581px;"><img src="https://cdnfile.sspai.com/2025/01/12/8ca0a81d3363b9fb9dfe3e649a27e2ac.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>问 Claude：我 1 月份都干嘛了</figcaption></figure><p>这种客观的、数据驱动的分析，让我对自己的成长轨迹有了更清晰的认识。﻿现在回头看，那个开头提到的 2024 年的成果截图，其实就是这种方式的结晶。它不是通过强迫自己完成一个个计划得来的，而是在照顾好自己的心力、持续记录、科学分析的过程中自然形成的。</p><h2>放弃复杂的时间管理系统，远离工具焦虑</h2><p>我之前用过很多时间管理的方法，To Do List、GTD、番茄工作法等。每个方法刚开始都充满希望，但最后计划完不成的时候，整个人会很暴躁。在传统观念里，计划就意味着「使命必达」。完不成就会被视为意志力薄弱的表现。很多人包括我自己，都在这种自我怀疑中不断内耗。</p><p>﻿很多畅销书都会教你如何写日记，强调格式完整、内容清晰、持续记录等要求。现在回想，这些理论实际上在紧张的生活中又加入了额外的负担。</p><p><strong>大家连按时上班都需要人脸识别打卡了，现在为了管理时间还要坚持写日记，开什么玩笑？</strong></p><p>下次碰到那些在售的漂亮的 notion「人生管理模板」，请第一时间关掉，用精巧的系统来管理多变的系统，这是什么屎山代码？</p><h2>真正该管理的是对自己的正反馈</h2><p>要呵护自己想干事的动念，首先就要放弃对目标的执念。时间管理就是个伪命题，在这个复杂系统里，你管理的永远是优先级。</p><p>那些暂时没做完的事，不必太过焦虑，不要老想着收益最大，时间是有限的，不如我们换个思路，想想如何遗憾最小。</p><p>与其纠结那些未完成的待办，不如看看自己在真正重要的事情上取得了哪些进展，要事第一，毕竟：</p><p><strong>发展的问题发展解决。</strong></p><p>我还学会了另一件重要的事：不要指责自己，要学会对自己好一点。</p><p>太多人在追求目标的过程中，把自己逼得太紧。我们总是习惯于用意志力来对抗身体发出的信号，认为克服疲惫、饥饿是一种坚持和毅力的体现。但这种想法本身就值得商榷。</p><p>要拒绝一切形式的负反馈。当感觉没有动力时，第一反应不是责备自己意志力差，而是回到最基础的生理需求：我是不是饿了、渴了、累了、困了？很多时候解决方案就是这么简单：吃个饭，喝杯水，睡个觉。</p><p>一个总是处于饥饿、疲惫状态的人，是很难有多余的心力去思考提升和发展的。那些完不成的计划，可能不是因为我们不够努力，而是我们忽视了最基本的自我照顾。当我学会更好地照顾自己，反而更容易进入一个良性循环：状态好了，做事效率高了，完成了计划就有了成就感，有了成就感就更有动力继续前进。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/12/05d4c7e88ec17ec909d550a82c7a4e75.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>我 2024 年都是怎么表扬自己的</figcaption></figure><h2>计划完不成，可能是好事</h2><p>回顾这一年，我最大的收获不是完成了多少计划，而是学会了如何与自己和解。那些所谓的「失败」，反而让我找到了更适合自己的节奏。</p><p><strong>计划赶不上变化很正常，老想用计划去预测到变化才是妄念。</strong></p><p>与其用完美的计划来限制自己，不如放开手脚去拥抱变化。毕竟人生不是一道解题过程，而是一场未知的冒险。</p><p>那些完不成的计划，是生活给我们的礼物。</p><p><strong>关联阅读：</strong></p><ul><li><a href="https://sspai.com/post/95186" target="_blank">2 个月瘦 40 斤，中年人减肥要学会放过自己</a></li><li><a href="https://sspai.com/post/94340" target="_blank">工作最忙的 78 天，我用 ChatGPT 考了 CFA</a></li><li><a href="https://sspai.com/post/95339" target="_blank">方法太好，不想公开，使唤 AI 干活的 100 个小妙招 (多图)</a></li><li><a href="https://sspai.com/post/95426" target="_blank">什么都想学只会害了你：把学习用 AI 游戏化之后</a></li></ul><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95792</id>
            <title>派早报：快手支持杜比视界视频、富士发布宽幅数模拍立得相机等</title>
            <link>https://sspai.com/post/95792</link>
            <guid isPermaLink="false">https://sspai.com/post/95792</guid>
            <pubDate></pubDate>
            <updated>Wed, 22 Jan 2025 00:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 快手, 杜比视界, 富士, 墨水屏显示器  
<br><br>  
总结: 快手宣布成为全球首家全链路支持杜比视界的短视频平台，用户可在App内拍摄和分享相关视频。富士发布了首款宽幅数模混合相机instax WIDE Evo，具备数码成像和打印功能。大上科技推出了60Hz刷新率的墨水屏显示器Paperlike 103，刷新速度可与液晶屏媲美。希捷推出了36TB的Exos M机械硬盘，成为市场上容量最大的硬盘。国家新闻出版署公布了136款网络游戏的审批信息，包括国产和进口游戏。 </div>
                        <hr>
                    
                    <h2>你可能错过的新鲜事</h2><h3>快手宣布全链路支持杜比视界视频</h3><p>1 月 21 日，快手通过官方微信公众号宣布成为全球首家全链路支持杜比视界的短视频平台，快手建议用户将快手 App 升级到 12.11.30 以上版本，升级后 iOS 用户可以在快手 App 内拍摄、编辑、分享和观看杜比视界格式的视频，Android 用户则可以使用支持杜比视界的手机在快手 App 内分享和观看杜比视界视频。<a href="https://mp.weixin.qq.com/s/DrHAjBiIyXfeJDp2Lz7bdQ">来源</a></p><h3>富士发布宽幅数模拍立得相机 instax WIDE Evo</h3><p>富士于 1 月 21 日发布首款 WIDE 相纸的数模混合相机 instax WIDE Evo，该相机采用数码成像、宽幅相纸（尺寸 99×62mm，约为卡片式迷你胶片的两倍）输出，配备等效 16mm F2.4 镜头，整机尺寸为 138.7x125x62.8mm（不包括突出部分），重量约 490g，背面配备 3.5 英寸液晶显示屏，支持 microSD 存储卡，配备 Type-C 接口，既可用作二合一相机，也可以连接智能手机用作打印机。instax WIDE Evo 官方定价 55000 日元，2025 年 2 月 6 日正式上市。<a href="https://m.ithome.com/html/826147.htm">来源</a></p><figure class="image ss-img-wrapper"><img alt="DOMKbvfcToQMY4xploMcqDz8nId" src="https://cdnfile.sspai.com/editor/u_/cu7tbftb34temt4lrvrg.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>大上科技推出 60Hz 刷新率墨水屏显示器</h3><p>1 月 21 日，大上科技（DASUNG）宣布推出全球首款 10.3 英寸超高刷墨水屏显示器 Paperlike 103（革命者），售价 1999 元。Paperlike 103 最大的亮点是内置了大上科技 60Hz 墨水屏超高刷专利技术，刷新速度据称可与液晶屏媲美。Paperlike 103 采用了 10.3 英寸护眼墨水屏，分辨率为 1872x1404，比例为 4:3，支持 Auto-Clear 自动清残影技术；配备经典物理按键，并支持电容触控和白光、暖光、混光调节；采用超薄铝合金 CNC 机身，尺寸为 239x195x5mm，可通过 Type-C 接口连接电脑或手机。<a href="https://m.ithome.com/html/826195.htm">来源</a></p><figure class="image ss-img-wrapper"><img alt="JIZDbs4ziosuh7x4gZmcGyA0nVb" src="https://cdnfile.sspai.com/editor/u_/cu7tbg5b34temtc0gvm0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>希捷推出 Exos M 36TB 机械硬盘</h3><p>希捷于 1 月 21 日推出新款 Exos M 36TB 机械硬盘，单碟容量达到了 3.6TB，是目前市面上容量最大的硬盘。Exos M 36TB 属于 Exos M 3+ 平台，依托 HAMR（热辅助磁记录）技术，专为满足 30TB 及以上容量需求的数据中心而生。Exos M 36TB 保持了与前代产品一致的外形规格、接口标准及冷却机制，同时采用了更多的可再生资源和回收材料制造。<a href="https://www.cnbeta.com.tw/articles/tech/1472812.htm">来源</a></p><h3>1 月国产及进口网络游戏审批信息公布</h3><p>国家新闻出版署于 1 月 21 日公布 2024 年 12 月份国产及进口网络游戏审批信息，共计 136 款游戏过审，其中包括 123 款国产游戏 和 13 款进口游戏。值得注意的是《王者荣耀：世界》 和 《冰汽时代：最后的家园》也包含在内， 这也是继 11 月和 10 月之后，国家新闻出版署又一次公布新一批版号。<a href="https://www.gcores.com/articles/193840">来源</a></p><h2>看看就行的小道消息</h2><ul><li>小米手机系统软件部总监张国全 1 月 21 日通过微博分享称小米正在内测名为 WinPlay 的 Windows 游戏兼容方案，该方案可让小米平板 6S Pro 12.4 版本以 2.9% 的 GPU 性能损耗转译运行 Windows 平台游戏。<a href="https://weibo.com/1450359667/PaA1Vv0Lk">来源</a></li></ul><h2>少数派的近期动态</h2><ul><li>少数派年度盘点回归，我们选出了 16 件产品，涵盖手机、平板电脑、智能家居、AI 模型等多个领域，并做成了富有交互感的页面，欢迎<a href="https://sspai.com/page/2024">查阅</a>并<a href="https://weibo.com/1914010467/Pa0U25do2">参与微博讨论和抽奖</a>。</li><li>少数派「大家给 Apple 的成绩单」2024 年结果已上线。你给 Apple 的 2024 年打几分？欢迎进入<a href="https://sspai.com/page/apple_report_2024">专题页</a>查阅，还可参与微博<a href="https://sspai.com/post/95746">话题讨论</a>与<a href="https://weibo.com/1914010467/Paup46FAj">抽奖</a>。</li><li>假期将至，你的旅途游戏清单列好了吗？<a href="https://sspai.com/bullet/1736744010"><strong>来分享一下吧</strong></a></li></ul><h2>你可能错过的文章</h2><ul><li><a href="https://sspai.com/prime/story/monospaced-fonts">于单调中别有洞天：等宽字体选择指南 ｜ 少数派会员 π+Prime</a></li><li><a href="https://sspai.com/post/95785">社区速递 078 | 你没见过的社区文章、一周最热评、派友的游戏清单</a></li><li><a href="https://sspai.com/post/95618">中文播客为什么偏爱「四字名」？</a></li><li><a href="https://sspai.com/post/95404">从「原子化」提交到妙用 rebase，一次搞定清爽的 Git 提交记录</a></li><li><a href="https://sspai.com/post/95746">满分五分，你给 Apple 的 2024 年打几分？</a></li></ul><p>&gt; 关注 <a href="https://sspai.com/s/J71e">少数派公众号</a>，解锁全新阅读体验 📰</p><p>&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p><p>&nbsp;</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95785</id>
            <title>社区速递 078 | 你没见过的社区文章、一周最热评、派友的游戏清单</title>
            <link>https://sspai.com/post/95785</link>
            <guid isPermaLink="false">https://sspai.com/post/95785</guid>
            <pubDate></pubDate>
            <updated>Tue, 21 Jan 2025 10:37:36 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: <社区内容, 作者投稿, 互动环节, 产品推荐>
<br>
<br>
总结: 少数派 Matrix 社区重启周报，旨在提升社区内容的曝光率，鼓励作者投稿新内容。文章中提到了一些热评和用户体验，包括对物品价值追踪网站的讨论、药品集采焦虑的应对以及AI辅助编程的实际应用。社区还分享了2024年度最佳好物的推荐，并介绍了新玩意栏目中作者投稿的调整。最后，社区鼓励用户参与互动，分享自己的经验和见解。 </div>
                        <hr>
                    
                    <p>除了首页时间流和侧栏的精选展位，少数派 Matrix 社区还有很多优秀内容因条件所限无法得到有效曝光，因此我们决定重启 Matrix 周报，并在此基础上添加更多社区内容、作者投稿新玩意呈现给大家。</p><hr /><h2>🔥一周热评</h2><p>来自文章<a href="https://sspai.com/post/95633">《物念·一个物品价值追踪网站》</a>：</p><blockquote><p><strong>红烧牛肉 </strong>(+1) 试用了下，不清楚你怎么定义成本高低的，比如买个车子，几年下来每日成本也摊不到100一下，但是车子属于必需品，和手机平板对比就有点不合适吧</p></blockquote><blockquote><p><strong>o大狼o </strong>(+0) 去试用了一下，有点意思。</p><p>我其实买有些东西的时候，也会有类似的想法。</p><p>比如2020年，Keep一辆动感单车要2600元，我盘算着，如果能骑200小时的，每小时成本13元，我能接受，就买了。结果一共只骑了40小时，大多时间闲置，就600元转让了。算下来实际每小时使用成本50元，大概比去健身房高得多了。</p><p>你的网站上现在只有按次计的，但可以多一些方式，比如象健身单车，不可能统计一共骑了几次，但因为本身有使用时间统计功能，我就按总使用时间计，笔记本电脑、手机什么的，天天频繁使用的，只会按天计。</p><p>家里一个空气炸锅，挺贵的，但从疫情前开始，一直用到现在，使用频率极高，一年200次是有的，在网站上要体现这个使用次数，还有点难度。</p></blockquote><p>来自文章<a href="https://sspai.com/post/95637">《浅聊药品集采焦虑》</a>：</p><blockquote><p><strong>Gurri </strong>(+1) 把焦虑转移到「预防」上，这个说的太好了。国家财政的问题不管我们持什么观点，能做的都不多。还是先为自己和家人行动起来。</p></blockquote><p>来自文章<a href="https://sspai.com/post/95589">《AI 辅助编程，真的那么不靠谱吗？》</a>：</p><blockquote><p><strong>YTu </strong>(+22) 作为一个0基础的小白，愣是靠着ChatGPT写了一个Scriptable脚本，解决了我一个心念已久的功能：一个财联社RSS阅读器。</p></blockquote><blockquote><p><strong>ZephyrZ </strong>(+5) 哈哈哈哈哈，「古法手作」看笑了，那还的凸显一个匠人精神，出了BUG那必须鞠躬道歉。</p></blockquote><blockquote><p><strong>玉树芝兰 </strong>(+1) 这份 Super黄编写的《AI 编程蓝皮书》文档挺有趣，适合入门上手，推荐大家阅读。<a href="https://superhuang.feishu.cn/wiki/CBBPwvgEuicVhFkx0s7cPmhpn4e?__readwiseLocation=" target="_blank">https://superhuang.feishu.cn/wiki/CBBPwvgEuicVhFkx0s7cPmhpn4e?__readwiseLocation=</a></p></blockquote><p>来自文章<a href="https://sspai.com/post/95681">《寻微致新：少数派的 2024 年度最佳好物》</a>：</p><blockquote><p><strong>kergee </strong>(+8) 所以是不是出个小丑牌的文章？</p></blockquote><blockquote><p><strong>卫书有道 </strong>(+3) 页面效果不错，要是每个产品的介绍再多点就好了。或者直接附上少数派社区内相关的文章更好。</p></blockquote><blockquote><p><strong>zzsqwq </strong>(+2) 很赞的页面效果，和 Apple 成绩单一样都是一种新的尝试 👍</p></blockquote><p>来自文章<a href="https://sspai.com/post/95529">《人人都可以上手的 Android TV 改造指南，让你也能开机就能看到节目》</a>：</p><blockquote><p><strong>Vincent_Asobi </strong>(+22) 感觉作者还是比较生疏，文章那么长，不如这些方案</p><ul><li>电视桌面：Projectivy Launcher（可开箱可定制）</li><li>文件管理：Mixplorer（可文件管理可安装可传输）</li><li>ADB工具：ADBToolbox（禁用自带程序和桌面）</li><li>附加安装工具：Apkmirror安装工具（用来安装apkmirror上的APKM）</li></ul></blockquote><blockquote><p><strong>去梦老婆 </strong>(+3) Pro系列没有开机广告，小米太真实了。😂</p></blockquote><p>来自文章<a href="https://sspai.com/post/95200">《up 主们在用「苹果字体」时用对了吗？》</a>：</p><blockquote><p><strong>来个板烧鸡腿堡 </strong>(+11) 作者做了很仔细的观察，点赞。一点建议是可以在总结处，给读者更简单直接的结论。</p><p>正确使用苹果字体：在苹果电脑里直接选择SF Pro 作为默认字体。</p><p>ps: 如果是给小公司用作商用场景，用苹方也要小心版权问题，虽然苹果不像某公司那么爱追溯，但理论上还是不被允许的。</p></blockquote><blockquote><p><strong>鼓手高 </strong>(+6) 上海城建真该需要你来拯救，地铁站牌和路牌的字体简直是地狱😭</p></blockquote><h3>📒社区摘要</h3><ul><li><strong>做点小事儿：</strong><a href="https://sspai.com/post/95636">2024个人总结：宜抵达自己</a></li><li><strong>一月笔记：</strong><a href="https://sspai.com/post/95647">2024年-个人常用软件总结</a></li><li><strong>筷子：</strong><a href="https://sspai.com/post/95619">如何用最低成本实现家庭万兆有线网络？</a></li><li><strong>泷谷：</strong><a href="https://sspai.com/post/95616">旅拍的最后一块拼图｜DJI Air3S 体验分享</a></li><li><strong>德坤：</strong><a href="https://sspai.com/post/95727">读书笔记245《车墩墩野事记》</a></li><li><strong>我是Owen啊：</strong><a href="https://sspai.com/post/95721">根据开源数据整理了一个【常见原研药目录】</a></li><li><strong>我真是不知道：</strong><a href="https://sspai.com/post/95694">见我的2024</a></li><li><strong>mingzzz：</strong><a href="https://sspai.com/post/95693">听10000张CD计划之101-200流水账</a></li><li><strong>Roamer：</strong><a href="https://sspai.com/post/95639">「新人报到」Memento：日语沉浸学习利器推介</a></li><li><strong>蒹葭苍苍：</strong><a href="https://sspai.com/post/94990">网络设备折腾记S1E3：捡个垃圾—newifi3D2</a></li></ul><h2>🆕作者的新玩意</h2><p>为了让作者的投稿尽快与广大读者见面，我们调整了《新玩意》栏目中作者投稿部分的呈现方式和周期，作者投稿的「新玩意」后续会迁移至本栏目。投稿渠道与奖励方式仍与以往完全一致，详情参见文末。我们相信新鲜火热出炉的分享更能赢得大家的喜爱，也欢迎广大读者朋友们踊跃投稿。</p><h3>@车不能快：老蛙 FFⅡ 90mmF2.8 镜头</h3><ul><li>入手渠道：海鲜市场</li><li>参考价格：3280 二手 2000 左右</li></ul><p>自今年 618 购入松下 S5M2 之后，我一直在思考该添置什么镜头好。但无奈的是，马来松联盟的 L 卡口生态仍旧是画大饼状态，表面上松下有数码机技术、适马有镜头对焦技术、徕卡有光学积累，但现实便是 ——L 卡口可用的全画幅镜头屈指可数。同时，适马的重量、徕卡的价格也让人望而却步。</p><p>当时我手上的镜头只有套机带的 50mm f1.8 和 20-60mm f/3.5-5.6，室内拍摄视频还是够用的，但在键盘照片拍摄方面，这两颗镜头的焦段就有些不合适了，因为键盘是一个相对方正的产品，拍摄整体时我希望获得一些压缩感，而不是「近大远小」的透视关系和强烈的冲击感。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/05/d0bf78011bf5bbf527f001deaa322e3b.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>最后，在和一位键盘拍摄颇有经验的前辈交流之后，我决定购买一颗 70mm 焦段以上的定焦手动镜头。一方面手动头的选择面比自动头要丰富，同时价格跨度也宽泛不少，另一方面，定焦头的结构相对变焦头要简单不少，同样的价格段下更容易拥有更大的光圈和更好的画质。</p><p>而在观望了诸多适配 L 卡口的中长焦镜头之后，我选择了老蛙 FFⅡ 90mmF2.8 镜头。如今国产镜头五花八门，价格和参数也都很诱人，但综合评估下来，我觉得老蛙的产品力是最实在的，尤其是在微距方面，老蛙还有许多「独门绝技」，而他们在营销方面也没有做国内厂家经常干的大面积推流和矩阵号，也让我对这个品牌有一种「脚踏实地做产品」的好感。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/05/86c92ab43949b11ab4c5f204d0fddd41.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>先来聊聊几个槽点，首先老蛙的镜头盖的松紧尺度感觉做的不是很到位，稍微一碰就会开，其次遮光罩的安装实在是有点难受，总是给我一种异样的剐蹭感。同时镜头重量也不轻，虽然长焦肯定比短焦重，但近乎同焦段之下，老蛙 90（619g）足足比松下 100mm f2.8（298g）重了一倍有余，而且松下还是带有电机对焦的自动头。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/05/653fd10ef1f9f1bcf14d8d47c1142e6e.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>不过这些问题在这个价格和画质表现之下瑕不掩瑜，老蛙的画质表现着实让我惊喜，凭借他们自家的 APO 复消色差技术，暗角、畸变、眩光、色散的控制都很不错。当然，我确实没用过什么好镜头，但就拍键盘而言，我觉得这个素质已经非常够用了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/05/3f845e8d8df6cf2a8d7a8549eb7685b4.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在购入老蛙 90mm 之后，我几乎所有的键盘照片都由这颗镜头效劳，毕竟除开 90mm 的焦段，它还是一颗最大 2 倍放大倍率的微距镜头，有着极近的对焦距离，可以用来拍摄很多键盘的做工细节，虽然用来拍这个确实有点大材小用了。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/05/1254175aa13b6094c48875aea1a0123d.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>关于摄影，我能聊的真的不多，毕竟我开始玩才相机半年不到，尽拍摄的次数和题材也相对有限，但摄影带给我的宁静感却让我在繁忙的生活中找到了难得的片刻喘息，也希望各位能用摄影的方式发现生活中美好。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/05/d1d0a504e54cada688123ca68e94d7be.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>@夜行列车长：MUJI 断货王擦镜纸</h3><ul><li>入手渠道：京东</li><li>入手价格：8 元</li></ul><p>目前市面上广泛可见的擦镜纸多含有酒精或其他清洁剂成分，旨在实现快速干燥与除菌效果。然而，鉴于多数眼镜镜片均附有镀膜，长期使用含酒精的擦镜纸擦拭，极易导致镀膜受损脱落。</p><p>在更换上一副眼镜前，我一直使用配镜时附带的擦镜布以及酒精片来清洁镜片。结果发现，镜片镀膜已略显斑驳，并伴有多处划痕。回顾日常擦拭习惯，这些损伤大多源于反复使用的擦镜布中夹杂的微小尘粒对镜片的摩擦，以及酒精棉片中酒精成分对镀层的侵蚀，共同加速了镜面镀膜的脱落。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/01/13/caca1f1766edb248e01058b60c5de3c2.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/01/13/ca456e2f445e45e20668890d4284c1e8.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在网上冲浪的时候看到不少人推荐 MUJI 的擦镜纸，于是便在库存紧张的京东平台上不断刷新，终于成功抢购到两包回来试用。若论 MUJI 中性价比高且不踩雷的产品，我个人认为这款擦镜纸绝对可以入选。作为门店中最实惠的商品之一，擦镜纸的材质为「丙烯酸无纺布」，每包内有 14 张，长 15 ✖️ 13 cm 的尺寸（约一台 iPhone 11 Pro ）。这个尺寸无论是擦拭眼镜还是显示屏都恰到好处，不会显得太小。而且，擦镜纸可以多次循环使用，<strong> 切记在使用前抖动去除浮尘，就能有效避免细微尘粒划伤镜片。</strong></p><figure class="image ss-img-wrapper image_resized" style="width: 664px;"><img src="https://cdnfile.sspai.com/2025/01/13/9223571afefd57edd6e87be1680b32d6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在使用了擦镜纸后，还是能很明显的看出差别。擦拭前，镜片上的指纹、灰尘仿佛给视野蒙上了一层薄雾；而擦拭后，镜面很光洁，前后对比之下，那种清晰透亮的视觉效果让人倍感舒畅。</p><p>使用过程中也无需大力擦拭，只需要擦拭两三次即可将镜面上的大面积污渍擦掉，而且还是在没有使用任何清洁剂的情况下。既省时间又能减少对镜片的磨损，也是蛮高效温和的清洁方式。</p><figure class="image ss-img-wrapper image_resized" style="width: 664px;"><img src="https://cdnfile.sspai.com/2025/01/13/cda3697cff56261259084510e2d1d99b.JPG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>👈🏻左边：使用后； &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 右边👉🏻：使用前</figcaption></figure><p>不过也有人说这款擦镜纸有平替 —— 实验室擦拭纸，具体感兴趣的朋友可以去某宝搜索一下，是否有一样的效果这个还需要等买来对比之后才知道。但从 MUJI 的这款产品目前的表现来看，清洁力、便携性和性价比都是不错的。平常不习惯携带擦镜布的朋友可以揣一包放兜里，需要用的时候随时取用，放一张的话很有可能当纸巾给扔掉。现在我都是车里、办公室、家里各放一张，需要用的时候都是随取随用。</p><h2>💬一派热议</h2><p>在上期第 194 期一派投票《<a href="https://sspai.com/bullet/1736744010">你的旅途游戏清单准备好了吗？ </a>》中，共有 202 名派友热情参与，十分感谢！</p><p><strong>Gurri </strong>(+19) 买了开源掌机 35xxsp，最近在补银河战士系列。已经通了融合，在玩零点任务。不得不说体验和手机插个手柄真的是两种体验，翻开即玩，小巧的机身都非常契合那个时代的掌机体验。这个时代唯一可以揣裤兜的掌机只剩下手机了，然而手机游戏在我们这些老 ass 看来根本没法称之为游戏（纯个人感受，如有冒犯请见谅）。</p><figure class="image ss-img-wrapper image_resized" style="width: 500px;"><img alt="" src="https://cdnfile.sspai.com/2025/01/13/avatar/ecd8244f99aac3be0891e22076898c0d.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>落雪小凝 </strong>(+8) 最近沉迷燕云十六州，当做纯粹的单机游戏，探索的挺开心。</p><p>旅途中，上飞机前，会提前登录一下月圆之夜，打开单机模式，然后切后台。进入飞行模式之后，就可以继续刷全图鉴成就啦</p><p><strong>少数派 18510599 </strong>(+7) 在手机上装了 GBA 模拟器，希望能在高铁上打打逆转裁判 123。</p><figure class="image ss-img-wrapper image_resized" style="width: 500px;"><img alt="" src="https://cdnfile.sspai.com/2025/01/15/avatar/de8156278b0ed62975eeb3e848323192.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>阿利安卓 </strong>(+5) 只有 Steamdeck，玩玩土豆兄弟和小丑牌还还是不错的</p><p>手机游戏嘛，F-droid 上有不少开源好玩的小游戏，比如 Vector Pinball</p><p><strong>hAPPydOg </strong>(+3) Delta + 宝可梦水晶，开了 GS 球</p><figure class="image ss-img-wrapper image_resized" style="width: 500px;"><img alt="" src="https://cdnfile.sspai.com/2025/01/14/4f8bcd2fae36de0e2e8b30221292de88.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>HZ_Studio </strong>(+2) Kingdom Rush</p><p><strong>jojo12 </strong>(+2) 星露谷物语希望把全成就做完。</p><p><strong>zixr365 </strong>(+2) 最近为了备战怪猎：荒野，在玩怪猎：世界。不得不说，怪物猎人是真的好玩啊，世界的画面啥的，也挺好的，并不会显得过于古旧。打完世界刚好续上荒野。</p><p>ps 上刚打完了最后生还者一代重置版，确实很好玩。二代迟迟不进会员库，另外听说有觉醒元素，一直在犹豫和等待，实在不想给 zzzq 投钱。</p><p>因为打过了最后生还者，感觉对这类丧尸题材的游戏抗力有了一点点提高，所以考虑打生化危机了，之前一直是想玩不敢玩的。听说 4 代已经不算恐怖游戏而算射击游戏了，所以在 steam 上买了个豪华版开玩。确实不算很恐怖，开个简单难度，玩得也挺开心的。</p><p><strong>忆梦非诸侯 </strong>(+2) 歧路旅人 1+2，最近迷上了这种回合制游戏，从之前的 p5R 到星之海，这种回合制游戏可太适合 switch 了</p><p><strong>JimLu </strong>(+1) 突发奇想把 wiiu 又拿了出来，发现老任服务器都关了，更新系统联 pretendo 折腾老半天，终于玩上了喷射战士 1 代，还是那个原汁原味的感觉。</p><figure class="image ss-img-wrapper image_resized" style="width: 500px;"><img alt="" src="https://cdnfile.sspai.com/2025/01/20/4bd006ae5884054582e8289ccd2b8a28.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>Yorkson </strong>(+1) 在 iPad mini 上装了 Delta 和 PPSSPP，发现能模拟 PSP 后可以打 GalGame 了，十几个小时的火车有事儿可做了，另外还买了个三十块的 shanwan 小手柄，单手按按 AB 比点屏幕方便。虽然有 Delta，还是把 3DS 翻出来，准备打几个 GBA 游戏玩玩，比搓屏幕手感好不少。</p><figure class="image ss-img-wrapper image_resized" style="width: 500px;"><img alt="" src="https://cdnfile.sspai.com/2025/01/20/0d532c812546f81d514324cae6eca985.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>JuniperPhoton </strong>(+1) 继续推荐歧路旅人 2，即便是 Switch 上玩也很棒。</p><p><strong>kendentline </strong>(+1) 川渝牛马表示，隧洞太多了，很难找到连续的信号打游戏，有时候甚至听个歌都是奢侈……</p><p><strong>蝉心 </strong>(+1) 看起来派里玩绝区零的不少，我也喜欢。</p><p>NS 推荐 圣兽之王、十三机兵防卫圈、雪居之地、蒸汽世界 大劫掠 1 / 塞尔达 智慧的再现</p><p>Win/SD 推荐 漫威争锋，以及过几天上的 三国无双 起源</p><p><strong>Leobai </strong>(+0) 纯旅途中的手游来说是 P5X 和杀戮尖塔。因为出行大多数情况下是一个小时多点的高铁，因此可以趁机刷刷日常本开一局尖塔。P5X 的主线剧情虽然是亮点，但还是更适合长时间打。</p><p>如果是正经玩的话，quest 平台的 demeo 生化 4 和蝙蝠侠阿卡姆之影都很不错，demeo 是经典下棋跑团，玩不明白但是很上瘾，生化 4vr 很经典，蝙蝠侠是很不错的八向打拳模拟器，流程爽快。</p><p>ps 平台个人比较喜欢浪人崛起，把跑图做的很顺畅，非常顺滑的进入了忍者组的打人流程。机器人惊喜感很不错，但有些背板关卡对于我这种操作就会很吃力需要兄弟帮忙代打一部分。</p><p>pc 平台或者全平台很喜欢暗喻幻想，首先抛开后半流程剧情全部加速赶工的问题，以及能够接受脑死跑图毫无创意的迷宫部分，就公路片形式，剧情没有雷点甚至有点让人满足，以及美术音乐来说可以推一下，你很难不喜欢开最低难度然后控制自己操作速度争取在音乐达到下一个小高潮切进下一个副歌前打死小怪这种操作，真的。</p><p><strong>黄小猪 </strong>(+0) Arcade 里的 Sasquatch 两年前初见的时候点开了一下以为就是个大脚怪整蛊露营者的恶作剧游戏，但是常年霸榜让我一直不太理解，后来突然发现除了在营地恶搞以外还有很广阔的天空可以翱翔，最近一星期都在沉迷。整体画风很卡通，感觉是小朋友也能玩的游戏，但是对于一个将将三十岁的大人来说也很上头，推荐给有 Arcade 订阅的各位～（有点像肝脏友好版的星露谷）然后还下载了朋友们口中的年度游戏小丑牌，不过平时不怎么爱打扑克，打算路上玩腻了 Sasquatch 之后来开拓一下新世界。</p><p><strong>江月何年初照人 </strong>(+0) 以前在旅途中喜欢玩手机单机游戏，</p><p>小时候最早喜欢玩日本开罗游戏，一款游戏能玩一个寒假，怀念在摩托罗拉上喜欢忍者村</p><p>之后玩得比较杂，迷你地下城 2，铁锈战争，移植的守墓人，崩溃大陆，以及当时的很多汉化游戏，比如手谈汉化组的 solar2，太阳系战争等，现在也会去找一些这样的游戏合集</p><p>Mindustry（像素工厂）是唯一一个玩到现在还在保留的游戏，可以在飞机上玩，比较有趣</p><p>📢：下一期的一派讨论是数码圈日经话题《<a href="https://sspai.com/bullet/1737450027" target="_blank">2024踩过的数码产品「坑」有哪些？ </a>》，欢迎来聊。</p><h2>🃏互动环节</h2><p>会员社区改版的喜悦也希望能够分享给派友，《社区速递》新增互动环节：我们将从会员社区的问答讨论中，匿名精选出一些有趣的话题，放在每期《社区速递》的末尾，作为我们分享与讨论的「话题池」。如果你对以下<strong>任一话题</strong>有独到的见解或经验分享，欢迎在评论区留下你的精彩回答，可重复评论参与。我们将认真阅读每一条评论，对于回答优秀且详尽的朋友，送上一份少数派会员社区体验月卡。</p><p><strong>本期话题池：</strong></p><ul><li>你用Android机还会root吗？</li><li>如何管理B站的关注？</li><li>2025苹果外接显示器求推荐？</li><li>求推荐的低因咖啡豆？</li><li>照片的存储方案？</li></ul><p><strong>如果你也想分享「新玩意」🔉：</strong></p><ul><li>获取 Matrix 社区写作权限并签署 <a href="https://sspai.com/post/72089" target="_blank">Matrix 共创计划</a>；</li><li>在少数派独家发布一篇文章，在标题中标注「新玩意」前缀；</li><li>用至少 800 字介绍产品，并配上 2-3 张产品的实拍图片；</li><li><strong>在网站个人信息中补充支付宝账号。</strong></li></ul><p>成功入选本栏目还可以得到 108 元的「剁手红包」🧧。如果你有兴趣参与，就赶紧来稿吧！</p><p>&gt; 下载少数派 <a href="https://sspai.com/page/client" target="_blank">客户端</a>、关注 <a href="https://sspai.com/s/J71e" target="_blank">少数派公众号</a>，了解更多的新玩意 🆒</p><p>&gt; 特惠、好用的硬件产品，尽在 <a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc" target="_blank">少数派 sspai 官方店铺 </a>🛒</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95781</id>
            <title>于单调中别有洞天：等宽字体选择指南</title>
            <link>https://sspai.com/post/95781</link>
            <guid isPermaLink="false">https://sspai.com/post/95781</guid>
            <pubDate></pubDate>
            <updated>Tue, 21 Jan 2025 09:25:44 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 等宽字体, 设计细节, 编程, 可变字体  
<br><br>  
总结: 等宽字体在数字环境中起源于技术限制，但如今作为一种风格继续被广泛应用。它们在编程和文本编辑中提供了良好的对齐和可读性，尤其在代码编辑器中，等宽字体有助于区分形近字符。好的等宽字体应具备考究的设计细节和实用性，特别关注易混淆字符的设计。近年来，设计师们也在探索可变宽度和合字等新特性，以满足多样化的需求。 </div>
                        <hr>
                    
                    <h2>为什么要等宽？</h2>
<p>如果让你在纸上写一个单词 <code>Hi</code>，你肯定不会把两个字母写成一样宽。的确，在正常手写时，字母根据形态、笔画和大小写，自然地会被写成不同宽度。这种字体称为「比例字体」（proportional fonts），我们在数字环境中见到的西文字体也大多如此。</p>
<p>但回想一下机械打字机和早期电脑，它们打出的字母却是个个一样宽的；这主要是因为技术上的限制。</p>
<p>在打字机中，每个按键所连接的字模在按键时敲击浸有墨水的丝带，在纸上留下字迹。由于字模都是一样宽的，纯机械机构又不能动态调整字距，只有将字母也做成等宽，才能维持版式的均匀。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/dc5f8528687153188aa83ebce544ef47.gif" />
    <figcaption>打字机打出的等宽字体</figcaption>
</figure>
<p>而在早期终端和电脑中，由于屏幕不够精细，芯片也缺少图形显示能力，画面只能被分成数量有限的网格，每个网格固定显示一个字符。这也把文字「框」成了一样尺寸。</p>
<figure class="image ss-img-wrapper image_resized" style="width: 338px;"><img src="https://cdnfile.sspai.com/2025/01/21/383cc3c030af258cc243d796d53fa73f.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>终端机 VT100 上的等宽字体</figcaption>
</figure>
<p>来到现代，这些技术限制不复存在，但等宽字体（monospaced fonts）却作为一种风格延续下来，凭借其天然的网格对齐特征，在许多场合继续发挥重要作用。在终端环境中，等宽字体不仅用来显示内容，也承担了「绘制」界面的功能；借助 <a href="https://en.wikipedia.org/wiki/Ncurses">ncurses</a> 等库的帮助，用纯文本也能做出功能丰富、版式美观的 TUI（文本界面）软件。在代码编辑器中，等宽字体与空格、缩进等格式结合，加强了整洁感和可读性；更扎实的形态也让形近字符容易区分，让输入错误更容易发现。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/6df01663967cdae05627b33e38cfbd00.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>sc-im 这样的 TUI 软件依赖于等宽字体</figcaption>
</figure>
<p>等宽字体的应用也不限于技术场景。许多 Markdown 写作工具都选择等宽字体作为默认字体，既是对打字机传统的致意，也是因为等宽字体能赋予版式一种特殊的简约肌理，营造出让不少人觉得更平静、专注的写作环境。英文剧本创作中，用 12 号的等宽字体 Courier 是行业惯例，因为经验上这样写出的剧本一页正好需要一分钟来演出，方便估算时间。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/d80757636311c4154ca22ede42805a6d.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>Markdown 写作软件 iA Writer 的早期版本，使用等宽字体 Nitti</figcaption>
</figure>
<h2>好的等宽字体是如何炼成的</h2>
<p>等宽并不意味着均一和乏味。在看似粗砺的外观背后，等宽字体的设计是丰富多变、充满细节的；做好一款等宽字体需要的努力，并不亚于任何抓眼的标题字体或优雅的正文字体。</p>
<p>那么，如何辨别和选择出好的等宽字体呢？可以从美观性和实用性两个角度考虑：好的等宽字体应该具有考究的设计细节，以及能满足使用场景的丰富功能。此外，中文用户可能还需关注对中文字符的兼容性。以下分别介绍。</p>
<h3>设计细节</h3>
<p>等宽字体一个特别重要的品质就是「不容易看岔」。因此，几乎所有等宽字体都会关注易混淆字符的设计，特别是数字 <code>1</code> / 小写字母 <code>i</code> / 小写字母 <code>l</code> / 大写字母 <code>I</code>，以及小写字母 <code>o</code>/ 数字 <code>0</code> 这两组。</p>
<p>至于具体如何区分，不同字体的处理方式不同，但一般是在小写字母 <code>i</code> 和 小写字母 <code>l</code> 头部和尾部添加衬线（即笔画是否「出头」、出头的形状如何），以及在数字 <code>0</code> 中间添加圆点或斜线。这些设计没有优劣之分，自己看着顺眼、清楚即可。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/983eea79f3555398f8f24e79fcb629a1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>不同防混淆设计对比</figcaption>
</figure>
<p>x 字高（x-height）是另一项重要的设计决策。这是指英文字母「四线格」中间两条线之间的高度，也就是小写字母 x 的高度，对字体的风格和特征影响极大。许多等宽字体会采用偏大的 x 字高，因为这能让外观更饱满，更容易在小字号下辨认，而这正是等宽字体的主要使用场景。不过，过大的 x 字高也会让字体看起来有点「愣」，具体尺度就是个人偏好问题了。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/2a5c4ae1eaaf47fe4ceff1ff25e84bee.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure>
<p>虽然多数等宽字体都会采用无衬线设计，笔画粗壮并且末端无装饰，但这也不是唯一的风格。例如，经典字体 Courier 就采用了粗衬线（slab serif）设计，笔画终端是向外延伸的圆角；PT Mono、Fira Code 等较晚近的字体也采用了粗衬线。还有一些更具「创意」的字体直接套用了衬线字体的风格（例如 Xanh Mono），或者走复古像素风（例如 VT323），不过实用性就比较有限了。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/82d9620b36fff5de8cd74b3acf9fd849.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>不同衬线设计对比</figcaption>
</figure>
<p>近年来，还有不少字体会把斜体当作展示个性的空间，为其使用和正体截然不同的风格。这股风潮最初可能是大厂 Hoefler &amp; Co. 出品的 <a href="https://typography.com/fonts/operator/overview">Operator Mono</a> 带起来的，它的斜体模仿了手写体的设计，<code>f</code>、<code>l</code>、<code>s</code> 等小写字母俏皮的起笔成为很多后来者（例如免费的 Cascadia Code、Victor Mono 和付费的 MonoLisa 等）的模仿对象。</p>
<p>由于斜体在代码编辑器中经常被用来自动高亮 <code>class</code>、<code>public</code> 等关键词，不少程序员喜欢用这种字体来给枯燥的代码增添一些活泼感。（当然，正如编程界的任何选择一样，嘲讽这种字体的声音也不少见。）</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/17a8cf12728d63b23c0a40fb6ead3c34.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>Operator Mono 的「花式」斜体</figcaption>
</figure>
<p>（作为另一个极端，有的字体根本就没有斜体，用到时只能显示强制拉伸的「假斜体」，保证视觉体验起见，这种字体还是不要选择了。）</p>
<p>此外，既然等宽字体的核心特征就是字符宽度相同，这个宽度到底定多少自然也很重要。与追求宽度适中的正文字体相比，许多等宽字体会选择做得稍微偏窄，以便节省空间，在相同尺寸窗口中放下更多代码。这方面的一个极端莫过于 <a href="http://be5invis.github.io/Iosevka">Iosevka</a>，它将宽度压缩到 1/2 em，也就是每个字母的宽度只有其高度的一半，用在控制台输出等空间有限的地方特别紧凑高效，但拿来码字就看着有点局促了。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/22/717b71008b983c7a46c291877b696de3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>Iosevka（上）和宽度更标准的 IBM Plex Mono（下）横向空间利用效率比较</figcaption>
</figure>
<p>还有一类字体试图从根本上挑战「等宽」的概念，其代表是 <a href="https://input.djr.com/">Input Sans</a> 和 <a href="https://ia.net/topics/a-typographic-christmas">iA Writer Duo/Quattro</a>。这些字体虽然仍具有等宽字体典型的「无机感」，但放松了「每个字一样宽」的约束，不同字符根据其形态特征，可能占据多种不同宽度，例如 <code>W</code> 偏宽而 <code>i</code> 偏窄。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/3ffe23d47f62aa5aaa855276b89e6165.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>iA Writer Duo 使用了 150% 宽的字符，Quattro 还增加了 75% 和 50% 宽的字符</figcaption>
</figure>
<p>但这样「不伦不类」的字体还能胜任等宽字体的用途吗？Input Sans 的作者<a href="https://input.djr.com/info/">提出</a>了一些有趣的主张。在他看来，在编程中，最需要对齐的是行首缩进，而这无论如何不受等宽与否的影响。同时，不等宽的设计反而有助于发现错误，例如你在一连串 <code>&lt;span&gt;</code> 中手滑把其中一个标签打成了 <code>&lt;spam&gt;</code>，由此产生的不对齐将是非常显眼的。当然，如果你是用来写文章，就更不用在意严格对齐了，可变宽度反而会让排版看起来更和谐舒适。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/e3a5d53f7bad787ca11a8a66c9022603.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>不等宽让错误更显眼</figcaption>
</figure>
<p>正是因为字符设计上存在这么多众口难调的因素，许多较新的字体会通过提供字体家族、可变字体等方式来满足多样化需求。例如，Iosevka 在标准版之外还提供了宽度更舒展的 Extended 版本；<a href="https://www.recursive.design/">Recursive</a> 在一个可变字体里包含了从等宽到变宽、从规整到「奔放」等多种风格；等等。</p>
<figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/34bad1d9809abab3af6e7e6594066d1f.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" />
    <figcaption>Recursive 在一个可变字体里包含多种风格</figcaption>
</figure>
<h3>额外功能</h3>
<p>合字（ligatures）可能是当代等宽字体最能玩出花样的地方。所谓合字，是指为特定字符的组合制作一个专门造型。传统上，这一般用来为一些存在笔画勾连的字母组合（例如 <code>fi</code>、<code>ff</code>、<code>Th</code> 等）做特殊设计，使之看起来更自然和协调。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95618</id>
            <title>中文播客为什么偏爱「四字名」？</title>
            <link>https://sspai.com/post/95618</link>
            <guid isPermaLink="false">https://sspai.com/post/95618</guid>
            <pubDate></pubDate>
            <updated>Tue, 21 Jan 2025 07:33:12 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 汉语, 单音节, 双音节, 播客命名  
<br><br>  
总结: 本文探讨了汉语的音节特点，指出汉语并非以单音节为主，而是双音节词占据了更大的比例。通过对现代汉语常用词的统计，发现双音节词在日常交流中更为常见。文章进一步分析了中文播客偏爱四字名的原因，认为四字名由两个双音节词组成，既符合口语习惯，又能有效传达节目信息。此外，三字名虽然不常见，但在表达上具有独特的美感。最后，作者强调了语言规律在播客命名中的重要性，并指出财新对汉语的表述并不准确。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px; text-align: justify;"><a href="https://science.caixin.com/2025-01-06/102276027.html">财新最近发了篇报道</a>，讲脑机接口解码汉语，其中有一段：</p><blockquote><p style="margin-left: 0px;">此次突破的汉语言解码，就面临独特的挑战——汉语作为一种全球现使用的唯一表意语言，<strong>以单音节为主</strong>，同时具有声调语言和图形语言的特征......</p></blockquote><p style="margin-left: 0px; text-align: justify;">这里有几点值得商榷，尤其是「以单音节为主」这个说法并不准确。恰好，理解汉语的真实语音特点，能帮我们解答一个困扰播客圈很久的现象——<strong>为什么中文播客偏爱四字名？</strong></p><h2 style="margin-left: 0px; text-align: justify;"><strong>汉语真的「以单音节为主」吗？</strong></h2><p style="margin-left: 0px; text-align: justify;">从书面文字来看，汉语好像真的「以单音节为主」。这种印象主要来自我们对汉字的视觉感受：每个方块字看起来都像是一个独立单元，并且具有明显的单音节特性，同时还代表一个语素（最小意义单位），如「好」字，读音是 hǎo，意思是积极的。</p><p style="margin-left: 0px; text-align: justify;">但这种文字视觉有很大的欺骗性，语言是看人们怎么说出来，说再决定了写。我们在说话时，其实更偏爱双音节词，有学者做过专门统计<sup class="ss-footnote" href="" title="苏新春. &quot;关于《 现代汉语词典》 词汇计量研究的思考.&quot; 世界汉语教学 4 (2001): 39-47.">1</sup>：现代汉语常用词和规范词中，二字词（双音节）占比均超过 60%，远超一字词（单音节）。这一特点在日常交谈中也常见，像「播客」「上班」「出轨」这样的双音节词最为常用。</p><figure class="image ss-img-wrapper image_resized" style="width: 407px;"><img src="https://cdnfile.sspai.com/2025/01/15/article/59e5c13b44a4020bc7f525f98212f258.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>苏新春统计了《现代汉语词频词典》与《现代汉语词典》现代汉语常用词和规范词二字词频率，基本可以反映现代汉语以双音节为主的特点。</figcaption></figure><p style="margin-left: 0px; text-align: justify;">为何汉语会以双音节为主？从历史演变看，双音节化能扩充词汇量，避免同音混淆，这只是现象层面的解释。我们还得追问：人类自身的发音规律，会给出什么样的答案？</p><p style="margin-left: 0px; text-align: justify;">答案在汉语的音节特点上：相比英语音节的自然滑动（如 [ai] 是从 [a] 到 [i] 的过程），汉语音节都很短促，单个音节太短，缺少抑扬，<strong>不足以形成稳定的韵律感</strong><sup class="ss-footnote" href="" title="冯胜利. &quot;论汉语的'韵律词'.&quot; 中国社会科学 1(1996):16.">2</sup>。所以，当我们听到外国人说中文时，往往会觉得很违和，他们会不自觉地拖长音节，比如把「天」拉长成「梯——安」。</p><p style="margin-left: 0px; text-align: justify;">我们也有追求双音节的倾向，说话时自然地组合音节，像「好吃」「好看」这样。这种对双音节的偏爱在口语中表现得更明显，甚至会把三音节词吞音快读成双音节：</p><ul><li style="text-align: justify;">派出所 =&gt; 派所</li><li style="text-align: justify;">公安局 =&gt; 关局</li><li style="text-align: justify;">特好吃 =&gt; 套吃</li><li style="text-align: justify;">大家好，我是大张伟 =&gt; 大猴儿 / 我 / 裆儿伟</li></ul><p style="margin-left: 0px; text-align: justify;">理解了这种双音节特质，我们就能更好地解释人们偏爱播客四字名的原因。</p><h2 style="margin-left: 0px; text-align: justify;"><strong>为什么中文播客偏爱四字名？</strong></h2><p style="margin-left: 0px; text-align: justify;">小宇宙上线时的<a href="https://mp.weixin.qq.com/s?__biz=MjM5NzU4ODQ2MA==&amp;mid=2676499194&amp;idx=1&amp;sn=784a78866e8623a7f7824e2379870345&amp;scene=21#wechat_redirect" target="_blank">数据显示</a>：平台一百个最热门的播客中，近 50% 选择了四字名，这个比例至今仍具参考价值。</p><figure class="image ss-img-wrapper image_resized" style="width: 396px;"><img src="https://cdnfile.sspai.com/2025/01/15/article/c4549271fe37b3a71218dff3cde522bc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>图源：《三明治》公众号</figcaption></figure><p style="margin-left: 0px; text-align: justify;">要理解这个现象，得从音步说起。音步是语音中的节拍单位，就像音乐中的小节，是人们说话时自然停顿形成的节奏单元。我们前面说到汉语偏爱双音节，<strong>其实就是说我们习惯用两个音节作为一个自然的说话单位，即一个音步。</strong></p><p style="margin-left: 0px; text-align: justify;">双音节名虽然符合这种口语习惯，但在竞争激烈的播客市场中，两个字的信息量往往不够，难以让听众快速理解节目定位和内容。比如像「机核」这样的成功案例并不多见。</p><p style="margin-left: 0px; text-align: justify;">而四字名，比如「日谈公园」「大内密谈」「忽左忽右」，恰好由两个双音节词组成，产生了音义融合优势。每个双音节读起来都很自然，前后叠加又带来更强的节奏感。</p><p style="margin-left: 0px; text-align: justify;">同时，如前文所述，人们说话以双音节词为主，这使得大多数双音节词都能表达相对完整的含义。比如「日谈」暗示日常对话，「公园」带来开放空间感，合在一起就传达出一种轻松又富有公共性的氛围。</p><p style="margin-left: 0px; text-align: justify;">这种音义融合让四字名既朗朗上口，又能在短短四个字里承载丰富的节目信息，因此在播客圈获得了广泛欢迎。</p><h2 style="margin-left: 0px; text-align: justify;"><strong>三字名：反常规的独特美感</strong></h2><p style="margin-left: 0px; text-align: justify;">在四字名占主导的播客圈里，也有一些节目选择了三字名，比如「不在场」「山有虎」。三音节在汉语中比较特殊，读起来不那么顺滑自然。这一点从古诗就能看出来——七言诗里很少用「为他人 / 做嫁衣裳」（3+4）这样的折句，反而更爱用「孤帆远影 / 碧空尽」（4+3）这样先长后短，奇数在后的节奏<sup class="ss-footnote" href="" title="冯胜利. &quot;论汉语的'自然音步'.&quot; 中国语文 1(1998):8.">3</sup>，因为这样更符合人们说话习惯。</p><p style="margin-left: 0px; text-align: justify;">乍看之下，三字名似乎不合时宜。但也给了创作者反常规的机会。「不 / 在场」以一个坚决的「不」字开头，让发音突出、停顿，语义聚焦，让听者立刻对后续「在场」产生质疑；「山 / 有虎」采用典型的存现句式<sup class="ss-footnote" href="" title="存现句式（存在-出现句）是汉语中一种特殊句式，用来表示某个处所或范围里存在或出现了某人或某物，基本结构是「处所词+有/是+名词短语」">4</sup>，以地点词起句，一下子在听者脑海中构建出一个画面，既有危险的暗示，又带着向前的意味。</p><p style="margin-left: 0px; text-align: justify;">三字名打破了常规的双音节节奏，却在这种「不完美」中获得了独特的表达力：以反叛姿态给听众带来新鲜感。</p><h2 style="margin-left: 0px; text-align: justify;"><strong>结语</strong></h2><p style="margin-left: 0px; text-align: justify;">有人试图从成语的角度解释四字名的流行，认为成语不仅朗朗上口且内涵丰富。但这种解释更像是用现象解释现象。毕竟播客是要说给人听的，其命名更可能源于最基础的语言规律：<strong>我们与生俱来的发音习惯和语音节奏。</strong></p><p style="margin-left: 0px; text-align: justify;">有趣的是，许多播客创作者在命名时，可能并未刻意考虑这些语言学理论，而是凭直觉选择了四字名。这种「不约而同」恰恰印证了语音规律的普遍性和根深蒂固。但也别想当然地认为，起个四字名就能做好播客了，毕竟一个播客的成功还取决于更新频率、内容质量、运气等诸多因素。</p><p style="margin-left: 0px; text-align: justify;">播客作为一种声音媒介，让内容回归了语言的最初形式<sup class="ss-footnote" href="" title="陈保亚, 杜兆金. 语言学概论. 北京大学出版社, 2023:220. 【非洲的早期智人在距今约 13 万年前走出非洲时还没有语言，约 4 万年前到达亚洲的晚期智人才发展出成熟的语言系统，而文字则是近几千年才出现的记录工具。】">5</sup>。从语音规律的角度来解释播客的命名现象，我们得以窥见汉语的某些本质特征。</p><p style="margin-left: 0px; text-align: justify;">最后补充一点：财新说汉语是「全球现使用的唯一表意语言」也不准确。日语也有和制汉字（如「峠」，意为山顶、山岭），也具有表意特征。而且现代汉语本身就有高比例<sup class="ss-footnote" href="" title="据《说文通训定声》统计，到东汉时期形声字就已占全部汉字的 82% 以上，这个比例现在更高。">6</sup>的形声字，更应该说是意音文字。</p><p style="margin-left: 0px; text-align: justify;">本文首发「<a href="https://mp.weixin.qq.com/s/OXrClZKvLfqw1wJZLv-H2Q" target="_blank">言辞之间</a>」，同步少数派。</p><p>&gt; 关注&nbsp;<a href="https://sspai.com/s/J71e">少数派公众号</a>，解锁全新阅读体验 📰</p><p>&gt; 实用、好用的&nbsp;<a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95404</id>
            <title>从「原子化」提交到妙用 rebase，一次搞定清爽的 Git 提交记录</title>
            <link>https://sspai.com/post/95404</link>
            <guid isPermaLink="false">https://sspai.com/post/95404</guid>
            <pubDate></pubDate>
            <updated>Tue, 21 Jan 2025 03:06:37 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: <Git, 原子化提交, 版本管理, 提交记录>
<br>
<br>
总结: 本文探讨了在软件开发中使用 Git 进行版本管理的技巧，强调了「原子化」提交的重要性，即每个提交只完成一项任务，以提高代码管理的效率和可追溯性。作者分享了多个实例，展示了如何通过原子化提交来避免后续开发中的麻烦，如排错和复盘困难。此外，文中还介绍了如何使用 `git rebase` 合并琐碎提交和调整提交顺序，以保持提交记录的清晰和规范。最后，作者建议在项目未成型时使用 `git commit --amend` 来保持提交记录的整洁。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>作为一名软件开发者，Git 是我离不开的版本管理工具，它可以记录并追溯开发进程，功能强大，用法灵活多样。围绕着它诞生的协作平台 GitHub、Gitee 等也深入人心。</p><p>Git 本身就是一门学问，其重要性不亚于软件开发。在长期的开源软件开发维护的过程中，我长期与 Git 打交道，对 Git 有了更多的感悟，也探索了一些非常实用的技巧。这些技巧，充分发挥了 Git 本身的特性，极大改善了我使用 Git 管理项目的体验。</p><p>下面，我就来分享让我受益最深的几点技巧，希望能给读者朋友们一些启发。</p><h2>「原子化」提交，一个提交只做一件事</h2><p>小时候，老师和长辈或许都告诫我们，在做事情的时候要「一心一意」，不要分散注意力到其他的事情上，这样做事才会高效、有成果。</p><p>一旦没有遵循「一心一意」的原则，那么干正事的时候碰壁就再寻常不过。就拿我本人来说，做正事的时候「摸鱼」，狂欢一阵子后再回来，面对还没有完成的正式任务，我是容易一脸懵的：我做了啥？进度怎么样了？我刚刚是怎么攻关难题的来着？——显然，这导致了时间和精力的浪费，更不利于事后复盘和提升。</p><p>不单单是做事，在使用 Git 的过程中，做每一个提交时也需要「一心一意」，也就是「原子化」（atomic）——确保每个提交只完成一项任务。</p><h3>1）引例</h3><p>可能一些开发者在组织 Git 提交时，习惯让一个提交做多件事情，<strong>把多项各自独立且不相关联的功能修改都放在同一个提交里</strong>。比如：</p><ul><li>一个项目有 A、B、C 三个功能模块，作者对这三个模块都做了修改，还顺带在 2025 年来临之际修改了所有源码开头注释里版权说明的年份<sup class="ss-footnote" href="" title="例如，把「Copyright 2010-2024 Author.」修改为「Copyright 2010-2025 Author.」。">1</sup>。</li><li>一个算法函数有多个各自独立的部分，作者在一个提交里就对这几个部分做了修改。</li><li>作者原本在写 A 函数，但是发现 B、C、D 这几个函数的注释需要补充，于是统统做了修改，并放在同一个提交里。</li></ul><p>这种提交方式看似省事儿，但无疑会给后续的开发工作「埋雷」。</p><h3>2）为什么会「埋雷」？</h3><p>根据笔者自己的经验体会，如果一个提交做了不止一件事情，那么有可能会在你日后开发的时候，给你带来一些「麻烦」：</p><h4>0x00：难以排错</h4><p>也许在开发过程中，某个提交给项目引入了 Bug。当你好不容易找到了存在问题的提交，但却发现这个提交做了不止一件事，你还要花费额外的精力来定位造成 Bug 的地方。</p><p>而如果你有不止一个提交都没有做到「一心一意」，那么你就很难直接浏览提交记录来找到问题所在，你就不得不翻阅一个个提交，浪费成倍的精力。</p><h4>0x01：不便复盘</h4><p>很多时候，开发者需要复盘自己的提交记录，看看自己做了哪些工作。然而，<strong>假如一个提交做了不止一件事，那么就不便于复盘开发过程。</strong></p><p>例如，当你想要回顾某个功能的实现过程，找出实现该功能的提交时，却发现关键的代码都被混在几个大的、综合的提交里，难以找出。好比是考前复习的时候，你总结的关键知识点混在了一堆厚厚的复习资料里，自然会影响复习效率。</p><p>或许有些读者会选择详尽编写提交说明，通过检索提交说明来找出自己想要的提交。不过这带来的好处有限——你后续还是离不开使用 <code>git show</code>，在一长串「包罗万象」的 diff 记录中，找到真正想找的修改记录。</p><h3>2）「原子化」提交</h3><p>践行「原子化」提交的理念，以上的麻烦将不复存在。</p><p>C++ 从 C++11标准开始，引入了「原子操作」（atomic）特性，可以确保一个变量在同一时间只有一个操作者在读写，从而防止多线程抢占造成冲突。我借鉴了「原子操作」的理念，提出了「原子化」提交——也就是确保每个提交只完成一个任务，从而改进提交记录的组织方式，防止潜在的杂乱和冲突。</p><p>原子化提交最大的优势，在于<strong>提交记录简洁、可追溯、易于查错</strong>：</p><ul><li>使用 <code>git log</code> 浏览提交记录时，你的开发进程一目了然，可以精确到每个提交实现的功能、修复的 Bug，等等，十分利于复盘。</li><li>一旦某个提交出现问题，你可以快速浏览提交记录，短时间内找到可能存在问题的提交。然后，你就可以通过 <code>git checkout &lt;疑似有问题提交的前一个提交&gt;</code>，暂时回到应用该提交前的状态，来排查故障。</li><li>在实现一个新功能、修复一个 Bug 的时候，你可以先浏览提交记录，快速判定之前是否有做了相关工作，从而避免「无用功」。</li></ul><h3>3）实践「原子化」提交</h3><p>下面，我就以几个在实际开发场景中的例子，来演示「原子化」提交的操作。</p><h4>实例一：修复 Bug 的「原子化」提交</h4><p>假设你正在开发一个电商平台的项目，最近有用户反馈在使用优惠券时，无法正确抵扣金额。经过排查，你发现是优惠券计算逻辑中的一个 Bug。你修复了这个 Bug，并且为了提高代码的可读性，对相关代码进行了重构，将一些冗长的函数拆分成了更小的函数。</p><p>如果你遵循「原子化」提交的原则，你可以将这个过程分为两个提交：</p><figure class="table"><table><thead><tr><th>提交序号</th><th>提交信息（commit message）</th><th>提交内容</th></tr></thead><tbody><tr><td>1：专门修复 Bug</td><td><code>Fix discount calculation bug in coupon system</code></td><td>在这个提交中，你只修改了计算优惠券金额的代码，确保 Bug 被修复。</td></tr><tr><td>2：进行代码重构</td><td><code>Refactor coupon calculation code for better readability</code></td><td>在这个提交中，你对代码进行了拆分和重构，但不涉及任何 Bug 修复的逻辑。</td></tr></tbody></table></figure><p>这样做的好处是，<strong>如果后续发现修复 Bug 的代码引入了新的问题，你可以很容易地通过 </strong><code><strong>git log</strong></code><strong> 找到第一个提交，然后使用 </strong><code><strong>git checkout</strong></code><strong> 检出到修复 Bug 之前的版本</strong>，快速定位问题。同时，代码重构的提交也不会干扰到 Bug 修复的提交，使得提交记录清晰明了。</p><h4>实例二：新功能开发的「原子化」提交</h4><p>假设你正在开发一个在线教育平台，需要添加一个新的功能：允许用户上传视频作业。这个功能涉及到多个方面的开发，包括前端页面的设计、后端接口的编写以及数据库表结构的调整。</p><p>如果你遵循「原子化」提交的原则，你可以将这个功能的开发过程分为多个提交：</p><figure class="table"><table><thead><tr><th>提交序号</th><th>提交信息（commit message）</th><th>提交内容</th></tr></thead><tbody><tr><td>1：专注于前端页面设计</td><td><code>Design video assignment upload page</code></td><td>在这个提交中，你创建了新的 HTML 文件和 CSS 样式，实现了页面的基本布局和样式。</td></tr><tr><td>2：编写后端接口</td><td><code>Implement backend API for video assignment upload</code></td><td>在这个提交中，你创建了新的 API，实现了视频文件的接收和存储逻辑。</td></tr><tr><td>3：调整数据库表结构</td><td><code>Add database table for video assignments</code></td><td>在这个提交中，你创建了新的数据库表，用于存储视频作业的相关信息，如用户 ID、作业 ID、视频文件路径等。</td></tr></tbody></table></figure><p>通过这样的「原子化」提交，你可以清晰地记录每个功能模块的开发进度，便于后续的复盘和维护。如果某个模块出现问题，你可以快速定位到相应的提交，进行针对性的排查和修复，而不会被其他模块的代码干扰。</p><h4>实例三：性能优化的原子提交</h4><p>假设你正在开发一款合成器软音源插件，最近发现插件占用处理器资源过高，影响用户体验。经过分析，你发现是由于合成器的振荡器、滤波器算法优化不当，且编译参数存在问题，拖累性能。为了优化性能，你需要调整合成器算法，并修改编译系统的编译参数。</p><p>如果你遵循「原子化」提交的原则，你可以将这个优化过程分为多个提交：</p><figure class="table"><table><thead><tr><th>提交序号</th><th>提交信息（commit message）</th><th>提交内容</th></tr></thead><tbody><tr><td>1：优化振荡器算法</td><td><code>Optimize oscillator with SIMD</code></td><td>在这个提交中，你使用 SIMD 指令来改善振荡器的性能。</td></tr><tr><td>2：优化滤波器算法</td><td><code>Optimize filter with SIMD</code></td><td>在这个提交中，你同样使用了 SIMD 指令，来提升滤波器的工作效率。</td></tr><tr><td>3：优化编译系统的编译参数设置</td><td><code>Enable compiler optimization</code></td><td>在这个提交中，你为编译系统添加了编译器优化参数，使编译器充分优化代码性能。</td></tr></tbody></table></figure><p>通过这样的原子化提交，你可以清晰地记录每个优化措施的实施过程，便于后续的评估和维护。如果某个优化措施带来了新的问题，你可以快速定位到相应的提交，进行针对性的排查和修复，而不会被其他优化措施的代码干扰。</p><h3>4）原子化提交的潜在优势</h3><p>值得一提的是，原子化提交除了有利于你自己的代码管理，还能起到「利他」的作用。</p><p>在 GitHub 等开源社区中，原子化提交可以方便其他开发者浏览你的提交记录和开发进程，使你的开源成果更好惠及他人。井井有条的提交记录，还可以给他人留下好印象，彰显你的专业水准。</p><p>另一方面，像 Linux 这样的大型项目，每个提交也都是原子化的，并且更加规范，这大大方便了二次开发时对新特性的反向移植工作。</p><p>我自己也在做 Android 内核的适配，曾经将新版本内核的特性反向移植到华为 P6 的 3.0.6 内核中。开发过程中，我会从新版本内核的提交日志中找到与某个特性有关的补丁，然后将其应用到当前内核中，几乎是一找一个准，节省了在海量代码中「找重点」的精力。</p><p>可见，原子化提交利己利人，具有非常显著的潜在优势，受益不只一点点。</p><h2>善用 <code>git rebase</code>，合并细碎提交</h2><p>记得大概是 2018 年，我在刷知乎的时候见到一个提问：<a href="https://www.zhihu.com/question/61283395" target="_blank"><i>《Git commits 历史是如何做到如此清爽的？》</i></a>，提问者非常惊讶于知名前端框架 Vue.js 源码库提交记录的干净、清爽。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/08/0f2275f4985a9701132c5d73248e46fb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><a href="https://github.com/vuejs/core/commits/main/" target="_blank">Vue.js core 组件提交记录</a>的一部分。</figcaption></figure><p>就在这个问题下，作者尤雨溪（Evan You）<a href="https://sspai.com/post/Git%20commits%E5%8E%86%E5%8F%B2%E6%98%AF%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E5%A6%82%E6%AD%A4%E6%B8%85%E7%88%BD%E7%9A%84%EF%BC%9F%20-%20%E5%B0%A4%E9%9B%A8%E6%BA%AA%E7%9A%84%E5%9B%9E%E7%AD%94%20-%20%E7%9F%A5%E4%B9%8E%20https://www.zhihu.com/question/61283395/answer/186122300" target="_blank">现身说法</a>：</p><blockquote><p><strong>多用 rebase。</strong></p></blockquote><p>就是大佬这短短三个字的经验谈，让我对 git rebase 这个功能产生了浓厚的兴趣。那时的我恐怕也不会想到，后来的我会如此频繁地使用 rebase，从而摆脱既往使用 Git 时提交记录琐碎、杂乱的问题，离正确使用 Git 更近一步。</p><h3>1）琐碎的提交从何而来？</h3><p>大家都知道，作为版本管理系统，Git 要保证提交记录可靠、可追溯，因此不能像文本编辑那样随意更改提交记录，最多只提供 <code>git commit --amend</code> 功能来允许你更改最新的提交。</p><p>但在开发过程中，或许你不太可能时时刻刻像 Vue.js 的提交记录那样，使自己每个提交都保持清爽、规范。回头使用 git log 浏览提交记录，你可能会发现你提交了太多琐碎的内容，「细致」到写一行代码、修一个错别字、修一个注释都有单独的提交。</p><p>很多时候这些提交是很琐碎的，没有必要单独保留，好比是你在文字处理软件中每写一句话就按“保存”，而每个修改都被单独保存成了一个文件。久而久之，提交记录就变得冗长琐碎，管理的时候就很难追溯到有用的、重要的提交。</p><p>这个时候， <code>git rebase</code> 就派上用场了。</p><p>Git 的设计师考虑到用户整理提交记录的需求，于是就设计了 <code>git rebase</code> 这一功能，允许你合并、编辑、重排已有的提交，使修改后的提交井然有序，就像 Vue.js 的提交记录那样清晰。</p><h3>2）实战演示如何合并琐碎提交</h3><p>以下面这个提交记录为例，记录了某项目从零开始写 <code>main()</code> 函数的过程，仅仅是添加文本输出与修改注释的提交就有好几个。</p><blockquote><p><strong>注意：</strong>假设这些提交彼此之间没有冲突，每个提交都是在原有提交之上的微调。</p></blockquote><pre class="language-shell"><code>$ git log --pretty=oneline    # 使用单行模式输出提交记录。最新的提交在前。
3a51f37493191451413b8dc7428d63351ce4b1e3 (HEAD -&gt; main, origin/main) main: 修改注释中的错别字
6587eeb437c8b139965085ddf99bd72bae682f89 main: 添加注释
61b04c318c24434996587eeb437c8b13996587e6 main: 添加操作结束的文本输出
61500445ebae1eb855ab216c6bbcec6ee73bd270 main: 微调操作开始的文本
7dad6bec684949ab0188085ddf99bc724c7b7b59 main: 添加操作开始的文本输出
996587eeb437c8b13996451413b8dc7603452f32 main: 添加基本文本输出
554bb6603452f3bf5705ac200effbdfc0aa97465 main: 创建main函数</code></pre><p>接下来，笔者就要把所有提交都合并到第一个提交「<code>main: 创建main函数</code>」<i>（以下简称「目标提交」）</i>当中。</p><h4>0x00：检查代码树是否有未提交的更改</h4><p>为了防止 rebase 弄乱代码仓库，Git 强制要求你的工作区「干净」，也就是不存在已经修改但没有提交的文件。否则，你是没有办法 rebase 的。</p><p>根据你的开发进度，你可以先提交修改；或者是使用 <code>git stash</code> 将修改暂时保存起来，等到完成 rebase 后再运行 <code>git stash pop</code> 恢复你的修改。</p><h4>0x01：进入 git rebase 模式</h4><p>使用 <code>git log</code> 查看提交记录，记住「目标提交」的 ID。然后，运行以下命令，开始 rebase：</p><pre class="language-shell"><code>git rebase -i 554bb6603452f3bf5705ac200effbdfc0aa97465~</code></pre><p>这个命令，允许你修改从「最新提交」到「目标提交」在内的所有提交。<strong>注意不要漏了提交 ID 后面的波浪线，否则会把「目标提交」给漏掉</strong><sup class="ss-footnote" href="" title="波浪线的含义：选中你指定提交的前一个提交。只有加上波浪线，git rebase 才会包含你指定的那个提交。（其实就是开区间与闭区间的区别。）">2</sup><strong>。</strong></p><p>稍等片刻，Git 会自动打开文本编辑器（通常是 Vim 或 Nano），列出一系列提交。其中：</p><ul><li><strong>较新的提交列在文档的后面</strong><sup class="ss-footnote" href="" title="即：越靠下的行，对应的提交越新。">3</sup><strong>，顺序是与 </strong><code><strong>git log</strong></code><strong> 相反的；</strong></li><li>每一行前面的 <code>pick</code> 是操作指令，意为采用该提交。这是默认的行为。</li></ul><pre class="language-shell"><code>pick 554bb660 main: 创建main函数
pick 996587ee main: 添加基本文本输出
pick 7dad6bec main: 添加操作开始的文本输出
pick 61500445 main: 微调操作开始的文本
pick 61b04c31 main: 添加操作结束的文本输出
pick 6587eeb4 main: 添加注释
pick 3a51f374 main: 修改注释中的错别字</code></pre><h4>0x02：合并提交</h4><p>在本例中，从<code>996587ee</code> 到<code>3a51f374</code> 的这几个提交，都是要并入「目标提交」的提交。</p><p>我们把这些提交对应行行首的 <code>pick</code> 改为 <code>fixup</code> （或单个字母“<code>f</code>”）。<code>fixup</code> 指令的作用是合并提交，但是只保留前一个提交（相邻一个比它早的提交）的说明。如下所示：</p><pre class="language-shell"><code>pick 554bb660 main: 创建main函数
f 996587ee main: 添加基本文本输出
f 7dad6bec main: 添加操作开始的文本输出
f 61500445 main: 微调操作开始的文本
f 61b04c31 main: 添加操作结束的文本输出
f 6587eeb4 main: 添加注释
f 3a51f374 main: 修改注释中的错别字</code></pre><p>随后，保存文件并关闭编辑器，Git 就会自动开始 rebase，一个个把新的提交并入相邻的前一个提交中，直到目标提交。这样，那些琐碎的提交都被并入我们的目标提交中，如此一来提交记录就清爽了不少：</p><pre class="language-shell"><code>$ git log --pretty=oneline    # 使用单行模式输出提交记录
f5815166356e85a5fe244f6024c2e401f04b10fa (HEAD -&gt; main, origin/main) main: 创建main函数</code></pre><p><strong>如果你希望保留相关提交的说明文本（以备参考等），那么你可以使用 </strong><code><strong>squash</strong></code><strong> 指令（或单个字母“</strong><code><strong>s</strong></code><strong>”）</strong>，保存文件并关闭编辑器后， Git 会打开一个新文档，在这里你可以检查、修改提交说明。</p><blockquote><p><strong>注意：</strong><br />经过 rebase 之后，原本的「目标提交」ID 会发生变化，因为 Git 实际上生成了一个新的提交。</p></blockquote><h3>3）如果琐碎的提交是后来才做出的</h3><p>随着项目开发的推进，你达成的目标越来越多，提交数量也随之增长。但你发现一个早期编写的功能里，注释、代码缩进这些细节存在问题，于是再做了几个提交来修改。</p><p>现在，你想把这些琐碎的修改合并到该功能的提交中。此时你依然可以运用 <code>git rebase</code>，先调整提交顺序，然后再使用 <code>fixup</code>（或 <code>squash</code>）指令来合并提交。</p><h4>0x00：准备工作</h4><p>在继续操作之前，你需要确保仓库里没有未提交的更改。</p><p>另一方面，你还要保证那些琐碎的提交不与你既往的修改产生冲突。比如说，如果你的提交除了修改注释，还顺带修改了函数结构、变量定义等内容，那么很可能会与你的其他提交造成冲突，需要你手动干预，造成不必要的麻烦。</p><blockquote><p><strong>注意：</strong><br />假设下文的提交彼此之间没有冲突，每个提交都是在原有提交之上的调整。</p></blockquote><h4>0x01：进入 rebase 模式，重排提交顺序</h4><p>在运行 <code>git rebase</code> 之前，你需要通过 <code>git log</code> 检索提交日志，找到你的「目标提交」。</p><p>在下面的例子中，目标提交是<code>554bb660</code> <i>（「创建 main」函数）</i>，你的任务就是要把你的目标是把 <code>3a51f374</code> 与 <code>6587eeb4</code> 这两个琐碎的提交合并到 <code>554bb660</code> 这个提交中。<sup class="ss-footnote" href="" title="这里是一个简化版的例子。实际的项目当中，你的「目标提交」与待合并的琐碎提交之间可能相隔十几个甚至几十个提交。">4</sup></p><pre class="language-shell"><code>$ git log --pretty=oneline    # 使用单行模式输出提交记录
...
3a51f374 main: 修改注释中的错别字
6587eeb4 main: 修正代码缩进
996587ee process: 使用libfftw3，优化合成器算法逻辑
34e87ac3 process: 创建process函数
554bb660 main: 创建main函数
...</code></pre><p>然后，运行 <code>git rebase</code> 命令：</p><pre class="language-null"><code>git rebase -i 554bb660~</code></pre><p>此时， Git 依然会打开一个文本编辑器，内容如下：</p><pre class="language-null"><code>pick 554bb660 main: 创建main函数
pick 34e87ac3 process: 创建process函数
pick 996587ee process: 使用libfftw3，优化合成器算法逻辑
pick 6587eeb4 main: 修正代码缩进
pick 3a51f374 main: 修改注释中的错别字</code></pre><p>我们在 <code>git rebase</code> 给我们打开的文本编辑器里，把<code>3a51f374</code> 与 <code>6587eeb4</code> 这两个提交对应的行，<strong>整体复制到 </strong><code><strong>554bb660</strong></code><strong> 的后面，并将原有的行注释掉</strong>。就像下面这样：</p><pre class="language-shell"><code>pick 554bb660 main: 创建main函数

# 将提交所对应的行复制到我们的目标提交后面
pick 6587eeb4 main: 修正代码缩进
pick 3a51f374 main: 修改注释中的错别字

pick 34e87ac3 process: 创建process函数
pick 996587ee process: 使用libfftw3，优化合成器算法逻辑

# 为保险起见，将原有的行注释掉，而不是直接移动
#pick 6587eeb4 main: 修正代码缩进
#pick 3a51f374 main: 修改注释中的错别字</code></pre><blockquote><p><strong>警告：</strong><br />不要修改 <code>pick</code> 后面的内容，尤其是提交 ID，否则提交记录可能会发生混乱。</p></blockquote><h4>0x02：合并提交</h4><p>确认提交顺序无误后，将待合并的提交对应行行首的 <code>pick</code> 指令改为 <code>fixup</code> （或 <code>squash</code>），如下所示：</p><pre class="language-shell"><code>pick 554bb660 main: 创建main函数

# 将提交所对应的行复制到我们的目标提交后面
fixup 6587eeb4 main: 修正代码缩进
fixup 3a51f374 main: 修改注释中的错别字

pick 34e87ac3 process: 创建process函数
pick 996587ee process: 使用libfftw3，优化合成器算法逻辑

# 为保险起见，将原有的行注释掉，而不是直接移动
#pick 6587eeb4 main: 修正代码缩进
#pick 3a51f374 main: 修改注释中的错别字</code></pre><p>保存文件后，Git 随即开始 rebase 工作，这样我们就可以化琐碎为清爽，得到一个干净的提交记录了。</p><h3>3）注意事项</h3><p><strong>在进行 rebase 前，务必要检查你要合并的提交与「目标提交」之间是否存在冲突。</strong>一旦存在冲突，那么 <code>git rebase</code> 就无法继续，会要求你手工修改你的仓库代码来处理冲突，这需要更多的时间和精力——因为你要保证代码正常无误。</p><p>另一方面，经过 rebase 合并所得的提交，本质上是一个全新的提交，并且也改变了原有的提交记录，因此如果别人 fork 了你的代码，在与你的仓库同步时必定会发生冲突。你或许需要告知你的团队成员，或者是通过 README 来告知代码共享平台<sup class="ss-footnote" href="" title="例如 GitHub、Gitee。">5</sup>上的用户，告诉他们使用 <code>git pull --rebase</code> 来同步你的修改。</p><h2>提交顺序不满意？也可以用 rebase 搞定</h2><p>我自己在找到开发项目的新灵感后，会马上新建一个 Git 仓库，开始动手实践，并把我写的源代码提交到仓库里。然而当我想进一步把仓库上传到 GitHub 时，却发现：我忘了加上许可协议、README 和 <code>.gitignore</code>！</p><p>考虑到这些文件都是在新建项目时就要添加的，如果我在完成了一部分程序功能后补上去，再回看 Git 提交记录，总是会觉得格外「别扭」。在这样的情况下，<strong>我依然可以运用 git rebase，单独调整提交顺序，还我自己一个科学有序的提交记录。</strong></p><h3>1）实践如何调整提交顺序</h3><p>这里举一个高度简化的例子：假设笔者有一个项目，已经完成了程序的主体开发工作，后来才补上 README 与许可协议。提交日志如下（较新的提交在前面）：</p><pre class="language-shell"><code>$ git log --pretty=oneline    # 使用单行模式输出提交记录
0fb4a3b0 添加 README.md
acbc6080 添加许可协议（GPLv3）
a841dbc1 UI 的 bug 修复
16f688a6 DSP 性能优化
75ca23f6 完成 UI 开发
277aad5f 完成 DSP 开发
eb323b0e 初始提交（Initial commit）</code></pre><p>我希望把与 README、许可协议相关的提交──也就是 <code>0fb4a3b0</code> 、<code>acbc6080</code> ──挪到时间顺序上的初始提交之后，也就是提交日志中初始提交的前一行。</p><h4>0x01：打开 git rebase</h4><p>在本例中，我已经确定好了「目标提交」，也就是初始提交，并且已经确保工作区没有未提交的代码。</p><p>然后，运行 git rebase，定位到目标提交：</p><pre class="language-shell"><code>git rebase -i eb323b0e</code></pre><p>接下来 Git 会打开文本编辑器，显示以下内容（较新的提交在文档的后面）：</p><pre class="language-shell"><code>pick 277aad5f 完成 DSP 开发
pick 75ca23f6 完成 UI 开发
pick 16f688a6 DSP 性能优化
pick a841dbc1 UI 的 bug 修复
pick acbc6080 添加许可协议（GPLv3）
pick 0fb4a3b0 添加 README.md</code></pre><p>需要注意的是，git rebase 不能显示初始提交，所以我们能看到的最早的提交是紧邻初始提交之后（比初始提交新）的第一个提交。</p><h3>0x02：开始挪动</h3><p>先把<code>0fb4a3b0</code> 、<code>acbc6080</code> 这两个提交对应的行整体复制到 <code>277aad5f</code> （也就是初始提交后的第一个提交）前面，然后将原有的那两行注释掉，如下所示：</p><pre class="language-shell"><code># 将提交所对应的行复制到我们的目标提交后面。
# 本例中的目标提交是初始提交，所以我们实际上是把要挪动的提交放在 git rebase 文档的最前面
pick 0fb4a3b0 添加 README.md
pick acbc6080 添加许可协议（GPLv3）

pick 277aad5f 完成 DSP 开发
pick 75ca23f6 完成 UI 开发
pick 16f688a6 DSP 性能优化
pick a841dbc1 UI 的 bug 修复

# 为保险起见，将原有的行注释掉，而不是直接移动
#pick acbc6080 添加许可协议（GPLv3）
#pick 0fb4a3b0 添加 README.md</code></pre><p>确认无误后，直接保存，此时 Git 就会自动开始 rebase 工作，稍等片刻再查看提交记录，你会发现提交顺序变了，README 与许可协议所对应的提交就出现在了初始提交的后面，大功告成。</p><h3>2）注意事项</h3><p>考虑到 rebase 时可能会面临的冲突，你需要三思而后行。</p><p>通常只建议重排那些对其他提交记录几乎没什么干扰的提交，例如你的提交只创建、修改了某一个特定的文件（README、许可协议这样的文件）。若重排不慎，你就不得不花费大量的精力来处理 rebase 的冲突，还有可能把提交记录弄乱。<sup class="ss-footnote" href="" title="一个典型的例子是：提交001创建了一个新函数，提交002修改了该函数的内容。如果你重排时把002放在001的前面（即，时间更早的位置），那么必定会造成合并冲突。">6</sup></p><p>同样地，你还需要告知你的团队成员或用户，使用 <code>git pull --rebase</code> 来合并你的更改。</p><h2>对于未成型项目，<code>git commit --amend</code> 也许更适合你</h2><p>git commit 是 Git 用于提交修改的命令。它有一个参数 <code>--amend</code>，允许你修改最新一次提交的内容。有时你发现刚刚提交的代码有错误，或者是提交说明有问题，但是你不想再新建一个提交来修正这些错误，那么你就可以使用 <code>git commit --amend</code> 这个命令。</p><p>然而，对我来说，<code>git commit --amend</code> 的用途远不止于此。<strong>在项目还未成型的阶段，我使用它来保持提交记录的清爽。</strong></p><h3>1）为什么我会常用 <code>git commit --amend</code>？</h3><p>我开发的项目，主要是将现有的开源音频插件移植到 <a href="https://github.com/DISTRHO/DPF" target="_blank">DPF</a> 这个跨平台框架<sup class="ss-footnote" href="" title="DPF 全称 DISTRHO Plugin Framework，是一款跨平台音频插件开发框架，让你用一套代码库就可以生成多种音频插件格式，包括 VST 2.4、VST3、LV2、CLAP，同时支持 Windows、macOS 与 Linux 平台。">7</sup>，这往往是「摸着石头过河」——无论是 DPF 还是被移植的插件，都缺乏文档，全靠我自己摸索。</p><p>在早期阶段，代码文件结构、模块和功能代码、编译系统等都还没有定稿，程序也只实现了部分功能：这就是未成型的状态。我个人习惯一边写功能一边调试，常常反复调整代码结构和算法，直到真正实现我预期的目标为止。</p><p><strong>这，往往意味着我要持续修改源代码库。</strong>如此背景之下，如果每个修改都单独提交到仓库里，那么就意味着仓库里会有数十甚至上百条极其琐碎的提交记录，待到项目成型时还要用 <code>git rebase</code> 来整理提交。你可以想象一下，用 WPS 写文章，每写一句话就另存一个文件，是什么样的感觉。</p><h3>2）如何妙用 <code>git commit --amend</code>？</h3><p>为了解决上述问题，<code>git commit --amend</code> 就成为了我最常用的操作之一。我会采用这样的思路：</p><ul><li><strong>第一步，</strong>用一个提交来存放项目成型前的所有开发工作。提交说明为「<code>Early development (WIP!)</code>」，其中「<code>WIP（Work In Progress）</code>」表示该提交随时可能被覆盖。做出这个提交之后，就不要再做新的提交。</li><li><strong>第二步，</strong>每次完成一部分功能，确认代码编写与程序运行无误时，就使用 <code>git add</code> 命令来将修改过的文件暂存（stage）起来，随后使用 <code>git commit --amend</code> 更新这个提交的内容。</li><li><strong>第三步，</strong>继续完成开发，直到项目成型。此时，再运行 <code>git commit --amend</code>，重新修改提交说明，将「<code>WIP</code>」等字样删除，代表我的早期开发工作已经定稿。</li></ul><p>我个人偏向在项目成型之后，才开始转变为以一个个单独提交的方式来持续开发。这里的「成型」，大致可理解为代码结构稳定，程序预期功能已经实现，至少有可以跑起来的 Alpha 版本推出。</p><p>如此一来，提交记录就会变得清爽，不会让琐碎的早期开发记录「挤占」你的 git log，事后也不需要再单独花时间来 rebase。</p><h3>3）注意事项</h3><ul><li>由于这种方法并不会为每个更改留下单独的提交，后续难以通过 <code>git log</code> 回溯，故只建议在项目未成型时使用。如果你不放心，依然可以每做一组工作就提交一次，对此我建议在提交说明里做标记，以备项目成形后再 rebase 提交记录。</li><li>在 <code>git commit --amend</code> 之前，也务必确保程序与代码无误，以免混乱。</li></ul><p>除此之外，当你在为你的项目添加新功能时，你也可以在原型设计、测试的阶段使用<code>git commit --amend</code> ，因为这个过程常常就像写一篇新文章，你或许也不希望每写一句话就又来另存一个新文档。</p><h2>写在最后</h2><p>在日常与 Git 打交道的过程中，我一直致力于精进 Git 的使用。上面这几点技巧，就是我自己的实践成果，着力于让提交日志更清爽、规范，方便后续的维护。让我们再来回顾一下：</p><ul><li>使用「原子化」提交，每个提交只做一件事，利于管理、维护和回顾你的开发进度；</li><li>灵活运用 <code>git rebase</code>，合并细碎的提交，按需要重排提交，使提交记录清爽、规范；</li><li>项目未成型时，活用 <code>git commit --amend</code>，保持提交记录清爽。</li></ul><p>当然，以上的技巧，更多体现出我个人的使用习惯，客观上也改善了我自己 Git 仓库的质量。相信我的分享能为感兴趣的读者朋友们提供参考，一同将 Git 用得更自在。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95757</id>
            <title>派早报：EA Origin 应用将停运，IDC 发布 2024 年中国手机市场报告等</title>
            <link>https://sspai.com/post/95757</link>
            <guid isPermaLink="false">https://sspai.com/post/95757</guid>
            <pubDate></pubDate>
            <updated>Tue, 21 Jan 2025 00:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: EA, Origin, 智能手机, AI开发环境  
<br><br>  
总结: EA宣布其Origin应用将于2025年4月17日关停，用户将迁移至EA app，主要因Origin基于旧版操作系统，存在安全隐患。IDC报告显示，2024年中国智能手机市场出货量同比增长，前五大厂商为Apple、vivo、华为、小米和荣耀。字节跳动发布了面向海外的AI中文开发环境IDE Trae，支持多种编程功能。月之暗面推出Kimi k1.5多模态思考模型，声称其能力超越现有模型。Google将支持沉浸式音频格式Eclipsa Audio，预计将为内容创作者提供新机遇。 </div>
                        <hr>
                    
                    <h2>你可能错过的新鲜事</h2><h3>EA 宣布 Origin 将于 2025 年 4 月 17 日关停</h3><p>EA 于 1 月 18 日发布通知，宣布旗下的 Origin 应用将于 2025 年 4 月 17 日停运，后续将切换到 EA app 平台。这一次的关停的主要原因是 Origin 客户端是基于旧版操作系统开发的，而无论是微软还是 Apple 都已经停止对旧版操作系统的支持，随着时间推移也势必导致安全问题，而迁移到基于现代操作系统的 EA app 则是最佳的选择。<a href="https://help.ea.com/en/help/ea/ea-app/update-operating-system-for-ea-app/">来源</a></p><h3>IDC：2024 年全年中国智能手机市场触底反弹</h3><p>1 月 20 日，市场研究机构 IDC（国际数据公司）发布 2024 年中国智能手机市场最新季度跟踪报告。报告显示，2024 年第四季度，中国智能手机市场出货量约 7643 万台，同比增长 3.9%。市场份额方面，2024 年第四季度前五大厂商分别为 Apple、vivo、华为、小米、荣耀与并列第五的 OPPO，其中 vivo、华为与小米同比增幅达 14.0%、22.8%、28.4%，为 Android 带去 7% 的市场增幅。全年范围看，市场份额前五的厂商分别为 vivo、华为、Apple、荣耀与 OPPO。</p><p>值得一提的是，2024 年第四季度，折叠屏手机出货量自 2022 年第二季度后首次出现同比下降，但全年出货量仍达 917 万台，同比增长 30.8%。2024 年折叠屏市场份额前五的厂商分别为华为、荣耀、vivo、小米、OPPO，其中华为市场份额达 48.6%。<a href="https://www.idc.com/getdoc.jsp?containerId=prCHC53105325" target="_blank">来源</a></p><figure class="image ss-img-wrapper"><img alt="XUZTbxkfuoWmUbxrj5tcMDtsnye" src="https://cdnfile.sspai.com/editor/u_/cu774j5b34temt4lrt4g.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>字节跳动发布面向海外的 AI 中文开发环境 IDE：Trae</h3><p>字节跳动于 1 月 19 日正式发布了一款面向专业的开发者提供服务的全新 AI Coding 产品 Trae，该 IDE 由字节跳动旗下新加坡公司 SPRING (SG) PTE.LTD. 提供服务，支持 AI 问答、代码自动补全、基于 Agent 的 AI 编程等功能，可以帮助程序员自动化完成开发任任务，并在一些项目中可以实现端到端开发（通过用户的提问直接生产一个完整的代码项目），该工具可选择简体中文或英文，并内置了 GPT-4o、Claude-3.5-Sonnet 模型供免费使用，目前仅支持 Mac 版本，未来将推出 Windows 版本。<a href="https://www.trae.ai/">来源</a></p><h3>月之暗面发布 Kimi k1.5 多模态思考模型</h3><p>1 月 20 日，月之暗面宣布推出 Kimi k1.5 多模态思考模型，宣称在 short-CoT 模式下，Kimi k1.5 的数学、代码、视觉多模态和通用能力大幅超越 GPT-4o 和 Claude 3.5 Sonnet；在 long-CoT 模式下，其数学、代码、多模态推理能力达到 OpenAI o1 正式版水平。该模型预览版将灰度上线 Kimi 官网与 app。<a href="https://mp.weixin.qq.com/s/BmOKGKjXP2tjmPyNdU0Hqg" target="_blank">来源</a></p><h3>Google 将通过 Android 和 Chrome 支持沉浸式音频格式 Eclipsa Audio</h3><p>Google 于 1 月 19 日在其官方博客上宣布，将在 Android 系统和 Chrome 浏览器中支持沉浸式音频格式 Eclipsa Audio，并会很快面向开发者推出 Eclipsa Audio 插件。Eclipsa Audio 基于沉浸式音频模型和格式（IAMF）的空间音频格式，IAMF 则是开放媒体联盟 AOMedia 推出的开源免专利费空间音频格式，Google 和三星为该开放媒体联盟的成员。借助 Eclipsa Audio，内容创作者可以为消费者提供空间音频，而此前创作空间音频主要局限在电影和音乐行业的专业人士。此外 Google 还表示，预计 2025 年下半年，多家电视制造商和条形音箱制造商也会推出支持该空间音频格式的设备，Google 和三星将推出认证和品牌授权计划，为消费者提供质量保证。<a href="https://9to5google.com/2025/01/19/eclipsa-audio-google-chrome-android/?open_in_browser=true">来源</a></p><h2>看看就行的小道消息</h2><ul><li>Elon Musk 于 1 月 20 日在 X 平台发布推文，表示正「考虑」恢复短视频平台 Vine。Vine 曾是一个拥有八年历史的短视频平台，于 2012 年被 Twitter（X 的前身）收购，其最大的亮点是通过 6 秒的创意短视频挑战模式，吸引了大量忠实用户，后续该应用渐渐被用户抛弃，Twitter 最终在 2016 年将其关闭。<a href="https://x.com/elonmusk/status/1880852037212291478">来源</a></li><li>微博数码博主 @体验more 称，OPPO Find N5（PKH110，非卫星通信版）将采用 SM-8750-3-AB，是采用 2+5 核设计的骁龙 8 Elite，比标准版少了一颗性能核。目前泄露的跑分成绩为单核 3083，多核 8865，与标准版骁龙 8 Elite 有明显差距。<a href="https://weibo.com/3108827753/PapB5nuwp" target="_blank">来源</a></li><li>由于海外网友大量涌入，小红书于 1 月 20 日的最新版本 app 火速上线翻译功能。上线早期不少用户发现该功能依靠大模型，且未做提示词屏蔽，导致大量用户开始使用翻译功能生成内容，包括食谱、代码、提示词等。目前该漏洞已基本完成封堵。据封堵前该功能就提示词的回应，翻译功能由智谱 GLM 提供服务。<a href="https://www.cnbeta.com.tw/articles/tech/1472606.htm">来源</a></li><li>1 月 20 日，爆料人 Evan Blass（@evleaks）发布了一条<a href="https://x.com/evleaks/status/1881274150351962611">源码截图</a>，截图显示除了 iPhone SE (4th Gen) 外，还有 iPad (11th Gen)、iPad Air 13 (M3)、iPad Air 11 (M3) 三台未发布的 iPad。此前，Mark Gurman 在爆料中有提及 iPad 11 会使用 A17 Pro 芯片与 8GB RAM 以支持 Apple Intelligence。<a href="https://www.macrumors.com/2025/01/20/new-ipad-air-models-with-m3-chip-leak/">来源</a></li></ul><figure class="image ss-img-wrapper"><img alt="JE55bYl6voZVCVxgLFxcUAf4n1d" src="https://cdnfile.sspai.com/editor/u_/cu774jdb34temtjvmqp0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>少数派的近期动态</h2><ul><li>少数派年度盘点回归，我们选出了 16 件产品，涵盖手机、平板电脑、智能家居、AI 模型等多个领域，并做成了富有交互感的页面，欢迎<a href="https://sspai.com/page/2024">查阅</a>并<a href="https://weibo.com/1914010467/Pa0U25do2">参与微博讨论和抽奖</a>。</li><li>少数派「大家给 Apple 的成绩单」2024 年结果已上线。你给 Apple 的 2024 年打几分？欢迎进入<a href="https://sspai.com/page/apple_report_2024">专题页</a>查阅，还可参与微博<a href="https://sspai.com/post/95746">话题讨论</a>与<a href="https://weibo.com/1914010467/Paup46FAj">抽奖</a>。</li><li>春节来点「科技年货」送人送己，少数派年终大促销开始啦。<a href="https://sspai.com/post/95456"><strong>进一步了解</strong></a></li><li>假期将至，你的旅途游戏清单列好了吗？<a href="https://sspai.com/bullet/1736744010"><strong>来分享一下吧</strong></a></li></ul><h2>你可能错过的文章</h2><ul><li><a href="https://sspai.com/post/95426">让新知识成为冒险游戏，用 AI 重构「学习」这件事</a></li><li><a href="https://sspai.com/post/95725">从打工小妹到创业大佬：折腾但精彩的搞钱人生</a></li><li><a href="https://sspai.com/post/95744">派评 | 近期值得关注的 App</a></li><li><a href="https://sspai.com/post/95746">满分五分，你给 Apple 的 2024 年打几分？</a></li></ul><p>&gt; 下载 <a href="https://sspai.com/page/client">少数派 2.0 客户端</a>、关注 <a href="https://sspai.com/s/J71e">少数派公众号</a>，解锁全新阅读体验 📰</p><p>&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95746</id>
            <title>满分五分，你给 Apple 的 2024 年打几分？</title>
            <link>https://sspai.com/post/95746</link>
            <guid isPermaLink="false">https://sspai.com/post/95746</guid>
            <pubDate></pubDate>
            <updated>Mon, 20 Jan 2025 10:25:32 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Apple, Vision Pro, M4 处理器, AI 浪潮  
<br><br>  
总结: 2024年，Apple推出了Vision Pro XR设备，带来了新的视听效果和交互方式，但其实用性和发展前景仍有争议。M4处理器的应用提升了iPad和Mac的性能，Mac mini成为亮点。iPhone和Apple Watch的升级较为谨慎，主要体现在RAM和屏幕尺寸的提升。Apple Intelligence的发布应对了AI浪潮，但在中国市场的前景仍待观察。面对监管环境的变化，Apple的生态系统逐渐开放，但品牌领导力面临挑战。少数派将继续收集用户对Apple的评价，期待2025年带来更多惊喜。 </div>
                        <hr>
                    
                    <p>Apple 的 2024 年从 Vision Pro 的高调亮相开始。这款开启了全新产品线的 XR 设备带来了令人惊艳的视听效果和交互范式，但围绕其实用性和发展前景的讨论，短期内预计还不会终结。M4 处理器先后登陆 iPad 和 Mac，两个产品线都由此获得更极致的外观和更强大的性能，Mac mini 更是成为年内最令人惊喜的新品之一。iPhone 和 Apple Watch 的升级相对谨慎，但 RAM 和屏幕尺寸的提升也为隔代升级的用户提供了「甜点」。</p><p>软实力方面，面对 AI 浪潮，Apple Intelligence 的发布交上了及时的答卷，也留下了仍待后续发展的悬念，在中国的前景尤其受到行业和消费者高度关注。面对快速变化的监管环境，App Store、NFC 等生态呈现出更多开放的迹象，但各利益相关方还在磨合中共同探索前进的方向和幅度。在中国，增开的零售店、应用实验室持续强化着 Apple 的「存在感」和服务能力，但竞争激烈的市场环境也对 Apple 的品牌领导力提出了新的挑战。</p><p>那么，对于 Apple 这个喜忧兼具的 2024 年，少数派的朋友们都会怎样评价呢？今年，我们连续第四年推出「大家给 Apple 的成绩单」策划，邀请到更多嘉宾，也结合时事热点对评分类目、问题设置做了更新，希望能够为大家呈现一份既反映共识、又体现个性的点评。</p><p>与去年一样，你可以在页面底部填写一份自己心目中的「成绩单」，然后和少数派嘉宾们的结果一起分享到 <a href="https://s.weibo.com/weibo?q=%23%E7%BB%99Apple%E6%89%93%E5%88%86%23">#给Apple打分#</a> 微博话题，2 月 10 日，我们将从分享用户中抽取 15 位送出招财水獭。期待看到你的观点，也希望 Apple 能在 2025 年持续为我们带来惊喜。</p><p><a href="https://sspai.com/page/apple_report_2024"><strong>访问专题页面</strong></a> | <a href="https://sspai.com/page/apple_report_2023"><strong>2023 年结果回顾</strong></a> | <a href="https://sspai.com/page/apple_report"><strong>2022 年结果回顾</strong></a> | <a href="https://sspai.com/post/70814"><strong>2021 年结果回顾</strong></a></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/704a14e63fed752683ee9a024d97c0a3.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/cb5e52b9dfe13f1c7d6db7a108cdee59.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/07ee21897e2e290550b15f886a60c9bd.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/96d05c9036dde30488901042f92625d6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/2243b3505f0a80832b668fc960cbab92.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/cc58673e5c44a1f29b4f40fb73ffb27b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/f4005cbdaec7cc2a38c30adf834301a1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/2bbb505be077306c8a37dd47632a24dc.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/0fc2e8df19206634bd79e2a33dd4f64e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/be327782597c37704038eeb06c4934dc.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><p><strong>方法</strong> 我们从 2024 年 11 月下旬至 12 月中旬期间，陆续向 33 名受访人发送了相同的问卷。问卷中仅含有少量背景信息、分类说明和官方资讯，不含有其他引导或提示性质的文本。问卷回收结束于 2025 年 1 月 3 日。</p><p>除为符合产品规范名称、语句通顺所做的必要编辑外，文章引用的评语均为所回收问卷中的原文。该等评语的权利由相应受访者保留，其内容不代表少数派立场。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95744</id>
            <title>派评 | 近期值得关注的 App</title>
            <link>https://sspai.com/post/95744</link>
            <guid isPermaLink="false">https://sspai.com/post/95744</guid>
            <pubDate></pubDate>
            <updated>Mon, 20 Jan 2025 09:55:06 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: <App推荐, 影视记录, 切换浏览器, 数字健康>
<br>
<br>
总结: 本文介绍了几款值得关注的新应用，包括Showly、Default Browser、Cobalt、DigiPaw和Horizon Live Wallpapers。Showly是一款开源的影视记录工具，提供全面的观影记录功能；Default Browser则是macOS上的快捷切换默认浏览器工具；Cobalt是一款在线下载工具，支持多种媒体格式的下载；DigiPaw主打数字健康，帮助用户管理手机使用时间；Horizon Live Wallpapers则提供动态壁纸，结合天气和月相变化。 </div>
                        <hr>
                    
                    <p>欢迎收看本期《派评》。你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们讨论。</p><h2>值得关注的新 App</h2><p>虽然少数派一直在为大家发现和介绍各平台上的优质 App，但仍有不少设计、功能、交互、体验都非常优秀的 App，还没有被我们发掘和介绍。它们可能是一款老 App，也可能是近期上架的新 App，我们会在这里介绍给你。</p><h3>Showly：数据更全面的开源影视记录工具</h3><ul><li>平台：Android</li><li>关键词：追剧、观影记录</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/69zxdqx8">@Noah_Choi</a>：买了 NAS 之后，总想要收藏各种资源反复观看，因此也衍生出了观影情况记录的需求。虽然国内有豆瓣之类的记录平台，但也会因为诸多原因缺少很多冷门资源的条目和信息，许多优秀剧集的幕后花絮、采访、纪录片等也没有收录。</p><p>而 Showly 就完美解决了我的记录需求，它就是一款数据非常全面并且简单易用的影视记录工具。应用可以非常简洁明了地展示当前正在追踪的影视剧，包括目前已经更新到多少集、你已经看过了多少集等等，由于它的数据来源是 track.tv，支持与平台的双向同步，我们不必担心数据缺失，很多电视剧的幕后花絮、纪录片等也能记录在册。</p><figure class="image ss-img-wrapper"><img alt="DxYOb7osfo0o7txI1dzc5fIYnTg" src="https://cdnfile.sspai.com/editor/u_/cu71p6db34temtjvmpr0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>不过 Showly 记录的逻辑和我们国内很多平台的逻辑有些差别。比如在豆瓣上，想看、在看、看过的标记都相当于加入到了我们的观看列表中，但在 Showly 里，标记看过的剧集和加入观看列表是两套独立的操作。</p><figure class="image ss-img-wrapper"><img alt="UUTubHCFooz9l0x80iccb0qfnZd" src="https://cdnfile.sspai.com/editor/u_/cu71p6lb34temupl6vc0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>另外，豆瓣上的标记一般都是以整个电影和整个剧集为单位进行标记，而 Showly 是以「集」为单位，如果你想要标注以前看过的影视剧，需要进入影视详情页，在下面选择每一季的复选框来标注观看进度。不过值得一提的是，Showly 提供了三种观看日期标注选项，分别是现在、自定义以及「剧集发布当日」，而不是像国内平台那样只能按照标注当天来记录时间。</p><figure class="image ss-img-wrapper"><img alt="XwnFbd1SkoSfprxqeWGcWzgTnOc" src="https://cdnfile.sspai.com/editor/u_/cu71p6tb34temupl6vcg.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>总体来看，Showly 虽然相当于是个套壳 track.tv 的记录工具，但使用起来清爽干净，没有多余的功能，也不需要忍受官方客户端各种 VIP 会员限制，而且它本身还是一个开源作品，作为轻度记录观影记录的工具来说绰绰有余。现在，你可以在 <a href="https://github.com/michaldrabik/showly">GitHub</a> 和 <a href="https://apt.izzysoft.de/fdroid/index/apk/com.michaldrabik.showly2">IzzyOnDroid</a> 免费下载 Showly。</p><h3>Default Browser：用快捷键切换默认浏览器</h3><ul><li>平台：macOS</li><li>关键词：切换默认浏览器、快捷键</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/914r3btn">@ElijahLee</a>：Default Browser，顾名思义，是 macOS 上一款快捷切换默认浏览器的小工具，它支持菜单栏、快捷键等多种便捷方式来快速切换浏览器。</p><p>下载安装 Default Browser 之后，应用会在macOS 的菜单栏添加一枚应用图标，并自动读取已经安装的浏览器，目前支持 Safari、Arc、Firefox、Chrome 等多种主流浏览器应用。应用为每一个浏览器分配了一个数字，这些数字即对应切换浏览器的快捷操作。</p><figure class="image ss-img-wrapper"><img alt="CwZ5b31VTocqFbxZY09csWLjnPd" src="https://cdnfile.sspai.com/editor/u_/cu71p75b34temtc0gru0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>使用 Default Browser 切换默认浏览器有两种方式。首先是通过菜单栏方式，点击菜单栏的应用图标，待弹出式窗口出现后，再点按对应的数字或者上下方向键，即可切换浏览器。第二种方式是通过快捷键，在应用的设置中，分配快捷键，比如 <code>Command - B</code>，待弹出式窗口出现后继续按数字键或者上下方向键。</p><figure class="image ss-img-wrapper"><img alt="MCyBbSHL3oh4kTx0xhGcaYfonyh" src="https://cdnfile.sspai.com/editor/u_/cu71p7db34temtc0grug.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Default Browser 还有一些贴心的功能。首先是菜单栏的图标有多种选择，包括浏览器的默认 icon 经纬地球，还有切换符号，还有我认为非常实用的方式：直观地在菜单栏显示当前默认浏览器的应用图标。</p><figure class="image ss-img-wrapper"><img alt="L5Ibbt3oWoNtJjxx5WZcv0Opnyf" src="https://cdnfile.sspai.com/editor/u_/cu71p7lb34temtjvmprg.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在应用的设置中，还可以设置隐藏菜单栏图标，只有在切换默认浏览器时，短暂地显示菜单栏图标。这样既可以保持菜单栏的简洁，同时能够在切换浏览器时提供提示。</p><p>Default Browser 还支持使用快捷指令、自动化、专注模式等方式来切换默认浏览器。添加包含 Default Browser 操作的快捷指令，并配置快捷键即可通过快捷指令来切换，在「系统设置 - 专注模式 - 过滤条件」中，选择 Default Browser 设置默认浏览器。自动化则是需要使用 <a href="https://apps.apple.com/app/id1594183810">Shortery</a>，设置时间、地点、Wi-Fi 等条件下，自动触发切换浏览器。</p><p>你可以在应用<a href="https://sindresorhus.com/default-browser#focus-filter">官网</a>购买 Default Browser，应用起始售价 4 美元。</p><h3>Cobalt：开源在线影音下载工具</h3><ul><li>平台：Web</li><li>关键词：下载器</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/ul0vcezb">@Snow</a>：Cobalt 是一款开源的在线下载工具，它可以帮你保存你喜欢的网站上的视频、音频、静态照片或 GIF 图。由于 Cobalt 依托于网页呈现，因而所有支持浏览器的平台均可适配。</p><p>Cobalt 的使用方法也非常简单，只需粘贴你想要下载的内容链接，点击 paste 按钮，Cobalt 就会自动解析并开始下载。当你的下载内容为图片时，Cobalt 会以网格图形式提供预览，方便你有选择性地下载；当下载内容为视频时，则可以在左下方的按钮选择下载纯视频/音频内容。</p><figure class="image ss-img-wrapper"><img alt="NOumbIWMgo7FzfxmVYrcqQVlnmd" src="https://cdnfile.sspai.com/editor/u_/cu71p7tb34temtc0grv0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>作为一款效率工具，Cobalt 可自定义项非常丰富。例如，你可以自定义优先下载的视频格式与分辨率、音频格式与比特率，针对 YouTube 部分内容，Cobalt 甚至还支持挑选不同语言音轨下载。它还提供了 4 种文件命名方式，方便用户管理下载内容。</p><figure class="image ss-img-wrapper"><img alt="DD2rb5UuboZoshxiJMxcZbOKnNB" src="https://cdnfile.sspai.com/editor/u_/cu71p85b34temtc0grvg.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>此外，Cobalt 还提供了一个测试版的媒体修复功能，可以将现有的编解码器数据复制到新的媒体容器中，或许可以解决一些信息丢失的问题，同时还可以提升与旧版软件的兼容性。你只需跳转至 Remux 一栏，并将需要处理的媒体文件拖入即可。</p><p>Cobalt 目前支持 YouTube、X（Twitter）、Pinterest、Tiktok、Instagram、Tumblr 等社交平台，不过由于是第三方工具，并不是每一项服务都非常稳定，例如支持的 B 站视频，目前就无法使用 Cobalt 下载。</p><p>你可以<a href="https://cobalt.tools/settings/download">点击此处</a>免费使用 Cobalt。</p><h3>DigiPaws：数字健康新方式</h3><ul><li>平台：Android</li><li>关键词：数字健康</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/5isr02uh">@Peggy_</a>：又一次坐上下班的公交车，车厢里此起彼伏的都是抖音、快手视频的声音，这边是小美的传奇经历，那边是大圣直击天灵盖的声音，还没等听完上个家人的惊爆价，转头又传来了秘闻要事。电子产品从来没有像今天这样分散着我们的注意力，吞噬着我们的时间。</p><p>现如今，越来越多手机厂商开始在手机里塞入各种数字健康功能来帮助用户戒除手机瘾，而类似的应用也层出不穷。今天介绍的 DigiPaws 也是一款主打数字健康的应用。其功能涵盖了随时开启专注时段并屏蔽特定应用、特定时间屏蔽特定应用、屏蔽关键词、手机使用统计等。优势在于功能更多、使用较为方便。</p><figure class="image ss-img-wrapper"><img alt="XDjAbcQcwoZDdzxCsKUcxx59ngc" src="https://cdnfile.sspai.com/editor/u_/cu71p85b34temtc0gs00.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在使用前我们需要授予 DigiPaws 相应权限，这里针对不同的功能选项，我们可以授予不同的无障碍权限，对于不需要的部分功能也可以选择不给予其对应权限。首先是专注模式，在这一功能下，我们可以根据自己的习惯来选择屏蔽导致我们分心的应用。每次要使用时，便可以点击开始专注，并灵活更改专注时长。</p><figure class="image ss-img-wrapper"><img alt="XHTsb8eawo0TgZxeaxacQBe5nBf" src="https://cdnfile.sspai.com/editor/u_/cu71p8lb34temupl6vd0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>其次便是应用屏蔽功能，我们可以选择所有想要屏蔽的应用，并设置警告界面出现的时间和具体内容，例如打开相应应用 5 分钟便弹出警告界面，当然我们可以结合自己的自律程度选择是否允许继续浏览应用。如果希望更加严格，那么便可以在到达规定时长后强制退出应用。当然了，我们安装应用的初衷毕竟还是为了娱乐，全天禁止的效果倒不如不安装。因而 DigiPaws 也允许我们设置多个时段，并在此时段内小小地「作弊」来使用某些已经屏蔽的应用。</p><figure class="image ss-img-wrapper"><img alt="X64abuAfyoL8AixA91Jczi4fnwh" src="https://cdnfile.sspai.com/editor/u_/cu71p8tb34temtjvmps0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>关键词屏蔽功能更加……一言难尽，只要手机屏幕上出现了我们添加的关键词，不论这个词出现在哪个位置，页面便会被快速定向到下面这个网页，轻易不要尝试。比如我添加了关键词「YouTube」，而这个应用又被我放在了主屏，所以就非常魔性地只要切到主屏，就得看一段劲歌热舞。</p><figure class="image ss-img-wrapper"><img alt="YrmfbvMOVol1orxWBpYczc8onle" src="https://cdnfile.sspai.com/editor/u_/cu71p8tb34temt4lrsig.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>其余功能由于篇幅有限，不再一一说明，如果你对 DigiPaws 感兴趣，可以通过 <a href="https://f-droid.org/packages/nethical.digipaws/">F-Droid</a> 下载体验。</p><h3>Horizon Live Wallpapers：跟随日月天气变化的动态壁纸</h3><ul><li>平台：Android</li><li>关键词：壁纸</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/liuxiaofengone">@化学心情下2</a>：虽说 Google Pixel 内置了动态壁纸，但官方原生提供的壁纸可谓是寥寥无几，尤其是我喜欢根据每天的日落日出来动态调整系统主题，所以很长一段时间都通过 Breezy Weather 实现背景壁纸的动态交替。不过每次看壁纸都是天气符号也略显单调，那么有没有同样支持浅色/深色主题切换，且支持节律的动态壁纸呢？</p><figure class="image ss-img-wrapper"><img alt="AlnIb9ha0o7G2cx6IR7c3jffnze" src="https://cdnfile.sspai.com/editor/u_/cu71p9db34temt4lrsj0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Horizon Live Wallpapers 是近期上架的一款融合了天气、月相、日出、日落的动态壁纸应用，支持根据日出日落生成不同的全天候动态壁纸。打开应用后，你可以选择壁纸集、设置天气和位置、选择控制方式、调整月相显示等等。</p><p>首先是壁纸集的设置，默认情况下是随机选定一个免费的壁纸，当然在这里面你可以单独选择壁纸的样式，大多数都提供了浅色/深色主题选项，除了免费的壁纸集也可以付费购买一些有更多样式的壁纸，比如有些付费壁纸除了白天和夜晚的主题之外，还有清晨以及傍晚的主题，一天下来会有更为丰富的视觉效果。</p><figure class="image ss-img-wrapper"><img alt="M5G4b9UX7ozaFxxQx5gcoQcUnyf" src="https://cdnfile.sspai.com/editor/u_/cu71p9lb34temupl6vdg.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这些变化其实是基于当地位置和天气所产生的，因此在 Horizon Live Wallpapers 中你需要单独设置天气和位置，在获取定位并打开天气+天气效果之后，动态壁纸上将会呈现当地的天气，比如下雪、或者下雨的效果，这样你打开手机桌面就能知道户外的天气是什么，结合原本壁纸上的风景还是相当有趣的。</p><figure class="image ss-img-wrapper"><img alt="VNoWbripto8q8sxhwKlcXiiJnpf" src="https://cdnfile.sspai.com/editor/u_/cu71pa5b34temupl6ve0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>除了天气之外， Horizon Live Wallpapers 还支持设置月相，也可以在动态壁纸上呈现月亮的升起以及月圆月缺的效果，你还可以将小组件放置在桌面用来当作天气预报提示使用，当然比起专业的天气应用还是比较羸弱的，所以只能说是一个天气情况的补充而已。</p><figure class="image ss-img-wrapper"><img alt="OIBkbzzFdoGhIwx9WpIcXDswntf" src="https://cdnfile.sspai.com/editor/u_/cu71padb34temtjvmpsg.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>总的来说，Horizon Live Wallpapers 更像是结合了天气的动态壁纸应用，更为丰富的壁纸画面场景、结合月相、天气、以及日升日落的动态变化，让你的 Android 手机桌面变成一个不断变化的风景画，你可以在 <a href="https://play.google.com/store/apps/details?id=com.seresk.horizon.realtime.live.wallpapers">Play Store</a> 免费下载并使用。</p><h2>不容错过的 App 更新</h2><p>除了「新鲜」App，App Store 中的许多老面孔也在不断迭代、更新，增加更多有趣和实用的功能。少数派希望帮你筛选 App Store 中值得关注的 App 动态，让你快速了解 App 和开发者们的最新动态。</p><h3>Craft：新年首次更新及 2025 年更新计划</h3><ul><li>平台：iOS / iPadOS / macOS / Windows / Web / visionOS</li><li>关键词：文档协作、笔记工具</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/whoops">@Vanilla</a>：继去年底的大版本更新之后，知名在线笔记应用 Craft 又在新年伊始为我们带来了 2025 年的第一次更新，同时也预告了新一年中的更新计划，包括了导航、文件组织、键盘快捷键、收藏与任务、搜索、图像处理、AI、Windows 应用以及提升性能，不过其中最让我感到兴奋的是标签功能，不知道等了这么久是否能在 2025 年如愿以偿。</p><p>在今年的第一个新版本中，最重要的一个更新内容是 Craft 支持了 Apple Intelligence 中的 Image Playground（图乐园）功能。如果你将设备更新到了 iOS 18.2 或者 macOS 15.2 以上的版本，同时设备支持 Apple Intelligence，那么就可以在 Craft 中直接调用图乐园功能来创建 AI 图像。</p><p>目前，我们可以在 Craft 中的封面图片、行内图片和胶带部分使用图乐园功能创建图像，只需要点击 Create 按钮即可在应用内唤起图乐园界面，然后我们可以通过文字描述、上传图片、预设模版等来创建图像，完成后直接插入到 Craft 中使用。</p><figure class="image ss-img-wrapper"><img alt="VvUdbOfSZoUmNfxZwJLcSnwRnKb" src="https://cdnfile.sspai.com/editor/u_/cu71palb34temtjvmpt0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="KKQtbT3daoEIERxmMd5cPjohnaf" src="https://cdnfile.sspai.com/editor/u_/cu71pb5b34temupl6veg.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="R0EYbPESSop408xTar0cSQsEnf9" src="https://cdnfile.sspai.com/editor/u_/cu71pb5b34temupl6vf0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>另外一个新版本主要更新内容是上下文菜单。Craft 在新版本中重新设计了上下文菜单的样式，放弃了 Craft 自己的 UI 风格，而是采用了 iOS 系统原生样式，因此在 iOS/iPadOS 平台上使用 Craft 时会看起来更加和谐。</p><p>新的上下文菜单现在已经深入了Craft 应用中的各个地方，包括文档视图、任务视图、日历视图等，我们都可以通过原生样式的上下文菜单和次级菜单来获得更多的操作功能。</p><figure class="image ss-img-wrapper"><img alt="QBUWbi7vcomQbOxN4TicTcoynJd" src="https://cdnfile.sspai.com/editor/u_/cu71pblb34temtjvmptg.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="DXWMbc3A4o9eYpxYv9ncOAkknih" src="https://cdnfile.sspai.com/editor/u_/cu71pbtb34temtc0gs0g.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>除了上述提到的更新内容，Craft 还在新版本中更新了图片库、增加了日期选择器上的字体大小选项、更新了拼写检查的实线颜色等，具体内容可以在官网更新日志中查看。Craft 可以在各个应用商店或者官网下载使用，目前已经支持了 iOS、iPadOS、macOS、Windows、Web 等多个平台，采用了免费使用 + 付费订阅的收费方式。</p><span class="ss-application">&nbsp;</span><h2>App 速报</h2><ul><li>Parallels Desktop（<a href="https://prf.hn/l/7R0aWV9">macOS</a>）：更新至 v20.2，针对 Apple Silicon 架构的 Mac 加入了 64 位 x86 系统模拟，并为 Windows 应用带来 Apple Intelligence 写作工具（Writing Tools）支持。</li><li>Start11（<a href="https://www.stardock.com/products/start11/history">Windows</a>）：更新至 v2.5，可以将任务栏停靠在显示器的任何一侧。同时修复了此前拖动任务栏按钮的错误、Win + X 菜单、将鼠标悬停在自定义开始按钮上时任务栏闪烁、对齐等问题。</li></ul><p>&gt; 下载少数派 <a href="https://sspai.com/page/client">客户端</a>、关注 <a href="https://sspai.com/link?target=https%3A%2F%2Fwww.xiaohongshu.com%2Fuser%2Fprofile%2F63f5d65d000000001001d8d4">少数派小红书</a>，感受精彩数字生活 🍃</p><p>&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95725</id>
            <title>从打工小妹到创业大佬：折腾但精彩的搞钱人生</title>
            <link>https://sspai.com/post/95725</link>
            <guid isPermaLink="false">https://sspai.com/post/95725</guid>
            <pubDate></pubDate>
            <updated>Mon, 20 Jan 2025 07:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 拼命搞钱, 创业, AI 算力池, 团队协作  
<br><br>  
总结: 本期节目嘉宾馒头从学生时代起就将“拼命搞钱”视为人生目标，经历了多种职业，最终成功建立了国内规模最大的 AI 算力池。她的职业生涯从单打独斗转变为团队协作，展现了她在时代风口上的灵活应变和创业精神。通过不断的尝试和折腾，馒头实现了自己的财富积累，并分享了她的创业经历和人生感悟。 </div>
                        <hr>
                    
                    <p>「拼命搞钱」是许多人常常挂在嘴边的玩笑口号，但本期节目的嘉宾馒头却从学生时代就将之视为人生目标。她曾经在工厂拧过螺丝，当过微商，开过淘宝，搞过代购，做过小红书博主，虽然历经各种折腾，但每一步都恰好踩在时代的风口上，也赚到了自己的第一二三四五桶金。</p><p>如今的她再度更换赛道，与合作伙伴共同建立了国内规模最大之一的 AI 算力池，她的工作模式也从单打独斗变成了团队协作。本期节目中，我们就来听馒头讲讲她的折腾人生。</p><h2>直接收听</h2><div class="ss-audioSource" id="136" src="https://v.typlog.com/sspai/8262719831_87638.mp3" title="从打工小妹到创业大佬：折腾但精彩的搞钱人生">Audio</div><h2>订阅《少数派播客》</h2><ul><li><a href="https://sspai.com/link?target=https%3A%2F%2Fsspai.typlog.io%2Ffeed%2Faudio.xml">节目 RSS 链接</a></li><li><a href="https://podcasts.apple.com/hk/podcast/%E4%B8%80%E6%B4%BE-podcast/id1483157529">Apple Podcasts</a></li><li><a href="https://sspai.com/link?target=https%3A%2F%2Fwww.xiaoyuzhoufm.com%2Fpodcast%2F5e280fb1418a84a0461fc567">小宇宙</a></li><li><a href="https://sspai.com/link?target=https%3A%2F%2Fopen.spotify.com%2Fshow%2F7pJ5EHWj7i5wQwqzY9kHr5">Spotify</a></li><li><a href="https://sspai.com/link?target=https%3A%2F%2Fpod.link%2F1483157529">其它平台</a></li></ul><h2>登场人物</h2><ul><li>馒头：爱折腾的创业女孩</li><li>张奕源 Nick：少数派编辑部成员</li></ul><p>欢迎写信至 <a href="mailto:nick@sspai.com">nick@sspai.com</a></p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>