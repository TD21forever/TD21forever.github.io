<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <channel>
        <title>少数派 -- 首页</title>
        <link>https://sspai.com</link>
        
        <item>
            <id>https://sspai.com/post/95404</id>
            <title>从「原子化」提交到妙用 rebase，一次搞定清爽的 Git 提交记录</title>
            <link>https://sspai.com/post/95404</link>
            <guid isPermaLink="false">https://sspai.com/post/95404</guid>
            <pubDate></pubDate>
            <updated>Tue, 21 Jan 2025 03:06:37 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: <Git, 原子化提交, 版本管理, 提交记录>
<br>
<br>
总结: 本文探讨了在软件开发中使用 Git 进行版本管理的技巧，强调了「原子化」提交的重要性，即每个提交只完成一项任务，以提高代码管理的效率和可追溯性。作者分享了多个实例，展示了如何通过原子化提交来避免后续开发中的麻烦，如排错和复盘困难。此外，文中还介绍了如何使用 `git rebase` 合并琐碎提交和调整提交顺序，以保持提交记录的清晰和规范。最后，作者建议在项目未成型时使用 `git commit --amend` 来保持提交记录的整洁。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><p>作为一名软件开发者，Git 是我离不开的版本管理工具，它可以记录并追溯开发进程，功能强大，用法灵活多样。围绕着它诞生的协作平台 GitHub、Gitee 等也深入人心。</p><p>Git 本身就是一门学问，其重要性不亚于软件开发。在长期的开源软件开发维护的过程中，我长期与 Git 打交道，对 Git 有了更多的感悟，也探索了一些非常实用的技巧。这些技巧，充分发挥了 Git 本身的特性，极大改善了我使用 Git 管理项目的体验。</p><p>下面，我就来分享让我受益最深的几点技巧，希望能给读者朋友们一些启发。</p><h2>「原子化」提交，一个提交只做一件事</h2><p>小时候，老师和长辈或许都告诫我们，在做事情的时候要「一心一意」，不要分散注意力到其他的事情上，这样做事才会高效、有成果。</p><p>一旦没有遵循「一心一意」的原则，那么干正事的时候碰壁就再寻常不过。就拿我本人来说，做正事的时候「摸鱼」，狂欢一阵子后再回来，面对还没有完成的正式任务，我是容易一脸懵的：我做了啥？进度怎么样了？我刚刚是怎么攻关难题的来着？——显然，这导致了时间和精力的浪费，更不利于事后复盘和提升。</p><p>不单单是做事，在使用 Git 的过程中，做每一个提交时也需要「一心一意」，也就是「原子化」（atomic）——确保每个提交只完成一项任务。</p><h3>1）引例</h3><p>可能一些开发者在组织 Git 提交时，习惯让一个提交做多件事情，<strong>把多项各自独立且不相关联的功能修改都放在同一个提交里</strong>。比如：</p><ul><li>一个项目有 A、B、C 三个功能模块，作者对这三个模块都做了修改，还顺带在 2025 年来临之际修改了所有源码开头注释里版权说明的年份<sup class="ss-footnote" href="" title="例如，把「Copyright 2010-2024 Author.」修改为「Copyright 2010-2025 Author.」。">1</sup>。</li><li>一个算法函数有多个各自独立的部分，作者在一个提交里就对这几个部分做了修改。</li><li>作者原本在写 A 函数，但是发现 B、C、D 这几个函数的注释需要补充，于是统统做了修改，并放在同一个提交里。</li></ul><p>这种提交方式看似省事儿，但无疑会给后续的开发工作「埋雷」。</p><h3>2）为什么会「埋雷」？</h3><p>根据笔者自己的经验体会，如果一个提交做了不止一件事情，那么有可能会在你日后开发的时候，给你带来一些「麻烦」：</p><h4>0x00：难以排错</h4><p>也许在开发过程中，某个提交给项目引入了 Bug。当你好不容易找到了存在问题的提交，但却发现这个提交做了不止一件事，你还要花费额外的精力来定位造成 Bug 的地方。</p><p>而如果你有不止一个提交都没有做到「一心一意」，那么你就很难直接浏览提交记录来找到问题所在，你就不得不翻阅一个个提交，浪费成倍的精力。</p><h4>0x01：不便复盘</h4><p>很多时候，开发者需要复盘自己的提交记录，看看自己做了哪些工作。然而，<strong>假如一个提交做了不止一件事，那么就不便于复盘开发过程。</strong></p><p>例如，当你想要回顾某个功能的实现过程，找出实现该功能的提交时，却发现关键的代码都被混在几个大的、综合的提交里，难以找出。好比是考前复习的时候，你总结的关键知识点混在了一堆厚厚的复习资料里，自然会影响复习效率。</p><p>或许有些读者会选择详尽编写提交说明，通过检索提交说明来找出自己想要的提交。不过这带来的好处有限——你后续还是离不开使用 <code>git show</code>，在一长串「包罗万象」的 diff 记录中，找到真正想找的修改记录。</p><h3>2）「原子化」提交</h3><p>践行「原子化」提交的理念，以上的麻烦将不复存在。</p><p>C++ 从 C++11标准开始，引入了「原子操作」（atomic）特性，可以确保一个变量在同一时间只有一个操作者在读写，从而防止多线程抢占造成冲突。我借鉴了「原子操作」的理念，提出了「原子化」提交——也就是确保每个提交只完成一个任务，从而改进提交记录的组织方式，防止潜在的杂乱和冲突。</p><p>原子化提交最大的优势，在于<strong>提交记录简洁、可追溯、易于查错</strong>：</p><ul><li>使用 <code>git log</code> 浏览提交记录时，你的开发进程一目了然，可以精确到每个提交实现的功能、修复的 Bug，等等，十分利于复盘。</li><li>一旦某个提交出现问题，你可以快速浏览提交记录，短时间内找到可能存在问题的提交。然后，你就可以通过 <code>git checkout &lt;疑似有问题提交的前一个提交&gt;</code>，暂时回到应用该提交前的状态，来排查故障。</li><li>在实现一个新功能、修复一个 Bug 的时候，你可以先浏览提交记录，快速判定之前是否有做了相关工作，从而避免「无用功」。</li></ul><h3>3）实践「原子化」提交</h3><p>下面，我就以几个在实际开发场景中的例子，来演示「原子化」提交的操作。</p><h4>实例一：修复 Bug 的「原子化」提交</h4><p>假设你正在开发一个电商平台的项目，最近有用户反馈在使用优惠券时，无法正确抵扣金额。经过排查，你发现是优惠券计算逻辑中的一个 Bug。你修复了这个 Bug，并且为了提高代码的可读性，对相关代码进行了重构，将一些冗长的函数拆分成了更小的函数。</p><p>如果你遵循「原子化」提交的原则，你可以将这个过程分为两个提交：</p><figure class="table"><table><thead><tr><th>提交序号</th><th>提交信息（commit message）</th><th>提交内容</th></tr></thead><tbody><tr><td>1：专门修复 Bug</td><td><code>Fix discount calculation bug in coupon system</code></td><td>在这个提交中，你只修改了计算优惠券金额的代码，确保 Bug 被修复。</td></tr><tr><td>2：进行代码重构</td><td><code>Refactor coupon calculation code for better readability</code></td><td>在这个提交中，你对代码进行了拆分和重构，但不涉及任何 Bug 修复的逻辑。</td></tr></tbody></table></figure><p>这样做的好处是，<strong>如果后续发现修复 Bug 的代码引入了新的问题，你可以很容易地通过 </strong><code><strong>git log</strong></code><strong> 找到第一个提交，然后使用 </strong><code><strong>git checkout</strong></code><strong> 检出到修复 Bug 之前的版本</strong>，快速定位问题。同时，代码重构的提交也不会干扰到 Bug 修复的提交，使得提交记录清晰明了。</p><h4>实例二：新功能开发的「原子化」提交</h4><p>假设你正在开发一个在线教育平台，需要添加一个新的功能：允许用户上传视频作业。这个功能涉及到多个方面的开发，包括前端页面的设计、后端接口的编写以及数据库表结构的调整。</p><p>如果你遵循「原子化」提交的原则，你可以将这个功能的开发过程分为多个提交：</p><figure class="table"><table><thead><tr><th>提交序号</th><th>提交信息（commit message）</th><th>提交内容</th></tr></thead><tbody><tr><td>1：专注于前端页面设计</td><td><code>Design video assignment upload page</code></td><td>在这个提交中，你创建了新的 HTML 文件和 CSS 样式，实现了页面的基本布局和样式。</td></tr><tr><td>2：编写后端接口</td><td><code>Implement backend API for video assignment upload</code></td><td>在这个提交中，你创建了新的 API，实现了视频文件的接收和存储逻辑。</td></tr><tr><td>3：调整数据库表结构</td><td><code>Add database table for video assignments</code></td><td>在这个提交中，你创建了新的数据库表，用于存储视频作业的相关信息，如用户 ID、作业 ID、视频文件路径等。</td></tr></tbody></table></figure><p>通过这样的「原子化」提交，你可以清晰地记录每个功能模块的开发进度，便于后续的复盘和维护。如果某个模块出现问题，你可以快速定位到相应的提交，进行针对性的排查和修复，而不会被其他模块的代码干扰。</p><h4>实例三：性能优化的原子提交</h4><p>假设你正在开发一款合成器软音源插件，最近发现插件占用处理器资源过高，影响用户体验。经过分析，你发现是由于合成器的振荡器、滤波器算法优化不当，且编译参数存在问题，拖累性能。为了优化性能，你需要调整合成器算法，并修改编译系统的编译参数。</p><p>如果你遵循「原子化」提交的原则，你可以将这个优化过程分为多个提交：</p><figure class="table"><table><thead><tr><th>提交序号</th><th>提交信息（commit message）</th><th>提交内容</th></tr></thead><tbody><tr><td>1：优化振荡器算法</td><td><code>Optimize oscillator with SIMD</code></td><td>在这个提交中，你使用 SIMD 指令来改善振荡器的性能。</td></tr><tr><td>2：优化滤波器算法</td><td><code>Optimize filter with SIMD</code></td><td>在这个提交中，你同样使用了 SIMD 指令，来提升滤波器的工作效率。</td></tr><tr><td>3：优化编译系统的编译参数设置</td><td><code>Enable compiler optimization</code></td><td>在这个提交中，你为编译系统添加了编译器优化参数，使编译器充分优化代码性能。</td></tr></tbody></table></figure><p>通过这样的原子化提交，你可以清晰地记录每个优化措施的实施过程，便于后续的评估和维护。如果某个优化措施带来了新的问题，你可以快速定位到相应的提交，进行针对性的排查和修复，而不会被其他优化措施的代码干扰。</p><h3>4）原子化提交的潜在优势</h3><p>值得一提的是，原子化提交除了有利于你自己的代码管理，还能起到「利他」的作用。</p><p>在 GitHub 等开源社区中，原子化提交可以方便其他开发者浏览你的提交记录和开发进程，使你的开源成果更好惠及他人。井井有条的提交记录，还可以给他人留下好印象，彰显你的专业水准。</p><p>另一方面，像 Linux 这样的大型项目，每个提交也都是原子化的，并且更加规范，这大大方便了二次开发时对新特性的反向移植工作。</p><p>我自己也在做 Android 内核的适配，曾经将新版本内核的特性反向移植到华为 P6 的 3.0.6 内核中。开发过程中，我会从新版本内核的提交日志中找到与某个特性有关的补丁，然后将其应用到当前内核中，几乎是一找一个准，节省了在海量代码中「找重点」的精力。</p><p>可见，原子化提交利己利人，具有非常显著的潜在优势，受益不只一点点。</p><h2>善用 <code>git rebase</code>，合并细碎提交</h2><p>记得大概是 2018 年，我在刷知乎的时候见到一个提问：<a href="https://www.zhihu.com/question/61283395" target="_blank"><i>《Git commits 历史是如何做到如此清爽的？》</i></a>，提问者非常惊讶于知名前端框架 Vue.js 源码库提交记录的干净、清爽。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/08/0f2275f4985a9701132c5d73248e46fb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption><a href="https://github.com/vuejs/core/commits/main/" target="_blank">Vue.js core 组件提交记录</a>的一部分。</figcaption></figure><p>就在这个问题下，作者尤雨溪（Evan You）<a href="https://sspai.com/post/Git%20commits%E5%8E%86%E5%8F%B2%E6%98%AF%E5%A6%82%E4%BD%95%E5%81%9A%E5%88%B0%E5%A6%82%E6%AD%A4%E6%B8%85%E7%88%BD%E7%9A%84%EF%BC%9F%20-%20%E5%B0%A4%E9%9B%A8%E6%BA%AA%E7%9A%84%E5%9B%9E%E7%AD%94%20-%20%E7%9F%A5%E4%B9%8E%20https://www.zhihu.com/question/61283395/answer/186122300" target="_blank">现身说法</a>：</p><blockquote><p><strong>多用 rebase。</strong></p></blockquote><p>就是大佬这短短三个字的经验谈，让我对 git rebase 这个功能产生了浓厚的兴趣。那时的我恐怕也不会想到，后来的我会如此频繁地使用 rebase，从而摆脱既往使用 Git 时提交记录琐碎、杂乱的问题，离正确使用 Git 更近一步。</p><h3>1）琐碎的提交从何而来？</h3><p>大家都知道，作为版本管理系统，Git 要保证提交记录可靠、可追溯，因此不能像文本编辑那样随意更改提交记录，最多只提供 <code>git commit --amend</code> 功能来允许你更改最新的提交。</p><p>但在开发过程中，或许你不太可能时时刻刻像 Vue.js 的提交记录那样，使自己每个提交都保持清爽、规范。回头使用 git log 浏览提交记录，你可能会发现你提交了太多琐碎的内容，「细致」到写一行代码、修一个错别字、修一个注释都有单独的提交。</p><p>很多时候这些提交是很琐碎的，没有必要单独保留，好比是你在文字处理软件中每写一句话就按“保存”，而每个修改都被单独保存成了一个文件。久而久之，提交记录就变得冗长琐碎，管理的时候就很难追溯到有用的、重要的提交。</p><p>这个时候， <code>git rebase</code> 就派上用场了。</p><p>Git 的设计师考虑到用户整理提交记录的需求，于是就设计了 <code>git rebase</code> 这一功能，允许你合并、编辑、重排已有的提交，使修改后的提交井然有序，就像 Vue.js 的提交记录那样清晰。</p><h3>2）实战演示如何合并琐碎提交</h3><p>以下面这个提交记录为例，记录了某项目从零开始写 <code>main()</code> 函数的过程，仅仅是添加文本输出与修改注释的提交就有好几个。</p><blockquote><p><strong>注意：</strong>假设这些提交彼此之间没有冲突，每个提交都是在原有提交之上的微调。</p></blockquote><pre class="language-shell"><code>$ git log --pretty=oneline    # 使用单行模式输出提交记录。最新的提交在前。
3a51f37493191451413b8dc7428d63351ce4b1e3 (HEAD -&gt; main, origin/main) main: 修改注释中的错别字
6587eeb437c8b139965085ddf99bd72bae682f89 main: 添加注释
61b04c318c24434996587eeb437c8b13996587e6 main: 添加操作结束的文本输出
61500445ebae1eb855ab216c6bbcec6ee73bd270 main: 微调操作开始的文本
7dad6bec684949ab0188085ddf99bc724c7b7b59 main: 添加操作开始的文本输出
996587eeb437c8b13996451413b8dc7603452f32 main: 添加基本文本输出
554bb6603452f3bf5705ac200effbdfc0aa97465 main: 创建main函数</code></pre><p>接下来，笔者就要把所有提交都合并到第一个提交「<code>main: 创建main函数</code>」<i>（以下简称「目标提交」）</i>当中。</p><h4>0x00：检查代码树是否有未提交的更改</h4><p>为了防止 rebase 弄乱代码仓库，Git 强制要求你的工作区「干净」，也就是不存在已经修改但没有提交的文件。否则，你是没有办法 rebase 的。</p><p>根据你的开发进度，你可以先提交修改；或者是使用 <code>git stash</code> 将修改暂时保存起来，等到完成 rebase 后再运行 <code>git stash pop</code> 恢复你的修改。</p><h4>0x01：进入 git rebase 模式</h4><p>使用 <code>git log</code> 查看提交记录，记住「目标提交」的 ID。然后，运行以下命令，开始 rebase：</p><pre class="language-shell"><code>git rebase -i 554bb6603452f3bf5705ac200effbdfc0aa97465~</code></pre><p>这个命令，允许你修改从「最新提交」到「目标提交」在内的所有提交。<strong>注意不要漏了提交 ID 后面的波浪线，否则会把「目标提交」给漏掉</strong><sup class="ss-footnote" href="" title="波浪线的含义：选中你指定提交的前一个提交。只有加上波浪线，git rebase 才会包含你指定的那个提交。（其实就是开区间与闭区间的区别。）">2</sup><strong>。</strong></p><p>稍等片刻，Git 会自动打开文本编辑器（通常是 Vim 或 Nano），列出一系列提交。其中：</p><ul><li><strong>较新的提交列在文档的后面</strong><sup class="ss-footnote" href="" title="即：越靠下的行，对应的提交越新。">3</sup><strong>，顺序是与 </strong><code><strong>git log</strong></code><strong> 相反的；</strong></li><li>每一行前面的 <code>pick</code> 是操作指令，意为采用该提交。这是默认的行为。</li></ul><pre class="language-shell"><code>pick 554bb660 main: 创建main函数
pick 996587ee main: 添加基本文本输出
pick 7dad6bec main: 添加操作开始的文本输出
pick 61500445 main: 微调操作开始的文本
pick 61b04c31 main: 添加操作结束的文本输出
pick 6587eeb4 main: 添加注释
pick 3a51f374 main: 修改注释中的错别字</code></pre><h4>0x02：合并提交</h4><p>在本例中，从<code>996587ee</code> 到<code>3a51f374</code> 的这几个提交，都是要并入「目标提交」的提交。</p><p>我们把这些提交对应行行首的 <code>pick</code> 改为 <code>fixup</code> （或单个字母“<code>f</code>”）。<code>fixup</code> 指令的作用是合并提交，但是只保留前一个提交（相邻一个比它早的提交）的说明。如下所示：</p><pre class="language-shell"><code>pick 554bb660 main: 创建main函数
f 996587ee main: 添加基本文本输出
f 7dad6bec main: 添加操作开始的文本输出
f 61500445 main: 微调操作开始的文本
f 61b04c31 main: 添加操作结束的文本输出
f 6587eeb4 main: 添加注释
f 3a51f374 main: 修改注释中的错别字</code></pre><p>随后，保存文件并关闭编辑器，Git 就会自动开始 rebase，一个个把新的提交并入相邻的前一个提交中，直到目标提交。这样，那些琐碎的提交都被并入我们的目标提交中，如此一来提交记录就清爽了不少：</p><pre class="language-shell"><code>$ git log --pretty=oneline    # 使用单行模式输出提交记录
f5815166356e85a5fe244f6024c2e401f04b10fa (HEAD -&gt; main, origin/main) main: 创建main函数</code></pre><p><strong>如果你希望保留相关提交的说明文本（以备参考等），那么你可以使用 </strong><code><strong>squash</strong></code><strong> 指令（或单个字母“</strong><code><strong>s</strong></code><strong>”）</strong>，保存文件并关闭编辑器后， Git 会打开一个新文档，在这里你可以检查、修改提交说明。</p><blockquote><p><strong>注意：</strong><br />经过 rebase 之后，原本的「目标提交」ID 会发生变化，因为 Git 实际上生成了一个新的提交。</p></blockquote><h3>3）如果琐碎的提交是后来才做出的</h3><p>随着项目开发的推进，你达成的目标越来越多，提交数量也随之增长。但你发现一个早期编写的功能里，注释、代码缩进这些细节存在问题，于是再做了几个提交来修改。</p><p>现在，你想把这些琐碎的修改合并到该功能的提交中。此时你依然可以运用 <code>git rebase</code>，先调整提交顺序，然后再使用 <code>fixup</code>（或 <code>squash</code>）指令来合并提交。</p><h4>0x00：准备工作</h4><p>在继续操作之前，你需要确保仓库里没有未提交的更改。</p><p>另一方面，你还要保证那些琐碎的提交不与你既往的修改产生冲突。比如说，如果你的提交除了修改注释，还顺带修改了函数结构、变量定义等内容，那么很可能会与你的其他提交造成冲突，需要你手动干预，造成不必要的麻烦。</p><blockquote><p><strong>注意：</strong><br />假设下文的提交彼此之间没有冲突，每个提交都是在原有提交之上的调整。</p></blockquote><h4>0x01：进入 rebase 模式，重排提交顺序</h4><p>在运行 <code>git rebase</code> 之前，你需要通过 <code>git log</code> 检索提交日志，找到你的「目标提交」。</p><p>在下面的例子中，目标提交是<code>554bb660</code> <i>（「创建 main」函数）</i>，你的任务就是要把你的目标是把 <code>3a51f374</code> 与 <code>6587eeb4</code> 这两个琐碎的提交合并到 <code>554bb660</code> 这个提交中。<sup class="ss-footnote" href="" title="这里是一个简化版的例子。实际的项目当中，你的「目标提交」与待合并的琐碎提交之间可能相隔十几个甚至几十个提交。">4</sup></p><pre class="language-shell"><code>$ git log --pretty=oneline    # 使用单行模式输出提交记录
...
3a51f374 main: 修改注释中的错别字
6587eeb4 main: 修正代码缩进
996587ee process: 使用libfftw3，优化合成器算法逻辑
34e87ac3 process: 创建process函数
554bb660 main: 创建main函数
...</code></pre><p>然后，运行 <code>git rebase</code> 命令：</p><pre class="language-null"><code>git rebase -i 554bb660~</code></pre><p>此时， Git 依然会打开一个文本编辑器，内容如下：</p><pre class="language-null"><code>pick 554bb660 main: 创建main函数
pick 34e87ac3 process: 创建process函数
pick 996587ee process: 使用libfftw3，优化合成器算法逻辑
pick 6587eeb4 main: 修正代码缩进
pick 3a51f374 main: 修改注释中的错别字</code></pre><p>我们在 <code>git rebase</code> 给我们打开的文本编辑器里，把<code>3a51f374</code> 与 <code>6587eeb4</code> 这两个提交对应的行，<strong>整体复制到 </strong><code><strong>554bb660</strong></code><strong> 的后面，并将原有的行注释掉</strong>。就像下面这样：</p><pre class="language-shell"><code>pick 554bb660 main: 创建main函数

# 将提交所对应的行复制到我们的目标提交后面
pick 6587eeb4 main: 修正代码缩进
pick 3a51f374 main: 修改注释中的错别字

pick 34e87ac3 process: 创建process函数
pick 996587ee process: 使用libfftw3，优化合成器算法逻辑

# 为保险起见，将原有的行注释掉，而不是直接移动
#pick 6587eeb4 main: 修正代码缩进
#pick 3a51f374 main: 修改注释中的错别字</code></pre><blockquote><p><strong>警告：</strong><br />不要修改 <code>pick</code> 后面的内容，尤其是提交 ID，否则提交记录可能会发生混乱。</p></blockquote><h4>0x02：合并提交</h4><p>确认提交顺序无误后，将待合并的提交对应行行首的 <code>pick</code> 指令改为 <code>fixup</code> （或 <code>squash</code>），如下所示：</p><pre class="language-shell"><code>pick 554bb660 main: 创建main函数

# 将提交所对应的行复制到我们的目标提交后面
fixup 6587eeb4 main: 修正代码缩进
fixup 3a51f374 main: 修改注释中的错别字

pick 34e87ac3 process: 创建process函数
pick 996587ee process: 使用libfftw3，优化合成器算法逻辑

# 为保险起见，将原有的行注释掉，而不是直接移动
#pick 6587eeb4 main: 修正代码缩进
#pick 3a51f374 main: 修改注释中的错别字</code></pre><p>保存文件后，Git 随即开始 rebase 工作，这样我们就可以化琐碎为清爽，得到一个干净的提交记录了。</p><h3>3）注意事项</h3><p><strong>在进行 rebase 前，务必要检查你要合并的提交与「目标提交」之间是否存在冲突。</strong>一旦存在冲突，那么 <code>git rebase</code> 就无法继续，会要求你手工修改你的仓库代码来处理冲突，这需要更多的时间和精力——因为你要保证代码正常无误。</p><p>另一方面，经过 rebase 合并所得的提交，本质上是一个全新的提交，并且也改变了原有的提交记录，因此如果别人 fork 了你的代码，在与你的仓库同步时必定会发生冲突。你或许需要告知你的团队成员，或者是通过 README 来告知代码共享平台<sup class="ss-footnote" href="" title="例如 GitHub、Gitee。">5</sup>上的用户，告诉他们使用 <code>git pull --rebase</code> 来同步你的修改。</p><h2>提交顺序不满意？也可以用 rebase 搞定</h2><p>我自己在找到开发项目的新灵感后，会马上新建一个 Git 仓库，开始动手实践，并把我写的源代码提交到仓库里。然而当我想进一步把仓库上传到 GitHub 时，却发现：我忘了加上许可协议、README 和 <code>.gitignore</code>！</p><p>考虑到这些文件都是在新建项目时就要添加的，如果我在完成了一部分程序功能后补上去，再回看 Git 提交记录，总是会觉得格外「别扭」。在这样的情况下，<strong>我依然可以运用 git rebase，单独调整提交顺序，还我自己一个科学有序的提交记录。</strong></p><h3>1）实践如何调整提交顺序</h3><p>这里举一个高度简化的例子：假设笔者有一个项目，已经完成了程序的主体开发工作，后来才补上 README 与许可协议。提交日志如下（较新的提交在前面）：</p><pre class="language-shell"><code>$ git log --pretty=oneline    # 使用单行模式输出提交记录
0fb4a3b0 添加 README.md
acbc6080 添加许可协议（GPLv3）
a841dbc1 UI 的 bug 修复
16f688a6 DSP 性能优化
75ca23f6 完成 UI 开发
277aad5f 完成 DSP 开发
eb323b0e 初始提交（Initial commit）</code></pre><p>我希望把与 README、许可协议相关的提交──也就是 <code>0fb4a3b0</code> 、<code>acbc6080</code> ──挪到时间顺序上的初始提交之后，也就是提交日志中初始提交的前一行。</p><h4>0x01：打开 git rebase</h4><p>在本例中，我已经确定好了「目标提交」，也就是初始提交，并且已经确保工作区没有未提交的代码。</p><p>然后，运行 git rebase，定位到目标提交：</p><pre class="language-shell"><code>git rebase -i eb323b0e</code></pre><p>接下来 Git 会打开文本编辑器，显示以下内容（较新的提交在文档的后面）：</p><pre class="language-shell"><code>pick 277aad5f 完成 DSP 开发
pick 75ca23f6 完成 UI 开发
pick 16f688a6 DSP 性能优化
pick a841dbc1 UI 的 bug 修复
pick acbc6080 添加许可协议（GPLv3）
pick 0fb4a3b0 添加 README.md</code></pre><p>需要注意的是，git rebase 不能显示初始提交，所以我们能看到的最早的提交是紧邻初始提交之后（比初始提交新）的第一个提交。</p><h3>0x02：开始挪动</h3><p>先把<code>0fb4a3b0</code> 、<code>acbc6080</code> 这两个提交对应的行整体复制到 <code>277aad5f</code> （也就是初始提交后的第一个提交）前面，然后将原有的那两行注释掉，如下所示：</p><pre class="language-shell"><code># 将提交所对应的行复制到我们的目标提交后面。
# 本例中的目标提交是初始提交，所以我们实际上是把要挪动的提交放在 git rebase 文档的最前面
pick 0fb4a3b0 添加 README.md
pick acbc6080 添加许可协议（GPLv3）

pick 277aad5f 完成 DSP 开发
pick 75ca23f6 完成 UI 开发
pick 16f688a6 DSP 性能优化
pick a841dbc1 UI 的 bug 修复

# 为保险起见，将原有的行注释掉，而不是直接移动
#pick acbc6080 添加许可协议（GPLv3）
#pick 0fb4a3b0 添加 README.md</code></pre><p>确认无误后，直接保存，此时 Git 就会自动开始 rebase 工作，稍等片刻再查看提交记录，你会发现提交顺序变了，README 与许可协议所对应的提交就出现在了初始提交的后面，大功告成。</p><h3>2）注意事项</h3><p>考虑到 rebase 时可能会面临的冲突，你需要三思而后行。</p><p>通常只建议重排那些对其他提交记录几乎没什么干扰的提交，例如你的提交只创建、修改了某一个特定的文件（README、许可协议这样的文件）。若重排不慎，你就不得不花费大量的精力来处理 rebase 的冲突，还有可能把提交记录弄乱。<sup class="ss-footnote" href="" title="一个典型的例子是：提交001创建了一个新函数，提交002修改了该函数的内容。如果你重排时把002放在001的前面（即，时间更早的位置），那么必定会造成合并冲突。">6</sup></p><p>同样地，你还需要告知你的团队成员或用户，使用 <code>git pull --rebase</code> 来合并你的更改。</p><h2>对于未成型项目，<code>git commit --amend</code> 也许更适合你</h2><p>git commit 是 Git 用于提交修改的命令。它有一个参数 <code>--amend</code>，允许你修改最新一次提交的内容。有时你发现刚刚提交的代码有错误，或者是提交说明有问题，但是你不想再新建一个提交来修正这些错误，那么你就可以使用 <code>git commit --amend</code> 这个命令。</p><p>然而，对我来说，<code>git commit --amend</code> 的用途远不止于此。<strong>在项目还未成型的阶段，我使用它来保持提交记录的清爽。</strong></p><h3>1）为什么我会常用 <code>git commit --amend</code>？</h3><p>我开发的项目，主要是将现有的开源音频插件移植到 <a href="https://github.com/DISTRHO/DPF" target="_blank">DPF</a> 这个跨平台框架<sup class="ss-footnote" href="" title="DPF 全称 DISTRHO Plugin Framework，是一款跨平台音频插件开发框架，让你用一套代码库就可以生成多种音频插件格式，包括 VST 2.4、VST3、LV2、CLAP，同时支持 Windows、macOS 与 Linux 平台。">7</sup>，这往往是「摸着石头过河」——无论是 DPF 还是被移植的插件，都缺乏文档，全靠我自己摸索。</p><p>在早期阶段，代码文件结构、模块和功能代码、编译系统等都还没有定稿，程序也只实现了部分功能：这就是未成型的状态。我个人习惯一边写功能一边调试，常常反复调整代码结构和算法，直到真正实现我预期的目标为止。</p><p><strong>这，往往意味着我要持续修改源代码库。</strong>如此背景之下，如果每个修改都单独提交到仓库里，那么就意味着仓库里会有数十甚至上百条极其琐碎的提交记录，待到项目成型时还要用 <code>git rebase</code> 来整理提交。你可以想象一下，用 WPS 写文章，每写一句话就另存一个文件，是什么样的感觉。</p><h3>2）如何妙用 <code>git commit --amend</code>？</h3><p>为了解决上述问题，<code>git commit --amend</code> 就成为了我最常用的操作之一。我会采用这样的思路：</p><ul><li><strong>第一步，</strong>用一个提交来存放项目成型前的所有开发工作。提交说明为「<code>Early development (WIP!)</code>」，其中「<code>WIP（Work In Progress）</code>」表示该提交随时可能被覆盖。做出这个提交之后，就不要再做新的提交。</li><li><strong>第二步，</strong>每次完成一部分功能，确认代码编写与程序运行无误时，就使用 <code>git add</code> 命令来将修改过的文件暂存（stage）起来，随后使用 <code>git commit --amend</code> 更新这个提交的内容。</li><li><strong>第三步，</strong>继续完成开发，直到项目成型。此时，再运行 <code>git commit --amend</code>，重新修改提交说明，将「<code>WIP</code>」等字样删除，代表我的早期开发工作已经定稿。</li></ul><p>我个人偏向在项目成型之后，才开始转变为以一个个单独提交的方式来持续开发。这里的「成型」，大致可理解为代码结构稳定，程序预期功能已经实现，至少有可以跑起来的 Alpha 版本推出。</p><p>如此一来，提交记录就会变得清爽，不会让琐碎的早期开发记录「挤占」你的 git log，事后也不需要再单独花时间来 rebase。</p><h3>3）注意事项</h3><ul><li>由于这种方法并不会为每个更改留下单独的提交，后续难以通过 <code>git log</code> 回溯，故只建议在项目未成型时使用。如果你不放心，依然可以每做一组工作就提交一次，对此我建议在提交说明里做标记，以备项目成形后再 rebase 提交记录。</li><li>在 <code>git commit --amend</code> 之前，也务必确保程序与代码无误，以免混乱。</li></ul><p>除此之外，当你在为你的项目添加新功能时，你也可以在原型设计、测试的阶段使用<code>git commit --amend</code> ，因为这个过程常常就像写一篇新文章，你或许也不希望每写一句话就又来另存一个新文档。</p><h2>写在最后</h2><p>在日常与 Git 打交道的过程中，我一直致力于精进 Git 的使用。上面这几点技巧，就是我自己的实践成果，着力于让提交日志更清爽、规范，方便后续的维护。让我们再来回顾一下：</p><ul><li>使用「原子化」提交，每个提交只做一件事，利于管理、维护和回顾你的开发进度；</li><li>灵活运用 <code>git rebase</code>，合并细碎的提交，按需要重排提交，使提交记录清爽、规范；</li><li>项目未成型时，活用 <code>git commit --amend</code>，保持提交记录清爽。</li></ul><p>当然，以上的技巧，更多体现出我个人的使用习惯，客观上也改善了我自己 Git 仓库的质量。相信我的分享能为感兴趣的读者朋友们提供参考，一同将 Git 用得更自在。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95757</id>
            <title>派早报：EA Origin 应用将停运，IDC 发布 2024 年中国手机市场报告等</title>
            <link>https://sspai.com/post/95757</link>
            <guid isPermaLink="false">https://sspai.com/post/95757</guid>
            <pubDate></pubDate>
            <updated>Tue, 21 Jan 2025 00:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: EA, Origin, 智能手机, AI开发环境  
<br><br>  
总结: EA宣布其Origin应用将于2025年4月17日关停，用户将迁移至EA app，主要因Origin基于旧版操作系统，存在安全隐患。IDC报告显示，2024年中国智能手机市场出货量同比增长，前五大厂商为Apple、vivo、华为、小米和荣耀。字节跳动发布了面向海外的AI中文开发环境IDE Trae，支持多种编程功能。月之暗面推出Kimi k1.5多模态思考模型，声称其能力超越现有模型。Google将支持沉浸式音频格式Eclipsa Audio，预计将为内容创作者提供新机遇。 </div>
                        <hr>
                    
                    <h2>你可能错过的新鲜事</h2><h3>EA 宣布 Origin 将于 2025 年 4 月 17 日关停</h3><p>EA 于 1 月 18 日发布通知，宣布旗下的 Origin 应用将于 2025 年 4 月 17 日停运，后续将切换到 EA app 平台。这一次的关停的主要原因是 Origin 客户端是基于旧版操作系统开发的，而无论是微软还是 Apple 都已经停止对旧版操作系统的支持，随着时间推移也势必导致安全问题，而迁移到基于现代操作系统的 EA \app 则是最佳的选择。<a href="https://help.ea.com/en/help/ea/ea-app/update-operating-system-for-ea-app/">来源</a></p><h3>IDC：2024 年全年中国智能手机市场触底反弹</h3><p>1 月 20 日，市场研究机构 IDC（国际数据公司）发布 2024 年中国智能手机市场最新季度跟踪报告。报告显示，2024 年第四季度，中国智能手机市场出货量约 7643 万台，同比增长 3.9%。市场份额方面，2024 年第四季度前五大厂商分别为 Apple、vivo、华为、小米、荣耀与并列第五的 OPPO，其中 vivo、华为与小米同比增幅达 14.0%、22.8%、28.4%，为 Android 带去 7% 的市场增幅。全年范围看，市场份额前五的厂商分别为 vivo、华为、Apple、荣耀与 OPPO。</p><p>值得一提的是，2024 年第四季度，折叠屏手机出货量自 2022 年第二季度后首次出现同比下降，但全年出货量仍达 917 万台，同比增长 30.8%。2024 年折叠屏市场份额前五的厂商分别为华为、荣耀、vivo、小米、OPPO，其中华为市场份额达 48.6%。<a href="https://www.idc.com/getdoc.jsp?containerId=prCHC53105325" target="_blank">来源</a></p><figure class="image ss-img-wrapper"><img alt="XUZTbxkfuoWmUbxrj5tcMDtsnye" src="https://cdnfile.sspai.com/editor/u_/cu774j5b34temt4lrt4g.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h3>字节跳动发布面向海外的 AI 中文开发环境 IDE：Trae</h3><p>字节跳动于 1 月 19 日正式发布了一款面向专业的开发者提供服务的全新 AI Coding 产品 Trae，该 IDE 由字节跳动旗下新加坡公司 SPRING (SG) PTE.LTD. 提供服务，支持 AI 问答、代码自动补全、基于 Agent 的 AI 编程等功能，可以帮助程序员自动化完成开发任任务，并在一些项目中可以实现端到端开发（通过用户的提问直接生产一个完整的代码项目），该工具可选择简体中文或英文，并内置了 GPT-4o、Claude-3.5-Sonnet 模型供免费使用，目前仅支持 Mac 版本，未来将推出 Windows 版本。<a href="https://www.trae.ai/">来源</a></p><h3>月之暗面发布 Kimi k1.5 多模态思考模型</h3><p>1 月 20 日，月之暗面宣布推出 Kimi k1.5 多模态思考模型，宣称在 short-CoT 模式下，Kimi k1.5 的数学、代码、视觉多模态和通用能力大幅超越 GPT-4o 和 Claude 3.5 Sonnet；在 long-CoT 模式下，其数学、代码、多模态推理能力达到 OpenAI o1 正式版水平。该模型预览版将灰度上线 Kimi 官网与 app。<a href="https://mp.weixin.qq.com/s/BmOKGKjXP2tjmPyNdU0Hqg" target="_blank">来源</a></p><h3>Google 将通过 Android 和 Chrome 支持沉浸式音频格式 Eclipsa Audio</h3><p>Google 于 1 月 19 日在其官方博客上宣布，将在 Android 系统和 Chrome 浏览器中支持沉浸式音频格式 Eclipsa Audio，并会很快面向开发者推出 Eclipsa Audio 插件。Eclipsa Audio 基于沉浸式音频模型和格式（IAMF）的空间音频格式，IAMF 则是开放媒体联盟 AOMedia 推出的开源免专利费空间音频格式，Google 和三星为该开放媒体联盟的成员。借助 Eclipsa Audio，内容创作者可以为消费者提供空间音频，而此前创作空间音频主要局限在电影和音乐行业的专业人士。此外 Google 还表示，预计 2025 年下半年，多家电视制造商和条形音箱制造商也会推出支持该空间音频格式的设备，Google 和三星将推出认证和品牌授权计划，为消费者提供质量保证。<a href="https://9to5google.com/2025/01/19/eclipsa-audio-google-chrome-android/?open_in_browser=true">来源</a></p><h2>看看就行的小道消息</h2><ul><li>Elon Musk 于 1 月 20 日在 X 平台发布推文，表示正「考虑」恢复短视频平台 Vine。Vine 曾是一个拥有八年历史的短视频平台，于 2012 年被 Twitter（X 的前身）收购，其最大的亮点是通过 6 秒的创意短视频挑战模式，吸引了大量忠实用户，后续该应用渐渐被用户抛弃，Twitter 最终在 2016 年将其关闭。<a href="https://x.com/elonmusk/status/1880852037212291478">来源</a></li><li>微博数码博主 @体验more 称，OPPO Find N5（PKH110，非卫星通信版）将采用 SM-8750-3-AB，是采用 2+5 核设计的骁龙 8 Elite，比标准版少了一颗性能核。目前泄露的跑分成绩为单核 3083，多核 8865，与标准版骁龙 8 Elite 有明显差距。<a href="https://weibo.com/3108827753/PapB5nuwp" target="_blank">来源</a></li><li>由于海外网友大量涌入，小红书于 1 月 20 日的最新版本 app 火速上线翻译功能。上线早期不少用户发现该功能依靠大模型，且未做提示词屏蔽，导致大量用户开始使用翻译功能生成内容，包括食谱、代码、提示词等。目前该漏洞已基本完成封堵。据封堵前该功能就提示词的回应，翻译功能由智谱 GLM 提供服务。<a href="https://www.cnbeta.com.tw/articles/tech/1472606.htm">来源</a></li><li>1 月 20 日，爆料人 Evan Blass（@evleaks）发布了一条<a href="https://x.com/evleaks/status/1881274150351962611">源码截图</a>，截图显示除了 iPhone SE (4th Gen) 外，还有 iPad (11th Gen)、iPad Air 13 (M3)、iPad Air 11 (M3) 三台未发布的 iPad。此前，Mark Gurman 在爆料中有提及 iPad 11 会使用 A17 Pro 芯片与 8GB RAM 以支持 Apple Intelligence。<a href="https://www.macrumors.com/2025/01/20/new-ipad-air-models-with-m3-chip-leak/">来源</a></li></ul><figure class="image ss-img-wrapper"><img alt="JE55bYl6voZVCVxgLFxcUAf4n1d" src="https://cdnfile.sspai.com/editor/u_/cu774jdb34temtjvmqp0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><h2>少数派的近期动态</h2><ul><li>少数派年度盘点回归，我们选出了 16 件产品，涵盖手机、平板电脑、智能家居、AI 模型等多个领域，并做成了富有交互感的页面，欢迎<a href="https://sspai.com/page/2024">查阅</a>并<a href="https://weibo.com/1914010467/Pa0U25do2">参与微博讨论和抽奖</a>。</li><li>少数派「大家给 Apple 的成绩单」2024 年结果已上线。你给 Apple 的 2024 年打几分？欢迎进入<a href="https://sspai.com/page/apple_report_2024">专题页</a>查阅，还可参与微博<a href="https://sspai.com/post/95746">话题讨论</a>与<a href="https://weibo.com/1914010467/Paup46FAj">抽奖</a>。</li><li>春节来点「科技年货」送人送己，少数派年终大促销开始啦。<a href="https://sspai.com/post/95456"><strong>进一步了解</strong></a></li><li>假期将至，你的旅途游戏清单列好了吗？<a href="https://sspai.com/bullet/1736744010"><strong>来分享一下吧</strong></a></li></ul><h2>你可能错过的文章</h2><ul><li><a href="https://sspai.com/post/95426">让新知识成为冒险游戏，用 AI 重构「学习」这件事</a></li><li><a href="https://sspai.com/post/95725">从打工小妹到创业大佬：折腾但精彩的搞钱人生</a></li><li><a href="https://sspai.com/post/95744">派评 | 近期值得关注的 App</a></li><li><a href="https://sspai.com/post/95746">满分五分，你给 Apple 的 2024 年打几分？</a></li></ul><p>&gt; 下载 <a href="https://sspai.com/page/client">少数派 2.0 客户端</a>、关注 <a href="https://sspai.com/s/J71e">少数派公众号</a>，解锁全新阅读体验 📰</p><p>&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95746</id>
            <title>满分五分，你给 Apple 的 2024 年打几分？</title>
            <link>https://sspai.com/post/95746</link>
            <guid isPermaLink="false">https://sspai.com/post/95746</guid>
            <pubDate></pubDate>
            <updated>Mon, 20 Jan 2025 10:25:32 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: Apple, Vision Pro, M4 处理器, AI 浪潮  
<br><br>  
总结: 2024年，Apple推出了Vision Pro XR设备，带来了新的视听效果和交互方式，但其实用性和发展前景仍有争议。M4处理器的应用提升了iPad和Mac的性能，Mac mini成为亮点。iPhone和Apple Watch的升级较为谨慎，主要体现在RAM和屏幕尺寸的提升。Apple Intelligence的发布应对了AI浪潮，但在中国市场的前景仍待观察。面对监管环境的变化，Apple的生态系统逐渐开放，但品牌领导力面临挑战。少数派将继续收集用户对Apple的评价，期待2025年带来更多惊喜。 </div>
                        <hr>
                    
                    <p>Apple 的 2024 年从 Vision Pro 的高调亮相开始。这款开启了全新产品线的 XR 设备带来了令人惊艳的视听效果和交互范式，但围绕其实用性和发展前景的讨论，短期内预计还不会终结。M4 处理器先后登陆 iPad 和 Mac，两个产品线都由此获得更极致的外观和更强大的性能，Mac mini 更是成为年内最令人惊喜的新品之一。iPhone 和 Apple Watch 的升级相对谨慎，但 RAM 和屏幕尺寸的提升也为隔代升级的用户提供了「甜点」。</p><p>软实力方面，面对 AI 浪潮，Apple Intelligence 的发布交上了及时的答卷，也留下了仍待后续发展的悬念，在中国的前景尤其受到行业和消费者高度关注。面对快速变化的监管环境，App Store、NFC 等生态呈现出更多开放的迹象，但各利益相关方还在磨合中共同探索前进的方向和幅度。在中国，增开的零售店、应用实验室持续强化着 Apple 的「存在感」和服务能力，但竞争激烈的市场环境也对 Apple 的品牌领导力提出了新的挑战。</p><p>那么，对于 Apple 这个喜忧兼具的 2024 年，少数派的朋友们都会怎样评价呢？今年，我们连续第四年推出「大家给 Apple 的成绩单」策划，邀请到更多嘉宾，也结合时事热点对评分类目、问题设置做了更新，希望能够为大家呈现一份既反映共识、又体现个性的点评。</p><p>与去年一样，你可以在页面底部填写一份自己心目中的「成绩单」，然后和少数派嘉宾们的结果一起分享到 <a href="https://s.weibo.com/weibo?q=%23%E7%BB%99Apple%E6%89%93%E5%88%86%23">#给Apple打分#</a> 微博话题，2 月 10 日，我们将从分享用户中抽取 15 位送出招财水獭。期待看到你的观点，也希望 Apple 能在 2025 年持续为我们带来惊喜。</p><p><a href="https://sspai.com/page/apple_report_2024"><strong>访问专题页面</strong></a> | <a href="https://sspai.com/page/apple_report_2023"><strong>2023 年结果回顾</strong></a> | <a href="https://sspai.com/page/apple_report"><strong>2022 年结果回顾</strong></a> | <a href="https://sspai.com/post/70814"><strong>2021 年结果回顾</strong></a></p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/704a14e63fed752683ee9a024d97c0a3.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/cb5e52b9dfe13f1c7d6db7a108cdee59.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/07ee21897e2e290550b15f886a60c9bd.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/96d05c9036dde30488901042f92625d6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/2243b3505f0a80832b668fc960cbab92.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/cc58673e5c44a1f29b4f40fb73ffb27b.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/f4005cbdaec7cc2a38c30adf834301a1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/2bbb505be077306c8a37dd47632a24dc.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/0fc2e8df19206634bd79e2a33dd4f64e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/21/be327782597c37704038eeb06c4934dc.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><hr /><p><strong>方法</strong> 我们从 2024 年 11 月下旬至 12 月中旬期间，陆续向 33 名受访人发送了相同的问卷。问卷中仅含有少量背景信息、分类说明和官方资讯，不含有其他引导或提示性质的文本。问卷回收结束于 2025 年 1 月 3 日。</p><p>除为符合产品规范名称、语句通顺所做的必要编辑外，文章引用的评语均为所回收问卷中的原文。该等评语的权利由相应受访者保留，其内容不代表少数派立场。</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95744</id>
            <title>派评 | 近期值得关注的 App</title>
            <link>https://sspai.com/post/95744</link>
            <guid isPermaLink="false">https://sspai.com/post/95744</guid>
            <pubDate></pubDate>
            <updated>Mon, 20 Jan 2025 09:55:06 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: <App推荐, 影视记录, 切换浏览器, 数字健康>
<br>
<br>
总结: 本文介绍了几款值得关注的新应用，包括Showly、Default Browser、Cobalt、DigiPaw和Horizon Live Wallpapers。Showly是一款开源的影视记录工具，提供全面的观影记录功能；Default Browser则是macOS上的快捷切换默认浏览器工具；Cobalt是一款在线下载工具，支持多种媒体格式的下载；DigiPaw主打数字健康，帮助用户管理手机使用时间；Horizon Live Wallpapers则提供动态壁纸，结合天气和月相变化。 </div>
                        <hr>
                    
                    <p>欢迎收看本期《派评》。你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们讨论。</p><h2>值得关注的新 App</h2><p>虽然少数派一直在为大家发现和介绍各平台上的优质 App，但仍有不少设计、功能、交互、体验都非常优秀的 App，还没有被我们发掘和介绍。它们可能是一款老 App，也可能是近期上架的新 App，我们会在这里介绍给你。</p><h3>Showly：数据更全面的开源影视记录工具</h3><ul><li>平台：Android</li><li>关键词：追剧、观影记录</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/69zxdqx8">@Noah_Choi</a>：买了 NAS 之后，总想要收藏各种资源反复观看，因此也衍生出了观影情况记录的需求。虽然国内有豆瓣之类的记录平台，但也会因为诸多原因缺少很多冷门资源的条目和信息，许多优秀剧集的幕后花絮、采访、纪录片等也没有收录。</p><p>而 Showly 就完美解决了我的记录需求，它就是一款数据非常全面并且简单易用的影视记录工具。应用可以非常简洁明了地展示当前正在追踪的影视剧，包括目前已经更新到多少集、你已经看过了多少集等等，由于它的数据来源是 track.tv，支持与平台的双向同步，我们不必担心数据缺失，很多电视剧的幕后花絮、纪录片等也能记录在册。</p><figure class="image ss-img-wrapper"><img alt="DxYOb7osfo0o7txI1dzc5fIYnTg" src="https://cdnfile.sspai.com/editor/u_/cu71p6db34temtjvmpr0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>不过 Showly 记录的逻辑和我们国内很多平台的逻辑有些差别。比如在豆瓣上，想看、在看、看过的标记都相当于加入到了我们的观看列表中，但在 Showly 里，标记看过的剧集和加入观看列表是两套独立的操作。</p><figure class="image ss-img-wrapper"><img alt="UUTubHCFooz9l0x80iccb0qfnZd" src="https://cdnfile.sspai.com/editor/u_/cu71p6lb34temupl6vc0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>另外，豆瓣上的标记一般都是以整个电影和整个剧集为单位进行标记，而 Showly 是以「集」为单位，如果你想要标注以前看过的影视剧，需要进入影视详情页，在下面选择每一季的复选框来标注观看进度。不过值得一提的是，Showly 提供了三种观看日期标注选项，分别是现在、自定义以及「剧集发布当日」，而不是像国内平台那样只能按照标注当天来记录时间。</p><figure class="image ss-img-wrapper"><img alt="XwnFbd1SkoSfprxqeWGcWzgTnOc" src="https://cdnfile.sspai.com/editor/u_/cu71p6tb34temupl6vcg.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>总体来看，Showly 虽然相当于是个套壳 track.tv 的记录工具，但使用起来清爽干净，没有多余的功能，也不需要忍受官方客户端各种 VIP 会员限制，而且它本身还是一个开源作品，作为轻度记录观影记录的工具来说绰绰有余。现在，你可以在 <a href="https://github.com/michaldrabik/showly">GitHub</a> 和 <a href="https://apt.izzysoft.de/fdroid/index/apk/com.michaldrabik.showly2">IzzyOnDroid</a> 免费下载 Showly。</p><h3>Default Browser：用快捷键切换默认浏览器</h3><ul><li>平台：macOS</li><li>关键词：切换默认浏览器、快捷键</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/914r3btn">@ElijahLee</a>：Default Browser，顾名思义，是 macOS 上一款快捷切换默认浏览器的小工具，它支持菜单栏、快捷键等多种便捷方式来快速切换浏览器。</p><p>下载安装 Default Browser 之后，应用会在macOS 的菜单栏添加一枚应用图标，并自动读取已经安装的浏览器，目前支持 Safari、Arc、Firefox、Chrome 等多种主流浏览器应用。应用为每一个浏览器分配了一个数字，这些数字即对应切换浏览器的快捷操作。</p><figure class="image ss-img-wrapper"><img alt="CwZ5b31VTocqFbxZY09csWLjnPd" src="https://cdnfile.sspai.com/editor/u_/cu71p75b34temtc0gru0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>使用 Default Browser 切换默认浏览器有两种方式。首先是通过菜单栏方式，点击菜单栏的应用图标，待弹出式窗口出现后，再点按对应的数字或者上下方向键，即可切换浏览器。第二种方式是通过快捷键，在应用的设置中，分配快捷键，比如 <code>Command - B</code>，待弹出式窗口出现后继续按数字键或者上下方向键。</p><figure class="image ss-img-wrapper"><img alt="MCyBbSHL3oh4kTx0xhGcaYfonyh" src="https://cdnfile.sspai.com/editor/u_/cu71p7db34temtc0grug.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Default Browser 还有一些贴心的功能。首先是菜单栏的图标有多种选择，包括浏览器的默认 icon 经纬地球，还有切换符号，还有我认为非常实用的方式：直观地在菜单栏显示当前默认浏览器的应用图标。</p><figure class="image ss-img-wrapper"><img alt="L5Ibbt3oWoNtJjxx5WZcv0Opnyf" src="https://cdnfile.sspai.com/editor/u_/cu71p7lb34temtjvmprg.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在应用的设置中，还可以设置隐藏菜单栏图标，只有在切换默认浏览器时，短暂地显示菜单栏图标。这样既可以保持菜单栏的简洁，同时能够在切换浏览器时提供提示。</p><p>Default Browser 还支持使用快捷指令、自动化、专注模式等方式来切换默认浏览器。添加包含 Default Browser 操作的快捷指令，并配置快捷键即可通过快捷指令来切换，在「系统设置 - 专注模式 - 过滤条件」中，选择 Default Browser 设置默认浏览器。自动化则是需要使用 <a href="https://apps.apple.com/app/id1594183810">Shortery</a>，设置时间、地点、Wi-Fi 等条件下，自动触发切换浏览器。</p><p>你可以在应用<a href="https://sindresorhus.com/default-browser#focus-filter">官网</a>购买 Default Browser，应用起始售价 4 美元。</p><h3>Cobalt：开源在线影音下载工具</h3><ul><li>平台：Web</li><li>关键词：下载器</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/ul0vcezb">@Snow</a>：Cobalt 是一款开源的在线下载工具，它可以帮你保存你喜欢的网站上的视频、音频、静态照片或 GIF 图。由于 Cobalt 依托于网页呈现，因而所有支持浏览器的平台均可适配。</p><p>Cobalt 的使用方法也非常简单，只需粘贴你想要下载的内容链接，点击 paste 按钮，Cobalt 就会自动解析并开始下载。当你的下载内容为图片时，Cobalt 会以网格图形式提供预览，方便你有选择性地下载；当下载内容为视频时，则可以在左下方的按钮选择下载纯视频/音频内容。</p><figure class="image ss-img-wrapper"><img alt="NOumbIWMgo7FzfxmVYrcqQVlnmd" src="https://cdnfile.sspai.com/editor/u_/cu71p7tb34temtc0grv0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>作为一款效率工具，Cobalt 可自定义项非常丰富。例如，你可以自定义优先下载的视频格式与分辨率、音频格式与比特率，针对 YouTube 部分内容，Cobalt 甚至还支持挑选不同语言音轨下载。它还提供了 4 种文件命名方式，方便用户管理下载内容。</p><figure class="image ss-img-wrapper"><img alt="DD2rb5UuboZoshxiJMxcZbOKnNB" src="https://cdnfile.sspai.com/editor/u_/cu71p85b34temtc0grvg.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>此外，Cobalt 还提供了一个测试版的媒体修复功能，可以将现有的编解码器数据复制到新的媒体容器中，或许可以解决一些信息丢失的问题，同时还可以提升与旧版软件的兼容性。你只需跳转至 Remux 一栏，并将需要处理的媒体文件拖入即可。</p><p>Cobalt 目前支持 YouTube、X（Twitter）、Pinterest、Tiktok、Instagram、Tumblr 等社交平台，不过由于是第三方工具，并不是每一项服务都非常稳定，例如支持的 B 站视频，目前就无法使用 Cobalt 下载。</p><p>你可以<a href="https://cobalt.tools/settings/download">点击此处</a>免费使用 Cobalt。</p><h3>DigiPaws：数字健康新方式</h3><ul><li>平台：Android</li><li>关键词：数字健康</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/5isr02uh">@Peggy_</a>：又一次坐上下班的公交车，车厢里此起彼伏的都是抖音、快手视频的声音，这边是小美的传奇经历，那边是大圣直击天灵盖的声音，还没等听完上个家人的惊爆价，转头又传来了秘闻要事。电子产品从来没有像今天这样分散着我们的注意力，吞噬着我们的时间。</p><p>现如今，越来越多手机厂商开始在手机里塞入各种数字健康功能来帮助用户戒除手机瘾，而类似的应用也层出不穷。今天介绍的 DigiPaws 也是一款主打数字健康的应用。其功能涵盖了随时开启专注时段并屏蔽特定应用、特定时间屏蔽特定应用、屏蔽关键词、手机使用统计等。优势在于功能更多、使用较为方便。</p><figure class="image ss-img-wrapper"><img alt="XDjAbcQcwoZDdzxCsKUcxx59ngc" src="https://cdnfile.sspai.com/editor/u_/cu71p85b34temtc0gs00.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在使用前我们需要授予 DigiPaws 相应权限，这里针对不同的功能选项，我们可以授予不同的无障碍权限，对于不需要的部分功能也可以选择不给予其对应权限。首先是专注模式，在这一功能下，我们可以根据自己的习惯来选择屏蔽导致我们分心的应用。每次要使用时，便可以点击开始专注，并灵活更改专注时长。</p><figure class="image ss-img-wrapper"><img alt="XHTsb8eawo0TgZxeaxacQBe5nBf" src="https://cdnfile.sspai.com/editor/u_/cu71p8lb34temupl6vd0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>其次便是应用屏蔽功能，我们可以选择所有想要屏蔽的应用，并设置警告界面出现的时间和具体内容，例如打开相应应用 5 分钟便弹出警告界面，当然我们可以结合自己的自律程度选择是否允许继续浏览应用。如果希望更加严格，那么便可以在到达规定时长后强制退出应用。当然了，我们安装应用的初衷毕竟还是为了娱乐，全天禁止的效果倒不如不安装。因而 DigiPaws 也允许我们设置多个时段，并在此时段内小小地「作弊」来使用某些已经屏蔽的应用。</p><figure class="image ss-img-wrapper"><img alt="X64abuAfyoL8AixA91Jczi4fnwh" src="https://cdnfile.sspai.com/editor/u_/cu71p8tb34temtjvmps0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>关键词屏蔽功能更加……一言难尽，只要手机屏幕上出现了我们添加的关键词，不论这个词出现在哪个位置，页面便会被快速定向到下面这个网页，轻易不要尝试。比如我添加了关键词「YouTube」，而这个应用又被我放在了主屏，所以就非常魔性地只要切到主屏，就得看一段劲歌热舞。</p><figure class="image ss-img-wrapper"><img alt="YrmfbvMOVol1orxWBpYczc8onle" src="https://cdnfile.sspai.com/editor/u_/cu71p8tb34temt4lrsig.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>其余功能由于篇幅有限，不再一一说明，如果你对 DigiPaws 感兴趣，可以通过 <a href="https://f-droid.org/packages/nethical.digipaws/">F-Droid</a> 下载体验。</p><h3>Horizon Live Wallpapers：跟随日月天气变化的动态壁纸</h3><ul><li>平台：Android</li><li>关键词：壁纸</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/liuxiaofengone">@化学心情下2</a>：虽说 Google Pixel 内置了动态壁纸，但官方原生提供的壁纸可谓是寥寥无几，尤其是我喜欢根据每天的日落日出来动态调整系统主题，所以很长一段时间都通过 Breezy Weather 实现背景壁纸的动态交替。不过每次看壁纸都是天气符号也略显单调，那么有没有同样支持浅色/深色主题切换，且支持节律的动态壁纸呢？</p><figure class="image ss-img-wrapper"><img alt="AlnIb9ha0o7G2cx6IR7c3jffnze" src="https://cdnfile.sspai.com/editor/u_/cu71p9db34temt4lrsj0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Horizon Live Wallpapers 是近期上架的一款融合了天气、月相、日出、日落的动态壁纸应用，支持根据日出日落生成不同的全天候动态壁纸。打开应用后，你可以选择壁纸集、设置天气和位置、选择控制方式、调整月相显示等等。</p><p>首先是壁纸集的设置，默认情况下是随机选定一个免费的壁纸，当然在这里面你可以单独选择壁纸的样式，大多数都提供了浅色/深色主题选项，除了免费的壁纸集也可以付费购买一些有更多样式的壁纸，比如有些付费壁纸除了白天和夜晚的主题之外，还有清晨以及傍晚的主题，一天下来会有更为丰富的视觉效果。</p><figure class="image ss-img-wrapper"><img alt="M5G4b9UX7ozaFxxQx5gcoQcUnyf" src="https://cdnfile.sspai.com/editor/u_/cu71p9lb34temupl6vdg.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>这些变化其实是基于当地位置和天气所产生的，因此在 Horizon Live Wallpapers 中你需要单独设置天气和位置，在获取定位并打开天气+天气效果之后，动态壁纸上将会呈现当地的天气，比如下雪、或者下雨的效果，这样你打开手机桌面就能知道户外的天气是什么，结合原本壁纸上的风景还是相当有趣的。</p><figure class="image ss-img-wrapper"><img alt="VNoWbripto8q8sxhwKlcXiiJnpf" src="https://cdnfile.sspai.com/editor/u_/cu71pa5b34temupl6ve0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>除了天气之外， Horizon Live Wallpapers 还支持设置月相，也可以在动态壁纸上呈现月亮的升起以及月圆月缺的效果，你还可以将小组件放置在桌面用来当作天气预报提示使用，当然比起专业的天气应用还是比较羸弱的，所以只能说是一个天气情况的补充而已。</p><figure class="image ss-img-wrapper"><img alt="OIBkbzzFdoGhIwx9WpIcXDswntf" src="https://cdnfile.sspai.com/editor/u_/cu71padb34temtjvmpsg.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>总的来说，Horizon Live Wallpapers 更像是结合了天气的动态壁纸应用，更为丰富的壁纸画面场景、结合月相、天气、以及日升日落的动态变化，让你的 Android 手机桌面变成一个不断变化的风景画，你可以在 <a href="https://play.google.com/store/apps/details?id=com.seresk.horizon.realtime.live.wallpapers">Play Store</a> 免费下载并使用。</p><h2>不容错过的 App 更新</h2><p>除了「新鲜」App，App Store 中的许多老面孔也在不断迭代、更新，增加更多有趣和实用的功能。少数派希望帮你筛选 App Store 中值得关注的 App 动态，让你快速了解 App 和开发者们的最新动态。</p><h3>Craft：新年首次更新及 2025 年更新计划</h3><ul><li>平台：iOS / iPadOS / macOS / Windows / Web / visionOS</li><li>关键词：文档协作、笔记工具</li></ul><p><a class="ss-atUser" href="https://sspai.com/u/whoops">@Vanilla</a>：继去年底的大版本更新之后，知名在线笔记应用 Craft 又在新年伊始为我们带来了 2025 年的第一次更新，同时也预告了新一年中的更新计划，包括了导航、文件组织、键盘快捷键、收藏与任务、搜索、图像处理、AI、Windows 应用以及提升性能，不过其中最让我感到兴奋的是标签功能，不知道等了这么久是否能在 2025 年如愿以偿。</p><p>在今年的第一个新版本中，最重要的一个更新内容是 Craft 支持了 Apple Intelligence 中的 Image Playground（图乐园）功能。如果你将设备更新到了 iOS 18.2 或者 macOS 15.2 以上的版本，同时设备支持 Apple Intelligence，那么就可以在 Craft 中直接调用图乐园功能来创建 AI 图像。</p><p>目前，我们可以在 Craft 中的封面图片、行内图片和胶带部分使用图乐园功能创建图像，只需要点击 Create 按钮即可在应用内唤起图乐园界面，然后我们可以通过文字描述、上传图片、预设模版等来创建图像，完成后直接插入到 Craft 中使用。</p><figure class="image ss-img-wrapper"><img alt="VvUdbOfSZoUmNfxZwJLcSnwRnKb" src="https://cdnfile.sspai.com/editor/u_/cu71palb34temtjvmpt0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="KKQtbT3daoEIERxmMd5cPjohnaf" src="https://cdnfile.sspai.com/editor/u_/cu71pb5b34temupl6veg.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="R0EYbPESSop408xTar0cSQsEnf9" src="https://cdnfile.sspai.com/editor/u_/cu71pb5b34temupl6vf0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>另外一个新版本主要更新内容是上下文菜单。Craft 在新版本中重新设计了上下文菜单的样式，放弃了 Craft 自己的 UI 风格，而是采用了 iOS 系统原生样式，因此在 iOS/iPadOS 平台上使用 Craft 时会看起来更加和谐。</p><p>新的上下文菜单现在已经深入了Craft 应用中的各个地方，包括文档视图、任务视图、日历视图等，我们都可以通过原生样式的上下文菜单和次级菜单来获得更多的操作功能。</p><figure class="image ss-img-wrapper"><img alt="QBUWbi7vcomQbOxN4TicTcoynJd" src="https://cdnfile.sspai.com/editor/u_/cu71pblb34temtjvmptg.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><figure class="image ss-img-wrapper"><img alt="DXWMbc3A4o9eYpxYv9ncOAkknih" src="https://cdnfile.sspai.com/editor/u_/cu71pbtb34temtc0gs0g.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>除了上述提到的更新内容，Craft 还在新版本中更新了图片库、增加了日期选择器上的字体大小选项、更新了拼写检查的实线颜色等，具体内容可以在官网更新日志中查看。Craft 可以在各个应用商店或者官网下载使用，目前已经支持了 iOS、iPadOS、macOS、Windows、Web 等多个平台，采用了免费使用 + 付费订阅的收费方式。</p><span class="ss-application">&nbsp;</span><h2>App 速报</h2><ul><li>Parallels Desktop（<a href="https://prf.hn/l/7R0aWV9">macOS</a>）：更新至 v20.2，针对 Apple Silicon 架构的 Mac 加入了 64 位 x86 系统模拟，并为 Windows 应用带来 Apple Intelligence 写作工具（Writing Tools）支持。</li><li>Start11（<a href="https://www.stardock.com/products/start11/history">Windows</a>）：更新至 v2.5，可以将任务栏停靠在显示器的任何一侧。同时修复了此前拖动任务栏按钮的错误、Win + X 菜单、将鼠标悬停在自定义开始按钮上时任务栏闪烁、对齐等问题。</li></ul><p>&gt; 下载少数派 <a href="https://sspai.com/page/client">客户端</a>、关注 <a href="https://sspai.com/link?target=https%3A%2F%2Fwww.xiaohongshu.com%2Fuser%2Fprofile%2F63f5d65d000000001001d8d4">少数派小红书</a>，感受精彩数字生活 🍃</p><p>&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95725</id>
            <title>从打工小妹到创业大佬：折腾但精彩的搞钱人生</title>
            <link>https://sspai.com/post/95725</link>
            <guid isPermaLink="false">https://sspai.com/post/95725</guid>
            <pubDate></pubDate>
            <updated>Mon, 20 Jan 2025 07:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 拼命搞钱, 创业, AI 算力池, 团队协作  
<br><br>  
总结: 本期节目嘉宾馒头从学生时代起就将“拼命搞钱”视为人生目标，经历了多种职业，最终成功建立了国内规模最大的 AI 算力池。她的职业生涯从单打独斗转变为团队协作，展现了她在时代风口上的灵活应变和创业精神。通过不断的尝试和折腾，馒头实现了自己的财富积累，并分享了她的创业经历和人生感悟。 </div>
                        <hr>
                    
                    <p>「拼命搞钱」是许多人常常挂在嘴边的玩笑口号，但本期节目的嘉宾馒头却从学生时代就将之视为人生目标。她曾经在工厂拧过螺丝，当过微商，开过淘宝，搞过代购，做过小红书博主，虽然历经各种折腾，但每一步都恰好踩在时代的风口上，也赚到了自己的第一二三四五桶金。</p><p>如今的她再度更换赛道，与合作伙伴共同建立了国内规模最大之一的 AI 算力池，她的工作模式也从单打独斗变成了团队协作。本期节目中，我们就来听馒头讲讲她的折腾人生。</p><h2>直接收听</h2><div class="ss-audioSource" id="136" src="https://v.typlog.com/sspai/8262719831_87638.mp3" title="从打工小妹到创业大佬：折腾但精彩的搞钱人生">Audio</div><h2>订阅《少数派播客》</h2><ul><li><a href="https://sspai.com/link?target=https%3A%2F%2Fsspai.typlog.io%2Ffeed%2Faudio.xml">节目 RSS 链接</a></li><li><a href="https://podcasts.apple.com/hk/podcast/%E4%B8%80%E6%B4%BE-podcast/id1483157529">Apple Podcasts</a></li><li><a href="https://sspai.com/link?target=https%3A%2F%2Fwww.xiaoyuzhoufm.com%2Fpodcast%2F5e280fb1418a84a0461fc567">小宇宙</a></li><li><a href="https://sspai.com/link?target=https%3A%2F%2Fopen.spotify.com%2Fshow%2F7pJ5EHWj7i5wQwqzY9kHr5">Spotify</a></li><li><a href="https://sspai.com/link?target=https%3A%2F%2Fpod.link%2F1483157529">其它平台</a></li></ul><h2>登场人物</h2><ul><li>馒头：爱折腾的创业女孩</li><li>张奕源 Nick：少数派编辑部成员</li></ul><p>欢迎写信至 <a href="mailto:nick@sspai.com">nick@sspai.com</a></p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95426</id>
            <title>让新知识成为冒险游戏，用 AI 重构「学习」这件事</title>
            <link>https://sspai.com/post/95426</link>
            <guid isPermaLink="false">https://sspai.com/post/95426</guid>
            <pubDate></pubDate>
            <updated>Mon, 20 Jan 2025 03:28:34 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: <游戏设计, 学习方法, AI, 心流体验>
<br>
<br>
总结: 本文探讨了如何将游戏设计的原理应用于学习过程中，以提高学习的乐趣和效率。作者通过与游戏设计专家的对话，意识到自己在学习中使用了类似于游戏的关卡体系、动态难度调节和即时反馈机制。具体方法包括搭建关卡、自由探索、构建认知地图和利用AI进行实时问题解答。通过这种方式，学习变得更加个性化和有趣，打破了传统学习的线性和枯燥。最终，作者强调学习应是一场充满好奇与惊喜的探索，而非痛苦的过程。 </div>
                        <hr>
                    
                    <p>最近和一位游戏设计专家聊天时，我突然意识到一件很有趣的事。</p><p>——我已经好几个月没打游戏了。</p><p>不是因为工作太忙，更不是因为突然想通了要戒掉游戏。恰恰相反——我发现了一个比游戏还让人上瘾的东西：用 AI 学点什么。</p><p>我大概和他讲了讲我的方法，那位游戏设计专家兴奋地打断了我：「等等，你知道你这种学习方式用上了游戏设计中最核心的几个原理吗？」</p><p>他说了一堆专业术语，什么「核心游戏循环」「心流状态」「学习曲线」「成就系统」，说白了就是：</p><p>我搭建了<strong>一个关卡体系、一个开放世界、一套游戏地图和成就系统、一条动态难度曲线、一个即时反馈的伙伴系统</strong>，从而达到了<strong>上瘾的心流体验。</strong></p><p>于是我决定把这个发现聊给更多人听。</p><h2>一、你一定见过的冒险游戏</h2><p>如果你玩过开放世界的冒险游戏，常见的设计是：你扮演一个勇者，站在一片未知的大陆上。这片大陆被迷雾笼罩，只有你所在的这座山丘周围是清晰可见的。远处若隐若现的城堡指引着你的终极目标，但通往那里的路径却有无数种可能。</p><p>这个游戏的妙处在于：首先，你不必按照固定的路线前进。你可能会被远处山顶的宝箱吸引，也可能对眼前的古老遗迹充满好奇，或者干脆沿着小溪一路探索。每个人都能找到自己感兴趣的方向。在最初，你遇到的都是些简单的挑战，比如跳过小溪，推开石头。而在城堡、迷宫、遗迹这种大型关卡，你会碰到 boss 还有传奇的装备。随着你获得新的装备和技能，你解锁了更丰富的游戏体验。</p><p>你有一个随从，当你找不到方向时，他不会直接告诉你答案，但总能在你需要时给出恰到好处的指引。</p><p>你会有一个地图系统，清晰地知道游戏的进度，随着探索的深入，地图上的迷雾渐渐散去。你不仅能看到更远的地方，还会发现原本看似毫无关联的区域居然暗藏着密道。每当你点亮一座灯塔，解开一个机关，获得一件新装备，都会感受到自己正在一步步接近那座神秘的城堡。</p><p>等等，这不就是……塞尔达传说、上古卷轴、辐射 4、艾尔登法环？</p><h2>二、我的方法非常简单：</h2><h3>1、搭建关卡，案例即关卡（Quests as Cases）</h3><p>在接触新领域后，先把教材扔给人工智能帮我总结知识点。我会让 AI 提出三到四个案例，把每个知识点都落到具体的例子里。我会直接学习具体案例，通过案例来反推这些知识点还有知识点之间的联系——它们可能是跨章节的。我不会从基础知识或基础概念开始学习，因为太抽象太零散。</p><p>这是把学习游戏化最关键的一步：我把线性的知识有机地聚拢成了几个游戏里的大型关卡，每开一个都有宝藏。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/08/5157f00216df46340696abb41a5c957c.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>编程的 4 大关卡，就像塞尔达荒野之息的四大神兽</figcaption></figure><p><strong>任务目标化：</strong>传统课本把知识切得太碎，而通过 AI 精选的大型案例学习，就像设计了几个核心关卡 —— 每个案例都会串联起多个知识点。比如在学习金融时，一个特斯拉股票定价的案例就会涉及市场预期、风险溢价、行业估值等多个概念。通过啃下这样三四个大案例，整个学科的核心知识点就都串联起来了。这种案例驱动的方式不仅让零散的知识有了联系，更让抽象的概念有了具体的应用场景。</p><p><strong>任务分解与分级：</strong>有些 boss 打不过时，我们会先去刷野怪。当 AI 给出一个复杂案例时，我会要求它进行任务分解。比如学习「设计模式」时，不直接理解完整的工厂模式，而是让 AI 把它拆解成递进的小任务：从简单工厂到抽象工厂。每个小任务都建立在前一个的基础上，形成清晰的进阶路径。如果某个概念特别难懂，就让 AI 设计更多的中间任务，确保学习过程始终处于适度挑战的状态。</p><h3>2、开放世界机制，自由探索（Open World Mechanism）：</h3><p>我一定从最简单最好理解的地方开始学，就像一个大地图，我会先去有趣的地方探索。这有点像玩游戏的新手教程，从试玩版开始进入一个领域，我很快就能有一些初始的认识。遇到不懂的，就和 AI 聊天，把新概念和已有的认知连接起来。</p><p>从原来跟着书的目录来看，变成了哪里好看就看哪里：</p><p><strong>兴趣优先机制：</strong>开放世界让你可以随时选择探索的方向。我的学习也是如此 —— 不必从「第一章第一节」开始，而是直接切入最感兴趣的知识点。编程不一定从变量定义开始，可以直接做一个简单的计算器，让兴趣指引学习的方向。</p><p><strong>开放式奖励：</strong>教材之外和 AI 聊出来的「白痴问题」往往藏着最有趣的知识点。比如「为什么钢琴键从 C 而不是 A 开始编号？这用户体验设计得也太差了。」这些看似无关的「彩蛋」不仅满足好奇心，更帮助建立起对领域的深层理解。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/08/440d8aa7860a02fc606ba56b66c664d6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>白痴的问题，非常有趣</figcaption></figure><p><strong>自我驱动的独特剧情：</strong>当你根据自己的理解和节奏探索时，就会形成个性化的学习体验。你的提问会引导 AI 展开新的知识分支，让学习变成一场由你主导的探险。这种「我在设计自己的探索」的掌控感，让学习始终充满动力。</p><h3>3、进度系统（Exploration Map）：构建认知地图</h3><p>AI 总结出来的知识点会作为我的学习地图和进度指示。在探索过程中，我会随时回看这些知识点，<strong>不是去看知识点具体的解释，只是用来确认自己的学习深度和方向。</strong></p><p>知识点的目录只是我反复确认的 todo list：</p><p><strong>可视化的成就系统：</strong>每掌握一个知识点，就像在探索地图上点亮一座灯塔，每理解一个概念间的联系，就像获得了一枚成就徽章。这些清晰的进度标记不仅让学习变得充满成就感，更像游戏中的成就系统一样，激励我们去解锁更多未知的领域。</p><p><strong>全局视图更新：</strong>随着探索的深入，认知地图也在不断进化。新掌握的知识就像驱散迷雾，让我们看到更远的地方；发现的知识联系则像开启密道，连通了原本看似独立的区域。这种实时更新的地图系统，让我们既能纵览全局，找准自己的位置，也能看清下一步该往哪里去。</p><h3>4、动态难度调节（Dynamic Difficulty）：成瘾性的心流体验</h3><p>在学习的过程中，绝对不要让自己卡壳。如果碰到抽象的概念，我一定会让人工智能具体化、案例化、打比喻，有了人工智能，那些半懂不懂的概念我可以迅速连接弄懂，这让我很有探索的惊喜感。</p><p>如果还是卡壳，我就马上切换方向，我把这个原则叫做「<strong>好吃的先吃</strong>」。</p><p><strong>我不要用意志力，只要持续的正反馈</strong>：</p><p><strong>实时调整难度：</strong>游戏最让人上瘾的机制之一是动态难度系统。在和 AI 学习时，它也会根据你的理解程度实时调整内容的复杂度。当发现概念太抽象，AI 会立即切换到更基础的解释方式；当掌握了基础知识，它又会引入更深层的内容。这种实时调整确保了学习始终处在「恰好有挑战」的状态。</p><p><strong>低成本试错：</strong>在和 AI 对话时，我经常用自己的话复述学到的概念。当理解有偏差时，AI 会及时指出并引导思考。当遇到理解障碍时，AI 会迅速提供替代路径。它不会固守一种解释方式，而是灵活调整策略，从不同角度帮助理解。这种低成本的试错机制正反馈极强，鼓励迭代。</p><h3>5、即时反馈伙伴系统（Instant Feedback System）：AI 作为 NPC</h3><p>还有一点很关键，当我们在进行聊天时地学习时，我们不仅在用「费曼学习法」，我们也有了一个极度聪明的随从，它可以帮我们：</p><p><strong>实时问题解答：</strong>有了 AI 作为 NPC，每个疑问都能得到即时回应。这种即时反馈让学习变成了一场流畅的对话，不会因为困惑而卡壳，极大地提升了学习的连续性和效率。</p><p><strong>虚拟团队：</strong>虽然自学是「单人游戏」，但 AI 能完美扮演不同角色 —— 有时是耐心的导师，有时是纠错的搭档，有时是启发思考的对手。这种虚拟团队的存在让独学不再孤独，每个想法都能得到及时的回应和深化。</p><h2>三、重新发现学习的乐趣</h2><p>听完他的分析，我才明白为什么这种方式这么让人上瘾，学习就像在玩塞尔达，而且它不是时间的消费，反而获得了生产力。</p><p>传统的学习会被大家视为寒窗苦读。固定低效的线性路径忽视了每个人的兴趣和节奏。即使你对后面的内容充满好奇，也得硬着头皮按部就班地先搞懂前置概念。</p><p>另外，进度总是模糊不清。除了考试成绩，很难知道自己到底学得怎么样。这种不确定感让学习之路显得格外漫长。而且反馈来得太慢，你可能要等到月考或期末，才知道自己理解得对不对。</p><p>最后，互动几乎不存在，当遇到困惑时，往往只能独自苦恼，小红书总是提倡死磕，真实情况是很容易把自己磕死。</p><p>是时候找回真正的乐趣了。</p><p>我之前写过一篇用人工智能速通考试的帖子，有读者觉得我只是在讲应试。成年人的世界，机会都稍纵即逝，最后脱颖而出的，往往是那些敢于在准备不足的情况下依然主动出击的人。他们在最短的时间内武装自己，然后直接撞上去。</p><p>这绝不是在否定多年实践基础知识的价值，也不是在鼓吹「速通主义」。而是在提倡一种更接近游戏开发的「最小可行产品」理念 —— 先快速搭建一个简单但能运行的原型，然后在实践中不断迭代，逐步补充基础知识。</p><p>出了学校才发现教育是一种昂贵的服务。大家发现了吗，有一个有趣的现象，在少数派，「在职备考」类的文章很容易上热搜。</p><p>我们中年人，很少考虑要不要当行业大咖，发愁的都是还有没有机会入行。</p><p>AI 不仅给了我们抓住机会的可能性，更让我们重新找回了学习最初的模样：那不该是痛苦地前行，而是一场充满好奇与惊喜的探索。每掌握一项新技能，都像获得了认知世界的新的眼睛，体验那些本来读不懂的生命里的惊喜。这是学习最动人的馈赠。</p><p>当然什么都想学只会害了你，再怎么学习仍然不是创造，而<strong>创造是更高级的快乐。</strong></p><p>这篇文章怎么来的：</p><ul><li><a href="https://sspai.com/post/94340" target="_blank">工作最忙的 78 天，我用 ChatGPT 考了 CFA</a></li><li><a href="https://sspai.com/post/95339" target="_blank">方法太好，不想公开，使唤 AI 干活的 100 个小妙招</a></li></ul><figure class="image ss-img-wrapper image_resized" style="width: 489px;"><img src="https://cdnfile.sspai.com/2025/01/08/0960d7f09d4916c97f69dfe48a7aa991.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>我搭了一个<strong>游戏大王</strong>：</p><figure class="image ss-img-wrapper image_resized" style="width: 481px;"><img src="https://cdnfile.sspai.com/2025/01/08/ea694d8437873db0462679f47865a765.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>这就是我那位游戏设计专家朋友：游戏大王</figcaption></figure><p>想和<strong>游戏大王</strong>聊天请访问：<br /><a href="https://chatgpt.com/g/g-677aa66cd5088191b3b0374676a71b58-you-xi-da-wang">https://chatgpt.com/g/g-677aa66cd5088191b3b0374676a71b58-you-xi-da-wang</a></p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95722</id>
            <title>派早报：TikTok 在美短暂下线后恢复服务</title>
            <link>https://sspai.com/post/95722</link>
            <guid isPermaLink="false">https://sspai.com/post/95722</guid>
            <pubDate></pubDate>
            <updated>Mon, 20 Jan 2025 00:51:35 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: TikTok, 原神, 诺基亚, 模因币  
<br><br>  
总结: TikTok在美国短暂下线后恢复服务，因特朗普承诺推迟强制出售的法律。原神开发商HoYoverse同意支付2000万美元和解FTC的指控，因未获家长同意收集儿童信息及误导抽卡规则。诺基亚曾意识到iPhone将改变行业，但未及时采取应对措施。特朗普发布名为TRUMP的模因币，引发市场热议。苹果暂时下线新闻摘要功能，因其效果不佳。Instagram将照片比例改为纵向矩形，可能影响用户的展示效果。 </div>
                        <hr>
                    
                    <h2>你可能错过的新鲜事</h2><h3>TikTok 在美短暂下线后恢复服务</h3><p>据新华社等报道，美国西部时间 19 日 9 时 30 分左右，随着美国当选总统特朗普明确承诺将在上任后为强制 TikTok 出售的法律提供宽限，TikTok 服务在短暂下线约半天后<a href="https://x.com/tiktokpolicy/status/1881030712188346459">宣布</a>恢复服务。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/20/8ffa3e354f7654bd18933ac42a54411e.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>此前在 17 日，美国最高法院以 9:0 一致驳回 TikTok 对「不卖就禁」法案的上诉。<a href="https://www.supremecourt.gov/opinions/24pdf/24-656_new_3dq3.pdf">判决书</a>说，该法案并不涉及 TikTok 所主张的言论审查问题，因为 TikTok 的性质特殊、易受敌对国家控制，即使不考虑平台上的内容，对其区分对待也是合理的。法案服务于保护美国用户数据免受外国侵害的重要利益，而禁止和剥离即使会限制言论，对于实现这一利益也是必要的；这本身已经满足对于此类规定的宪法标准，政府是否有其他动机不影响结论。</p><p>最高法院作出裁决后，拜登政府发表声明说，美国用户应该能继续使用 TikTok，但该平台必须出售；考虑到时间因素，实施法律的责任只有留给下一届政府。但 TikTok 声明，除非政府明确保证不会执行禁令，将被迫关停。</p><p>18 日晚，TikTok 通过弹窗通知美国用户，即将生效的法律迫使其暂停提供服务，但将努力尽快恢复，请用户保持关注。随后，TikTok 应用也从美国 App Store、Play Store 下架，其使用的甲骨文服务器被关停。对此，苹果发布一则<a href="https://support.apple.com/en-us/121596">声明</a>，表示有义务遵守其运营所在司法辖区的法律，并列举了同时下架的字节跳动及其子公司名下十余个应用，包括飞书海外版 Lark、社交平台 Lemon8 和卡牌游戏 Marvel Snap 等。</p><p>19 日早些时候，特朗普在社交媒体上<a href="https://truthsocial.com/@realDonaldTrump/posts/113855616848696050">发文</a>，呼吁各公司不要让 TikTok 处于停止运转状态。特朗普说，他将于 20 日发布一项行政令，推迟 TikTok 强制出售期限，此前任何帮助维持 TikTok 运转的公司将不承担法律责任。TikTok 随后声明感谢特朗普必要的澄清和保证，同时表示，将与特朗普一起寻找维持 TikTok 在美可用的长期解决方案。</p><p>据报道，陆续已有多个美国投资者或公司对接手 TikTok 美国业务表示出兴趣，其中最近被报道的是 AI 搜索服务 Perplexity，其于 18 日向字节跳动<a href="https://www.cnbc.com/2025/01/18/perplexity-ai-makes-a-bid-to-merge-with-tiktok-us.html">提议</a>与 TikTok US 合并。</p><h3>原神支付 2000 万美元和解隐瞒抽卡规则等指控</h3><p>1 月 17 日，美国联邦通信委员会（FTC）发布<a href="https://www.ftc.gov/news-events/news/press-releases/2025/01/genshin-impact-game-developer-will-be-banned-selling-lootboxes-teens-under-16-without-parental">公告</a>称，知名游戏《原神》的开发商 HoYoverse（米哈游海外实体）已同意支付 2000 万美元，以和解 FTC 对其提起的诉讼。</p><p>诉讼中，FTC <a href="https://www.ftc.gov/system/files/ftc_gov/pdf/cognosphere_complaint.pdf">指控</a>《原神》违反了美国《儿童在线隐私保护法》（COPPA），在未获得家长同意的情况下收集并与第三方共享 13 岁以下儿童的个人信息。此外，《原神》还就稀有战利品（俗称「抽卡」或「氪金」）的真实成本和获取概率误导玩家，其复杂的虚拟货币兑换系统和宣传活动让玩家难以了解真实花费和中奖几率，儿童和青少年尤其受此影响。</p><p>根据尚待法官批准的和解协议，除接受 2000 万美元罚款外，《原神》还被禁止在未经家长明确同意的情况下，向美国 16 岁以下未成年人提供「抽卡」，并必须披露抽卡的中奖概率、虚拟货币之间的兑换比例等。《原神》还同意删除此前未经家长同意收集的 13 岁以下儿童的个人信息，并在未来遵守儿童隐私的相关法规。作为协议的一部分，《原神》的开发商既不承认也不否认 FTC 的指控。</p><p>「抽卡」是东亚游戏开发商经常采用的一种创收机制，但《原神》是最早在亚洲之外获得成功的此类游戏之一。近年来，多国监管者都在尝试规范游戏中的随机奖励。在中国，根据文化部 2017 年《关于规范网络游戏运营加强事中事后监管工作的通知》，提供随机抽取的游戏须在官网公示类型和概率。</p><h3>诺基亚曾意识到 iPhone 将改变行业</h3><p>根据芬兰阿尔托大学于上周<a href="https://www.aalto.fi/en/news/the-visions-that-shaped-us-nokia-design-archive-opens-to-the-public-online">发布</a>的诺基亚设计历史档案，诺基亚内部曾在 iPhone 发布的第二天开展内部分享和点评，认为其触摸屏将树立新标准，并建议公司准备应对。</p><p>根据一份日期为 2007 年 1 月 10 日的<a href="https://repo.aalto.fi/uncategorized/IO_926740c7-5165-439a-a020-5205aeb4d4d5/">幻灯片</a>（由 Fahad Haq 发现并首先通过<a href="https://www.fahadx.com/posts/what-was-nokias-reaction-to-the-iphone-announcement-in-2007">博客</a>分享），诺基亚内部团队认为，「iPhone 触摸屏 UI 可能会树立新的先进标准」，「新 UI 可能会改变市场对出色用户体验的标准」。文档还关注到苹果与运营商 Cigular（后并入 AT&amp;T）的独家销售安排，认为运营商首次作出的多种让步可能改变整个市场。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/20/088d72db9e7e559c6509d77889e29889.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>一些观察也不尽正确。例如，文档认为 iPhone 不支持 JAVA 软件是一项劣势，并且基本忽略了 Safari 的重要意义。此外，文档还认为实体键盘将继续流行。不过，文档仍将 iPhone 虚拟键盘的预测输入和自动纠正列为「重要创新」，与当时普遍怀疑虚拟键盘的其他手机厂商形成对比。</p><p>文档最后就诺基亚的应对策略提出建议，包括与 T-Mobile 密切合作，为塞班 S60 系统开发触摸 UI 来「反击」，设立首席 UI 架构师岗位，「重新激发诺基亚跨平台和业务的 UI 创新」等。历史表明诺基亚并未及时采纳这些建议。</p><h3>特朗普发布模因币</h3><p>1 月 17 日，美国当选总统特朗普在社交媒体账号上<a href="https://x.com/realDonaldTrump/status/1880446012168249386">发帖</a>称，他即将推出名为 TRUMP 的模因币，通过 Solana 区块链运行，引发市场热议。</p><p>由于这离特朗普第二次就任总统仅剩三天，市场最初对此消息持怀疑态度，认为可能是炒作或被盗号。然而，相关帖文一直保持原样，且该币价格持续上涨至 7 美元以上，总市值进入加密货币前 30 名。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/20/78c645a9e48429788cd3ff3a81889675.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>特朗普在竞选中支持加密货币。2022 年至 2024 年期间，他曾推出以自己为主题的系列 NFT，还支持了一个名为 World Liberty Financial 的去中心化金融平台。据报道，特朗普预计将在上任第一天发布关于加密货币的行政命令。</p><p>模因币（meme coins）是指一种加密货币的价值主要来自于网络模因和社区炒作，而不是传统金融基本面。模因币的名称、标志和营销策略通常受到网络文化的影响，最著名的例子是与马斯克关联的「狗狗币」。模因币的价值往往在短暂暴涨后快速清空，因此经常被批评为发起者的敛财工具。</p><h3>Apple Intelligence 将暂时下线新闻摘要功能</h3><p>1 月 16 日，苹果发布 iOS 18.3 的第三个测试版，其中下线了「新闻和娱乐」类别应用的通知摘要功能。同时，其他类型应用的通知摘要改用斜体文本，以将其与传统通知区分开来。苹果还在「通知摘要」设置中增加了小字提示，表示这是测试版功能，可能会出现错误。</p><p>这项变更的背景是去年年底以来，BBC 等多家媒体<a href="https://www.bbc.com/news/articles/cd0elzk24dno">曝光</a>该功能效果不佳，篡改新闻含义。当时，BBC 一则新闻报道谋杀美国一家医保公司 CEO 的嫌疑人被捕，而 Apple Intelligence 将其总结为此人开枪自杀。类似地，对于《纽约时报》关于国际刑事法院下达以色列总理逮捕令的报道，总结版本称其已经被捕。苹果在被曝光后承诺将更新功能。对此次变更，BBC 发言人表示，很高兴苹果公司听取了该媒体的担忧，期待开展建设性合作。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/20/4e96f485060c28004daadb8d31e002b7.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>根据从 macOS 中提取的 Apple Intelligence <a href="https://raw.githubusercontent.com/Explosion-Scratch/apple-intelligence-prompts/refs/heads/main/com_apple_MobileAsset_UAF_FM_GenerativeModels/purpose_auto/ee07dac44d25ebae746b5a46da7515406c694085.asset/AssetData/metadata.json">配置文件</a>，通知摘要功能所用的提示词大意为：「 [原始通知内容] 你是总结通知的专家。你倾向于使用分句而不是完整句子。不要总结涉及性、暴力、仇恨、自残内容的通知。请将对输入内容的总结限制在 10 个单词以内。」该提示词通过苹果训练的本地模型运行。</p><h3>Instagram 将默认照片比例改为纵向矩形</h3><p>1 月 17 日，Instagram CEO Adam Mosseri 发帖表示，从周末起，Instagram 的个人主页照片网格将不再是正方形，而换成垂直矩形。这项功能最早在去年 8 月被曝光正在测试。</p><p>Mosseri 说，「我知道你们有人非常喜欢方形照片，这是 Instagram 的遗产。但目前，大多数上传的内容（包括照片和视频）都是垂直方向的，过多裁剪的效果会很讨厌。」他承认此次改变可能会「有点痛苦」，但这仅仅是短暂的，长远来看用户会喜欢新的布局。</p><p>过去，许多 Instagram 账号通过利用正方形网格，将一张大图切成若干等分后依次发布，从而在个人主页制作创意展示效果，新版布局将会破坏这些现有的特殊版式。修改发布后，许多明星的粉丝在社交网络上抱怨其偶像的主页效果严重受损。</p><figure class="ss-imgRows"><img alt="" src="https://cdnfile.sspai.com/2025/01/20/fe2ab9667b7d88e0ef2bd5a4e75cec15.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><img alt="" src="https://cdnfile.sspai.com/2025/01/20/e9668287d6c7609191b2f68cc5cc07ce.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>Instagram 没有提供返回旧版布局的选项。但如果单张照片在纵向布局下效果不佳，可以在其菜单中选择「编辑预览」，设置底色边框填充，以便在矩形布局中完整展示画面。</p><p>同期，Instagram 还更新了 Reels 短视频功能，包括增加长度至三分钟，支持查看好友点赞的视频等，还推出了一款类似剪映海外版 CapCut 的短视频编辑应用 Edits。这被认为是在 TikTok 被禁之际积极争取用户迁移。</p><h2>看看就行的小道消息</h2><ul><li>据韩国网站 <i>The Elec</i> <a href="https://www.macrumors.com/2025/01/18/oled-macbook-air-reportedly-delayed/">声称</a>，配备 OLED 显示屏的 MacBook Air 可能会在 2029 年左右发布，而不是原计划的 2027 年。据称，苹果做出这一决定的原因是去年推出的首款 OLED 显示屏 iPad Pro 机型的销量低于预期。</li><li>据 Mark Gurman <a href="https://www.bloomberg.com/news/newsletters/2025-01-19/sonos-woes-spark-apple-deal-talk-mail-with-ai-coming-in-macos-15-4-iphone-se?cmpid=BBD011925_POWERON">声称</a>，各苹果零售店的 iPhone SE (2022) 库存正在快速售罄，预示后续型号将在不久推出，并不会继续降价销售旧款。</li><li>Gurman 还声称，虽然苹果并无计划开发新的 AirPort 无线路由器，但由于日后 Apple TV 和 HomePod 将会内置的无线网络芯片 Proxima 足够强大，苹果可能允许让搭载该芯片的设备成为无线接入点，但不会作为重点功能宣传。</li></ul><h2>少数派的近期动态</h2><ul><li>少数派年度盘点回归，我们选出了 16 件产品，涵盖手机、平板电脑、智能家居、AI 模型等多个领域，并做成了富有交互感的页面，欢迎<a href="https://sspai.com/page/2024">查阅</a>并<a href="https://weibo.com/1914010467/Pa0U25do2">参与微博讨论和抽奖</a>。</li></ul><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/20/df349cead62c2c7cbc86e7e3897086e2.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><ul><li>春节来点「科技年货」送人送己，少数派年终大促销开始啦。<a href="https://sspai.com/post/95456"><strong>进一步了解</strong></a></li><li>假期将至，你的旅途游戏清单列好了吗？<a href="https://sspai.com/bullet/1736744010"><strong>来分享一下吧</strong></a></li></ul><h2>你可能错过的好文章</h2><ul><li><a href="https://sspai.com/post/95430">App+1 | 我开发了一款旅行记录 app，让照片背后的记忆更鲜活：山河旅记</a></li><li><a href="https://sspai.com/post/95677">从体验到 eSIM 都独此一家：和开发者聊聊 iPad 游戏</a></li><li><a href="https://sspai.com/post/95681">寻微致新：少数派的 2024 年度最佳好物</a></li><li><a href="https://sspai.com/post/95688">本周看什么 | 最近值得一看的 9 部作品</a></li><li><a href="https://sspai.com/post/95529">人人都可以上手的 Android TV 改造指南，让你也能开机就能看到节目</a></li><li><a href="https://sspai.com/post/95526">三平米搞定干湿分区、洗烘与智能马桶：我的卫生间改造复盘</a></li></ul>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95430</id>
            <title>App+1 | 我开发了一款旅行记录 app，让照片背后的记忆更鲜活：山河旅记</title>
            <link>https://sspai.com/post/95430</link>
            <guid isPermaLink="false">https://sspai.com/post/95430</guid>
            <pubDate></pubDate>
            <updated>Sun, 19 Jan 2025 06:37:54 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 旅行意义, 记忆保存, 山河旅记, 旅程管理  
<br><br>  
总结: 本文探讨了旅行的意义，强调旅行不仅是记录美景，更是保存独特体验和细节的过程。作者通过回顾自己的旅行经历，指出照片只能记录瞬间，而真正打动人心的细节往往被遗忘。为了解决这一问题，作者开发了「山河旅记」应用，旨在通过元数据、照片和足迹三大要素，帮助用户轻松记录和回顾旅行。应用强调无压记录，提供多维度的回顾方式，并确保数据安全。最终，作者希望「山河旅记」能成为每位旅行者的可靠伙伴。 </div>
                        <hr>
                    
                    <p style="margin-left: 0px;"><strong>Matrix 首页推荐</strong>&nbsp;</p><p style="margin-left: 0px;"><a href="https://sspai.com/matrix">Matrix</a>&nbsp;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&nbsp;<br />文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr /><h2>前言</h2><p>旅行的意义是什么？当我又一次翻看手机相册，这个老掉牙的问题浮现于脑海。记录美景，抑或放松身心？都行。这个问题的答案取决你自己。无不例外的是，我们都希望回忆起那段美好旅行时，嘴角能在生活的重压之下浮现出一抹微笑。</p><p>可照片依然鲜活，记忆却逐渐模糊，这些零散的照片就像没有标注的故事书，随着时间流逝，渐渐泛黄。</p><p>我去过的地方不算多，但每一次旅行都让我收获独特的体验，曾只身一人游历于香港，也曾与爱的人相拥于 4680 米的雪山，不论是遇见有趣的人和事，还是探索没有见过的街和景，旅行的每一个瞬间都另我十分享受。</p><p>但现在回看相册里成百上千张的照片，却只能帮我回忆起那些标志性的景点，真正打动人心的细节反而慢慢淡去了：是哪家不起眼的小店让我念念不忘？路边偶遇的街头艺人又是在古镇的哪个角落？</p><p>这种感觉很遗憾。照片记录的只是一个瞬间，但旅行的意义远不止于此。每一次旅行，都是由无数个精彩瞬间串联而成的故事，有时甚至是那些看似不够完美的片段，反倒成为了最珍贵的回忆。</p><p>我尝试过各种方式来保存这些记忆：</p><ul><li>写旅行博客 ，但经常因为太麻烦而半途而废。</li><li>发朋友圈，但朋友圈的内容总是经过精心P图和筛选的，不够真实。</li><li>专门的旅行应用，要么功能太复杂，要么强制社交，没有单纯记录旅行足迹的应用。</li></ul><p>我需要的是一个更简单的工具，就像一本随身携带的旅行笔记本。它应该足够轻便，让记录不再成为负担；它应该足够私密，让我可以毫无顾忌地记录每一个真实的想法；它还应该足够智能，能自动帮我串联起这些零散的记忆。</p><p>正是带着这样的念头，我开发了「山河旅记」这款应用。希望它能成为每个旅行者的可靠伙伴，帮助大家保存旅途中的点点滴滴。</p><h2>记录旅程的三个要素</h2><blockquote><p>阅读提示：本文中「旅程」指的是旅行中的最小单元，一次旅行可能会包含多个旅程。</p></blockquote><p>记录是为了日后能够借此回忆起当下，太简单会丢失很多细节，太复杂则又会带来负担，本末倒置，如何找到这个平衡点，是我在「山河旅记」开发过程中思考最多的问题。</p><p>于是我将旅程拆解为三个核心要素：元数据、照片、足迹。</p><p>元数据，是旅程的骨架。地点、时间、联系与标签，构成了一个旅程的基本定义。时间与地点描述了一个旅程是在何时发生的，比如：我在 2024 年去了一趟云南。而联系与标签则定义了旅程之间的关系，比如某次旅行中「洱海」的<strong>下一站</strong>是「丽江古城」，「丽江古城」与另一个 2023 年的旅程「平遥古城」之间可能又存在一个共同标签「<strong>古城打卡</strong>」。这些基本信息之间的关联让零散的记忆重新连接，帮助我们在未来更容易回忆起整个旅程的脉络。</p><p>照片，是旅程的眼睛。它不仅仅是记录美景的工具，更是生活瞬间的见证者。在「山河旅记」中，我们鼓励用户记录下更多真实的场景：排队等候时街边的烟火气，或是雨天被困在客栈时的慵懒时光。这些照片也许不够「精致」，但却最能勾起我们对旅途的真实回忆。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/07/513f07b27be37eb8a5ac8a659302000d.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>「山河旅记」使用「照片墙」和「图谱」多维度展现旅程</figcaption></figure><p>足迹，是旅程的血肉。它记录了我们在一个地方的完整活动轨迹，回想起一个人旅行的时候，我最喜欢的就是在古城里七拐八拐的探索，在路边随意坐下观察过往的行人……这些轨迹不仅仅是一条条线路，更是一个个故事。足迹是旅程中占比最大的部分，可也是我们忘的最快，最缺少记录的部分。当我垂垂老矣迈不动脚的时候，回看曾经因为逛古城而腿酸脚麻在一个街角瘫坐了半个小时，似乎也是种不错的体验。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/07/7044547455563ee29aace81a25c516f0.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>「山河旅记」中可以保存旅行足迹和细节，支持回放</figcaption></figure><p>元数据提供了旅程的基本框架，照片记录了视觉瞬间，而足迹则串联起整个旅程的完整故事，正是这三者相辅相成，才能真正帮助我们在未来重温旅行时的点点滴滴。</p><h2>无压记录旅程</h2><p>基于旅程的三个基本要素，需要思考的是如何使用最少的成本将这些要素记录下来。最佳的方式是<strong>让记录成为旅行的自然延伸，而不是额外的负担</strong>，所以我首先设计了「足迹旅程」这一概念。</p><p>在「山河旅记」，你可以轻松地记录一条完整的旅行足迹，只需要在旅程开始时启动「足迹」功能，结束时关闭即可，系统会自动为你生成一个「足迹旅程」。不论是旅程中拍摄的照片（需要在设置打开「随旅拍」功能哦），还是某次驻足停留，都会保存在足迹线上。</p><blockquote><p>示意图见本文第二张图。</p></blockquote><p>这是我最推荐的旅程记录方式、轻松且全面。但你我已经历了这么多的人生，那些走过的路不可能重走一遍。</p><p>为此，「山河旅记」还提供了另一种记录方式，你可以将手机内的旅行照片导入到应用，应用会自动读取照片信息中的位置与时间信息。</p><p>当然，如果一次性导入全部照片，无穷多的位置信息势必会造成旅程管理的混乱，这只会演变为另一个杂乱的「相册」。为了在导入便利性和功能完整性之间取得平衡，「山河旅记」做了适当的限制：同一次导入的照片都会被归类为同一个旅程，你可以从导入的照片中自由选择一个地点用作整个旅程的位置信息。</p><h2>为旅程建立联系</h2><p>旅程之间往往相互关联，就像我们总是怀揣着期待奔赴下一趟旅程，每一段旅途都可能与过往的经历产生共鸣，或是为未来的行程埋下伏笔。在「山河旅记」，你可以通过「联系」和「标签」功能，为每段旅程建立起独特的关联网络，让零散的旅行记忆串联成一幅完整的人生画卷。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/07/279a30cbc2f9c86f9fb3214a8f6c4e60.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>通过「图谱」查看旅程联系</figcaption></figure><p>相信有不少派友是知识管理爱好者吧，这个功能很容易让人联想到 Obsidian 的知识图谱。我也热爱做知识管理，所以在开发这款旅程管理工具时，特意将图谱功能融入到旅程管理的一环。</p><p>在「图谱」界面，你可以从宏观视角一览所有旅程，看到彼此交织的时空脉络。借助这种网状结构，不仅能轻松发现旅程间的潜在联系，更能脱离时间与空间的束缚，梳理出专属于你的旅行轨迹。这种体验，就像在进行一场别开生面的知识管理探索，让每一段旅程都焕发出新的意义。</p><p>最后也提一点个人建议：为了充分发挥图谱的优势，建议将一次完整的旅行细分为多个精细的「旅程」单元，并为它们添加相应的「联系」与「标签」。比如，你可以将一次长途旅行分解为不同的城市站点，并且为其打上有意义的标签。就像做知识管理一样！</p><h2>多维度的回顾方式</h2><p>「旅行图谱」功能在上文已经介绍过了，但「山河旅记」还提供了更多回顾旅程的视角。</p><h3>旅行地图与照片墙</h3><p>2024 年下半年，我正忙于装修小家，繁忙之中怀揣着对未来的期待。在设计书房区域时，我特意留出了一面大白墙，准备用来贴上过去和未来的旅行照片。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/07/0b554382a09b8c0149a3eac83154bd7a.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>类似这样</figcaption></figure><p>这个构想也激发了「山河旅记」的核心功能之一——旅行地图。应用的主界面是一张可自由缩放的世界地图，所有旅程都以缩略图标的形式呈现其上。通过这种地理位置的直观展示，你可以一目了然地看到哪些地方尚未探索，又是哪些角落让你流连忘返。</p><p>点击任一缩略图，便会展开旅程的详细内容——一面由照片组成的照片墙。受我曾经钟爱的拍立得相机启发，「山河旅记」在展示照片的时候特意复现了拍立得相片的效果，只需轻点任意照片缩略图，系统就会呈现一张类似风格的相片，为你的旅行记忆增添一份独特韵味。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/10/b08ac18a2ebb727a1e22e140157768b6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>旅行地图与照片墙</figcaption></figure><h3>回放足迹旅程</h3><p>每一段旅程都值得细细品味。在「山河旅记」，你可以通过回放功能重温整个足迹旅程，看着地图上的轨迹线随时间推移逐步展开，仿佛重返当时的时空。系统会根据你的行进距离，恰到好处地弹出你在某条街边拍摄的照片，或者某个角落的停留时间。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/07/9a8cfcb81a19d520ea90d9b6a5eba5e2.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>丰富的足迹回放功能</figcaption></figure><p>为了让你能够充分回顾各种旅程细节，「山河旅记」提供了丰富的回放选项：你可以通过进度条自由调节播放进度，选择 0.5 倍速细品精彩瞬间，或是使用 2 倍、4 倍速快览全程。</p><p>此外，在观看视角上，「山河旅记」提供了两种模式：「镜头更随」模式会沿着足迹线的绘制脚步，实时展示你曾经的行进轨迹；而「自由视角」则可以让你跳出局部，以全局视角审视整段旅程。</p><p>无论是短途漫步还是跨城远行，你都能找到最舒适的回顾方式。</p><h3>时间线</h3><p>「旅行地图」为我们展现了旅程的空间维度，而时间则是串联起人生故事的隐形纽带。在「山河旅记」，你可以通过时间线视图一览所有旅程，从最初的探索到最新的足迹，构成了一部完整的时光旅记。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/07/3b7ddb6fb67e1b8e2ced2ca0ba8faffc.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>按照时间顺序排布的旅程</figcaption></figure><p>通过右上角的视图切换按钮，你可以自由选择详细或简略的展示方式，找到最适合当下的浏览体验。</p><h3>日历</h3><p>时间线展现了旅程的宏观脉络，而日历视角则让旅程与具体日期紧密相连。在「山河旅记」，每个旅程都会在对应的日期上留下一个缩略图标。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/07/93f52af8d8a8dd9416c11b78c7ecb1ea.PNG?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>从日历视角可以清晰地查看旅程频次</figcaption></figure><p>这种传统的日历形式既方便查看过往旅程，也便于规划新的行程。无论是短期出行还是长途旅行，都能在日历中一目了然地看到时间分布。</p><h2>数据安全</h2><p>作为用户，我深知数据隐私的重要性。除了必要的在线工具外，我更倾向于选择无需服务器、无需登录、数据本地存储的应用，如使用 Trilium 做笔记、用 Bitwarden 管理密码。</p><p>作为开发者，我秉持这一理念。「山河旅记」采用完全的本地存储方案，你的所有旅程数据都将安全地保存在设备中，无需登录账号，无需联网，随时随地都能使用。</p><p>为了确保数据安全，应用还提供了 iCloud 备份和本地导出功能，让你的旅行记忆得到双重保障。</p><h2>未来的开发计划</h2><p>作为一款偏向小众的旅程管理应用，「山河旅记」目前的功能已经足够丰富了，但除了常规的细节优化和 bug 修复之外，我脑袋里还有非常多的想法想要去实现：</p><ul><li>记录更多的足迹细节</li><li>更全面的规划旅程功能</li><li>更多的数据导入方式</li><li>更多的旅程回顾方式</li><li>添加小组件支持</li><li>添加 Watch 端支持</li><li>快捷指令支持</li><li>……</li></ul><p>希望大家提出宝贵的意见，「山河旅记」接受任何类型的批评与建议。</p><h2>结语</h2><p>「山河旅记」诞生于一个简单的想法：让旅行记录回归本质，既不打扰当下的体验，又能完整保存每一段珍贵回忆。在开发的过程中，我始终坚持着这个初心，努力打造一个优雅且实用的旅程管理工具。</p><p>这是一款专注于个人使用的小众应用。它不追求社交分享，不渲染情绪，而是安静地做好记录这件事。希望它能成为你旅途中的可靠伙伴，让每一段旅程都能被妥善收藏。</p><p>欢迎各位在评论区留言，我将抽 10 位读者送上「山河旅记」的永久兑换码。</p><p>应用下载链接：「<a href="https://apps.apple.com/cn/app/%E5%B1%B1%E6%B2%B3%E6%97%85%E8%AE%B0-%E6%97%85%E8%A1%8C%E5%9C%B0%E5%9B%BE-%E8%B6%B3%E8%BF%B9%E5%9B%9E%E6%94%BE-%E6%97%85%E7%A8%8B%E5%9B%BE%E8%B0%B1-%E8%A1%8C%E7%A8%8B%E8%A7%84%E5%88%92/id6739272460">山河旅记</a>」</p><span class="ss-application">&nbsp;</span><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95677</id>
            <title>从体验到 eSIM 都独此一家：和开发者聊聊 iPad 游戏</title>
            <link>https://sspai.com/post/95677</link>
            <guid isPermaLink="false">https://sspai.com/post/95677</guid>
            <pubDate></pubDate>
            <updated>Sat, 18 Jan 2025 08:16:15 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: <iPad, 游戏体验, M4芯片, 消费补贴>
<br>
<br>
总结: 自去年国家与地方政府推出消费补贴活动后，许多人购买了新款电子设备，如iPad mini和Mac mini。iPad mini凭借A17 Pro芯片和较低售价，成为入门iPad的理想选择。游戏开发者们强调了iPad Pro在4K 120Hz屏幕支持下的游戏体验优势，尤其是搭载M4芯片的iPad Pro能够高帧率流畅运行多款游戏。新一代iPad在内存和图形渲染方面的提升，使得游戏表现更加出色，尤其是在《燕云十六声》等国产游戏中得到了充分体现。不同型号的iPad在性能和应用场景上各有优势，满足了用户的多样化需求。 </div>
                        <hr>
                    
                    <p>自从去年国家与地方政府推出各类家电及数码产品的消费补贴活动之后，我身边的不少朋友都购入了像是 iPad mini、Mac mini 等去年最新推出的电子设备。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/17/ebdd01e74b373176fa5ecdfd0b6355f7.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>虽然 iPad mini 的整体升级幅度不高，但是 A17 Pro 的出色性能、为 Apple Intelligence 做好准备的更大内存，加上相对而言不那么贵的售价，都让这款产品的吸引力更强，成为多数人入门 iPad 的最好选择。iPad 也可以说是一条「丰俭由人」的产品线，除了基础款的 iPad 和 iPad mini，还有配备桌面级芯片的 iPad Air 和 iPad Pro 可供选择。</p><p>近日，少数派有机会在一场 iPad 的游戏体验活动中，与国内几位出色的游戏开发者聊了聊，听他们讲述了 iPad 上的游戏能力，并亲自上手游玩了一番。</p><p>作为 iPad Pro 系列的最大优势，对于 4K 120 Hz 屏幕显示的支持无疑能大幅增加 iPad 的游戏游玩体验，也是游戏开发者们不容忽视的特性。在分享过程中，几位开发者也都不约而动地提到了这一点。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/17/cff51bfcb5a03bc6d97699ec16f6e8ed.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /><figcaption>《绝区零》在以手柄游玩时会自动调整键位布局。</figcaption></figure><p>米哈游和库洛游戏的开发者告诉我们，在他们各自的游戏作品《绝区零》和《鸣潮》中，得益于 M4 芯片的强大计算能力，他们在新款 iPad Pro 上很顺畅地就完成了对 ProMotion 自适应刷新率的支持。目前，搭载了 M4 芯片的 iPad Pro 也是唯一可以高帧率完美运行这两款游戏的移动设备。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/17/46568528897eb131f50eb0dedf6fea38.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>就像旗下的其它游戏一样，米哈游也在紧锣密鼓地为更多设备适配《绝区零》的高帧率游玩能力；据透露，在即将上线的 1.5 版本中，这款游戏也将支持在 iPhone 上以高帧率进行游玩。</p><p>作为今年 App Store Awards 年度应用大奖的提名作品，《绝区零》也充分利用到了 iPad 软硬件方面的各种特性。比如在连接手柄游玩时，《绝区零》界面中的相关交互元素布局会略微更改，进一步避免按钮和控件遮挡游戏画面；而有了 MetalFX 超采样图形技术的支持，iPad 可以使用计算密集度更低的画帧实现复杂场景的快速渲染，带来更为逼真的沉浸式体验。《鸣潮》也同样支持了 MetalFX 超采样技术，可以在 iPad Pro 上呈现更好的画面表现。</p><p>《无限暖暖》可以说是近期话题度颇高的游戏，多家国外知名的游戏媒体都给这款游戏打出了 8-9 分的高分。这款游戏是由知名游戏开发商叠纸游戏打造的暖暖系列第五代作品，游戏采用 Unreal Engine 5 引擎研发，在开放世界的类型下融入了换装、解密、平台跳跃等多种元素。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/17/668b3352255f4da7a3cf06450a8cd5bf.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>开发团队表示，得益于了新一代 iPad 系列机型在内存方面的提升，《无限暖暖》得以在 OIT (顺序无关的透明渲染)技术 方面有更好的性能和效果表现。尤其是在 iPad Pro 系列机型上，游戏可以实现更多层数的毛发渲染，获得更大的光照贴图空间并支持更多实时光源，让游戏的夜晚场景更具有沉浸感。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/17/700110a8853c45ed1aa025b26000e110.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>在现场，来自网易的工作人员向我们宣布了旗下最新推出的历史武侠题材动作游戏《燕云十六声》正式登陆移动平台的消息。这款结合了中国武侠武功及开放世界元素的游戏可以说是继《黑神话：悟空》和《无限暖暖》之后，又一款关注度与话题度均颇高的国产主机游戏作品，现在你也可以在手机或 iPad 上玩到这款游戏了。</p><p>开发团队表示，《燕云十六声》的角色模型和场景均是基于 4K-8K 分辨率的写实品质开发，有了超视网膜 XDR 显示屏的加持，移动端玩家也能享受到极高的模型精细度和真实游玩感受。尤其是在 iPad 有了硬件级光线追踪能力之后，《燕云十六声》能够做到大世界地图的实时渲染，带来更接近主机品质的游戏视觉体验。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/17/1ebe9f8bea771e7996e758e2247860c0.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>从现场的实际游玩体验来看，即使是在配置相对较低的 iPad mini 上，几款游戏在图形画面和游玩流畅程度方面都已经拥有了相当出色的效果，这一点也并不令人意外，新款 iPad mini 配备的 A17 Pro 性能足够强大，并且还有大内存的加持。不过实际对比下来，还是能够直接看出 iPad mini 上的画面渲染分辨率要明显不如另外两款 iPad。</p><p>搭载 M2 芯片的 iPad Air 则在画面表现和游玩体验方面有更好的平衡，但在高画质选项下游玩依然能够感到明显的卡顿，诸如上述几款开放世界类型的游戏对于实时渲染的算力要求还是相对比较高的，如果想追求移动平台上最好的游戏画面表现，支持 4K 120Hz 的 OLED 屏 iPad Pro 无疑是唯一的选项；只不过在这么大的屏幕下的手持游玩体验实际上是不如像是 iPad mini 这类尺寸更加适中的大屏设备的，如果要在 iPad Pro 上玩游戏，再配一个手柄体验会更好。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/17/6a880d656b52e3e0b037adeee7e25532.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>几位开发者的分享也让我们看到了，在像是 iPad 这样的平台上玩游戏的巨大潜力，在移动设备上随时随地玩主机级游戏，如今慢慢成为了现实。一些细节体验上的差距客观存在，但很高兴看到 iPad 已经能够做到如此地步，也期待未来能够做得更好。</p><p>当然，iPad 的游戏体验只是其性能与应用场景的一隅，不同形态的 iPad 在不同场景下都有广泛的应用。比如 iPad mini 就是非常实用的提词器或随身电子书；iPad Pro 则有最强的性能和最好的配置，影音娱乐体验是第一梯队，随身处理轻量工作也绰绰有余，甚至还能用来完成绘画、视频剪辑等各类创意工作；iPad Air 则在价位和功能方面有更好的平衡，同样也能出色完成各类需求。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/17/21627f8ec697fd6f79c5e97929fab1cb.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>为了庆祝蛇年新春到来，目前部分 Apple 经销商门店推出了 iPad 系列优惠活动，购买最新 iPad mini 及 iPad Air 系列机型可以享受到 1000 元起的立减优惠，并且获赠由中国联通提供的一年 300GB 专属 eSIM 流量，是个除了「国补」之外同样值得考虑的选择。</p><figure class="image ss-img-wrapper"><img src="https://cdnfile.sspai.com/2025/01/17/1e67bcb6d6d5c63dd8005a46a579ba59.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>拓展阅读</strong></p><ul><li><a href="https://sspai.com/post/91834">三支队伍三个故事，他们用 Mac 和 iPad 挥洒创意</a></li><li><a href="https://sspai.com/post/91034">探索创作方法、找寻创作核心，他们选择了 iPad</a></li><li><a href="https://sspai.com/post/93112">AI 而不得，未来可期：iPad mini (A17 Pro) 体验</a></li></ul><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
        <item>
            <id>https://sspai.com/post/95681</id>
            <title>寻微致新：少数派的 2024 年度最佳好物</title>
            <link>https://sspai.com/post/95681</link>
            <guid isPermaLink="false">https://sspai.com/post/95681</guid>
            <pubDate></pubDate>
            <updated>Fri, 17 Jan 2025 10:00:00 GMT</updated>
                
                
            <content:encoded>
                <![CDATA[
                    
                        <div> 关键词: 创新, 消费电子, 用户体验, 2024年度盘点  
<br><br>  
总结: 本文探讨了消费电子领域对创新的追求，指出尽管行业面临同质化和瓶颈期，但微小的创新和工匠精神同样重要。少数派编辑部发起了2024年度盘点活动，旨在发现那些提升用户体验的产品和服务。活动评选出16款涵盖多个领域的产品，并以《小丑牌》为设计灵感展示年度最佳。文章鼓励读者分享自己的看法和喜爱的产品。 </div>
                        <hr>
                    
                    <p>潮流总在不断变化，但消费电子领域对「创新」追求是永恒的。</p><p>过去的 2024 年，有人认为各类消费电子产品都在不可避免地走向同质化，颠覆性的创新愈发稀缺，整个行业都在迈入「瓶颈期」；但也有人认为，并非只有革命性的突破才值得被关注，那些看似微小、却能直击用户痛点的灵光乍现，那些潜移默化地引导着良性用户体验的锲而不舍，背后所体现的工匠精神和长期主义也同样值得我们肯定。</p><p>因而和往年一样，少数派编辑部发起了「<a href="https://sspai.com/page/2024" target="_blank">2024 年度盘点</a>」活动，旨在从细微之处发现创新，致敬那些在 2024 年为你我带来过好体验的产品和服务。</p><span class="ss-linkCard">&nbsp;</span><p>正如你在页面中所看到的那样，2024 年的年度盘点，我们以 2024 年最具话题性的热门独立佳作《小丑牌》为设计灵感，用一张张精美的卡牌展现少数派编辑部心中的 2024 年度最佳（小丑牌本身当然也在其中，但你得找找）。</p><figure class="image ss-img-wrapper image_resized" style="width: 450px;"><img alt="LwwPbQZR0oflSTxAKmMcD8MjnSe" src="https://cdnfile.sspai.com/editor/u_/cu4r0n5b34temtc0glrg.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p>本次活动共评选出 16 款产品，涵盖了手机、平板电脑、智能家居、AI 模型等多个领域，更多细节还请移步活动页面查看。</p><p>需要大家注意的是，就像每一局小丑牌都有自己的解法和适合的牌组，我们这套「2024 年度最佳」卡牌构筑肯定也做不到面面俱到：如果里面恰好有你喜欢的产品，不妨点击右上角将这些「牌」打出去，或者干脆保存一组你最爱的「2024 同花顺」吧，得多少分无所谓，自己喜欢最重要——但如果你还有更多想分享的内容，我们也期待听到你的声音。</p><figure class="image ss-img-wrapper"><img alt="BJVXbD0eTo3Dqfxcmk5cRI5tnrz" src="https://cdnfile.sspai.com/editor/u_/cu4r0ndb34temtc0gls0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" /></figure><p><strong>出牌吧朋友！</strong></p><p style="margin-left: 0px;">&gt; 关注&nbsp;<a href="https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4" target="_blank">少数派小红书</a>，感受精彩数字生活 🍃</p><p style="margin-left: 0px;">&gt; 实用、好用的 <a href="https://sspai.com/mall">正版软件</a>，少数派为你呈现 🚀</p>
                ]]>
            </content:encoded>
        </item>
        
    </channel>
</rss>